//////////////////////////////////////////////////////////////
//  Game Engine Standard Modules - OPENFPS MENU MODULE
//  Concept and code by thenerd, Summer 2012!
//////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////
//  DOCUMENTATION
//////////////////////////////////////////////////////////////
// Functions
// UI_MENU_INIT() - Call to load menu resources.
//  UI_MENU_LoadImages()
//  UI_MENU_SetVariables()
//
// UI_MENU_UPDATE() - Update menu system.
// 						 *Important note: This is persistant and
// 						 is used in both the menu and engine.
// 
//
//////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////
//  CONSTANTS
//////////////////////////////////////////////////////////////

#Constant M_MENU_MAIN 1
#Constant M_MENU_SPLASH 2

//////////////////////////////////////////////////////////////
//  UDTS
//////////////////////////////////////////////////////////////

type MenuUIType
	initialized As Boolean
	mode As integer
	setflag As Boolean
	mouseclickflag As Boolean
Endtype

//////////////////////////////////////////////////////////////
//  FUNCTIONS
//////////////////////////////////////////////////////////////

function UI_Menu_Init():
	// This should only be done once, at the beginning of the program.
	UI_WriteLog(UI_Green,"// MENU MODULE //: Starting to init menu module.")
	Global MenuUI As MenuUIType
	UI_Menu_SetVariables()
	UI_Menu_Regenerate()
	UI_Menu_SetMode(M_MENU_SPLASH)
	MenuUI.initialized = 1
	UI_WriteLog(UI_Green,"// MENU MODULE //: Menu module init'd!")
Endfunction

Function UI_Menu_Regenerate():
	//for use after fatal screen loss
	UI_Menu_CreateResources()
	UI_WriteLog(UI_Green,"// MENU MODULE //: Menu Resources Regenerated.")
Endfunction

Function UI_Menu_CreateResources():
	UI_WriteLog(UI_Yellow,"// MENU MODULE //: UI_Menu_CreateResources:Standard Load Images")
	load image "Media\Images\Interface\feather.png",MenuImage1
	Load Image "Media\Images\Interface\logo2.png",MenuImage2
	Load Image "Media\Images\Interface\menu-background.png",MenuImage4
	Load Image "Media\Images\Interface\menu-loading.png",MenuImage6
	Load Image "Media\Images\Interface\button-gray.png",MenuImage7
	Load Image "Media\Images\Interface\feather.png",MenuImage8
	Load Image "Media\Images\Interface\menu-background-metal.png",MenuImage9
	Load Image "Media\Images\Interface\button-menu.png",MenuImage10
	
	UI_WriteLog(UI_Yellow,"// MENU MODULE //: UI_Menu_CreateResources:Make Render Targets")
	Ik Create Render Target MenuImage3,600,240,0
	Ik Create Render Target MenuImage5,178,(60*5)
	
	UI_WriteLog(UI_Yellow,"// MENU MODULE //: UI_Menu_CreateResources:Resize Images")
	xlogowidth=Screen.Width-(UI_mywindow.xwidth*16)-24
	Ik Resize Image MenuImage2,xlogowidth,xlogowidth*0.5,1
	Ik Resize Image MenuImage4,Screen.Width,Screen.Height,1
	Ik Resize Image MenuImage6,Screen.Width,Screen.Height,1

	
	//character wave animation for button
	Global CharacterWaveIcon
	CharacterWaveIcon = Dxs Create Sprite("Media\Images\Interface\char-wave.png")
	Dxs Set Sprite Frameset CharacterWaveIcon,16,1
	
	Global CharacterWaveIcon2
	CharacterWaveIcon2 = Dxs Create Sprite("Media\Images\Interface\char-wave-2.png")
	Dxs Set Sprite Frameset CharacterWaveIcon2,16,1
	
	Global CharLoadingIcon
	CharLoadingIcon = Dxs Create Sprite("Media\Images\Interface\char-loading.png")
	Dxs Set Sprite Frameset CharLoadingIcon,16,1

	global MenuImage11
	MenuImage11 = Dxs Create Sprite("Media\Images\Interface\pyramid.png")
	
	UI_WriteLog(UI_Yellow,"// MENU MODULE //: UI_Menu_CreateResources:Create Button Placeholders")
	Draw To Image MenuImage5
	x=0:y=0:paste image MenuImage7,x,y,1:UI_CenterText(3,x+(178/2)-8,y+11,"Single "+chr$(230))
	y=y+60:paste image MenuImage7,x,y,1:UI_CenterText(3,x+(178/2)-8,y+11,"Multi "+chr$(230)+chr$(230))
	y=y+60:paste image MenuImage7,x,y,1:UI_CenterText(3,x+(178/2)-8,y+11,"Training")
	y=y+60:paste image MenuImage7,x,y,1:UI_CenterText(3,x+(178/2)-8,y+11,"Options")
	y=y+60:paste image MenuImage7,x,y,1:UI_CenterText(3,x+(178/2)-8,y+11,"Quit")
	Draw To Bitmap 0
	
	UI_WriteLog(UI_Yellow,"// MENU MODULE //: UI_Menu_CreateResources:Done!")
Endfunction

function UI_Menu_SetVariables():
	Global MenuImage1 : MenuImage1 = Reserve Free Image()
	Global MenuImage2 : MenuImage2 = Reserve Free Image()
	Global MenuImage3 : MenuImage3 = Reserve Free Image()
	Global MenuImage4 : MenuImage4 = Reserve Free Image()
	Global MenuImage5 : MenuImage5 = Reserve Free Image()
	Global MenuImage6 : MenuImage6 = Reserve Free Image()
	Global MenuImage7 : MenuImage7 = Reserve Free Image()
	Global MenuImage8 : MenuImage8 = Reserve Free Image()
	global MenuImage9 : MenuImage9 = Reserve Free Image()
	Global MenuImage10 : MenuImage10 = Reserve Free Image()
	
	global MapPlaceHolderImg : MapPlaceHolderImg = Reserve Free Image()
	global FirstTimeTraining as boolean : FirstTimeTraining= 1
	global ButtonSinCurve as float 		: ButtonSinCurve = 0
	Global MenuSidebarHeight : MenuSidebarHeight = (ScreenHeight/UI_mywindow.yrow)+12
	Global MenuSidebarWidth : MenuSidebarWidth = (ScreenWidth/UI_mywindow.yrow)+12
	Global Menu3dCam As Integer			: Menu3dCam = Reserve Free Camera()
	Global Menu3dImg As Integer 		: Menu3dImg = Reserve Free Image()
	Global Menu3dObj As Integer : Menu3dObj = Reserve Free Object()
	Global Menu3dObjFX As Integer : Menu3dObjFX = Reserve Free effect()
	Global Menu3dRTarget As Integer : Menu3dRTarget = Reserve Free Image()
	Global loadingpercent As Integer : loadingpercent = 0
	Global prompttextone$
	global prompttexttwo$
	global prompttitle$
	
	dim MenuUI_DrawCalls(1,64) as string
	MenuUI_DrawCalls(0,M_MENU_MAIN)="UI_Render_M_MENU_MAIN"
	MenuUI_DrawCalls(0,M_MENU_SPLASH)="UI_Render_M_MENU_SPLASH"
	
	MenuUI_DrawCalls(1,M_MENU_MAIN)="UI_Render_U_MENU_MAIN"
	MenuUI_DrawCalls(1,M_MENU_SPLASH)="UI_Render_U_MENU_SPLASH"
	
	UI_WriteLog(UI_Green,"// MENU MODULE //: Menu Variables Setup")
Endfunction

Function UI_Menu_SetMode(mode_new As byte):
	 MenuUI.setflag=1
	 MenuUI.mode=mode_new
	 Local mode_new_int As Integer
	 mode_new_int = mode_new
	 UI_ClearAllGuis()
	 UI_WriteLog(UI_Green,"Switching Menu Ui - Mode flag "+remove$(MenuUI_DrawCalls(0,mode_new_int),"UI_Render_M_"))
endfunction

function UI_Menu_Update():
	If MenuUI.initialized = 0 Then UI_Menu_Init()
	`UI_CenterText(3,ScreenWidth/2,100,"Menu Initialized and Running! *Debug*")
	If MenuUI.setflag=1 Then Call Function Ptr (Get Ptr To Function(MenuUI_DrawCalls(0,MenuUI.mode))):MenuUI.setflag=0
	Call Function Ptr (Get Ptr To Function(MenuUI_DrawCalls(1,MenuUI.mode)))
	UI_Menu_CheckGadgets()
Endfunction

Function UI_Menu_CheckGadgets():
	If mouseclick()=1 and MenuUI.mouseclickflag=0
		Select UI_MouseOveredGadget$
		Endselect
	endif
	MenuUI.mouseclickflag=mouseclick()
endfunction

Function UI_Render_M_MENU_MAIN():
	y=360
	x=120:y=y-60
	UI_AddCenterGadgetToScreen("button_quit",x,y,"UI_button")
	UI_AddMOuseOverImageToGadget("button_quit","UI_buttonhover")
	UI_AddTitleToGadget("button_quit",3,x-8,y-14,"Quit")
	UI_AddInfoToGadget("button_quit",1,"Quit Biostorm.",1)
	x=120:y=y-60
	UI_AddCenterGadgetToScreen("button_options",x,y,"UI_button")`-gray")`
	UI_AddMOuseOverImageToGadget("button_options","UI_buttonhover")
	UI_AddTitleToGadget("button_options",3,x-8,y-14,"Options")
	UI_AddInfoToGadget("button_options",1,"Change the game configuration.",1)
	x=120:y=y-60
	UI_AddCenterGadgetToScreen("button_training",x,y,"UI_buttonhighlight")
	UI_AddMOuseOverImageToGadget("button_training","UI_buttonhover")
	UI_AddTitleToGadget("button_training",3,x-8,y-14,"Training")
	UI_AddInfoToGadget("button_training",1,"Load the training mission. Useful for beginners!",1)
	x=120:y=y-60
	UI_AddCenterGadgetToScreen("button_multiplayer",x,y,"UI_button")`-gray")
	UI_AddMOuseOverImageToGadget("button_multiplayer","UI_buttonhover")
	UI_AddTitleToGadget("button_multiplayer",3,x-8,y-14,"Multi "+chr$(230)+chr$(230))
	UI_AddInfoToGadget("button_multiplayer",1,"Join/start a multiplayer game.",1)
	x=120:y=y-60
	
	UI_AddCenterGadgetToScreen("button_singleplayer",x,y,"UI_button")`gray")
	UI_AddMOuseOverImageToGadget("button_singleplayer","UI_buttonhover")
	UI_AddTitleToGadget("button_singleplayer",3,x-8,y-14,"Single "+chr$(230))
	UI_AddInfoToGadget("button_singleplayer",1,"Play the singleplayer campaign.",1)
	
	UI_AddGadgetToScreen("button_dev",ScreenWidth-40,ScreenHeight-40,"skull32_1")
	UI_AddMOuseOverImageToGadget("button_dev","skull32_2")
Endfunction

Function UI_Render_U_MENU_MAIN():
	ui_RenderBackdrop()
	`ButtonSinCurve=wrapvalue(ButtonSinCurve+5.0*TBM)
	`UI_SetGadgetDiffuse("button_training",215+(sin(ButtonSinCurve)*40),215+(sin(ButtonSinCurve)*40),215+(sin(ButtonSinCurve)*40))
Endfunction

Function ui_RenderBackdrop():
	paste image MenuImage4,0,0,1
	`texture object MenuScreenObject,MenuImage4
	UI_PutWindow(-24,-24,16,MenuSidebarHeight)
	Paste Image MenuImage5,31,35,1
Endfunction


Function UI_Render_M_MENU_SPLASH():
	Global SplashTicker : Splashticker = 0
	Global Splashalpha as float: Splashalpha = 0
	Global SplashStartTime : SplashStartTime = Hitimer()
Endfunction

Function UI_Render_U_MENU_SPLASH():
	D3d_Box 0,0,Screen.Width,Screen.Height,Rgb(0,0,0)
	
	seconds=(Hitimer()-SplashStartTime)/(125/2)
	line1$=Left$("The Game Creators",seconds-4)
	line2$=Left$("Community Development "+chr$(230),seconds-4)
	UI_CenterIconText(3,Screen.Width/2,Screen.Height/2,line1$,0)
	UI_CenterIconText(3,Screen.Width/2,(Screen.Height/2)+32,line2$,1)
	
	If seconds>40 Then Splashalpha = Clamp(Splashalpha+(1*TBM),0,255)
	Dxs Begin Sprite Render MenuImage11
	Dxs Set Sprite Alpha MenuImage11,splashalpha
	Dxs Draw Sprite MenuImage11,(Screen.Width/2)-128,(Screen.Height/2)-280+(TBM_StandardSin*16.0)
	Dxs End Sprite Render MenuImage11
	
	`UI_CenterIconText(3,ScreenWidth/2,(ScreenHeight/2)+64,str$((Hitimer()-SplashStartTime)/1000),1)
	
	If seconds>160 or mouseclick():
		if SplashTicker=0:
		UI_FadeManager.state=UI_FADEIN
		Splashticker=1
		If Screen.Width<800 And Screen.Height<600:
			UI_FadeManager.target=M_MENU_GENERICPROMPT
			prompttextone$="The game isn't designed to run at a low resolution."
			prompttexttwo$="Playing at this resolution may cause accessibility problems."
			prompttitle$="Low Resolution Warning"
		else:
			UI_FadeManager.target=M_MENU_MAIN
		Endif
		endif
	endif
Endfunction
