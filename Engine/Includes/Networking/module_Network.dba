//////////////////////////////////////////////////////////////
//  Game Engine Standard Modules - NETWORK MODULE
//  Concept and code by thenerd, Summer 2012!
//////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////
//  CONSTANTS
//////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////
//  UDTS
//////////////////////////////////////////////////////////////

type t_Networking
    MyIP as string
    MasterServerOnline as integer
    GameServer as integer
    GameClient as integer
endtype

//////////////////////////////////////////////////////////////
//  MAIN FUNCTIONS
//////////////////////////////////////////////////////////////

Function Network_Init(): 
    UI_WriteLog(UI_Blue,"Network Module Started.")
    global Network as t_Networking
    Game.ip = Network_GetIP()
    Network.MyIP = Game.ip
    Winsock Make
    UI_WriteLog(UI_Blue,"Got Client IP:"+Game.ip)
    
    Network_MasterServer_Connect()
    
    //call geolocation API to determine location
    Location_Grab()
    global Location_Name as string
    global Location_Icon as integer
    Location_Name = Location_GetString()
    Location_Icon = Location_Icon_Load()
    
Endfunction

Function Network_Update():
    WINSOCK REFRESH CHANNELS
    
    if Network.MasterServerOnline = 1 then Network_MasterServer_Update()
    if Network.GameServer = 1 then Server_Update() //server
    if Network.GameClient = 1 then Client_Update() //client
    
Endfunction

function Network_CloseConnections():
    if Network.GameClient = 1 then Client_Terminate() //client
    if Network.GameServer = 1 then Server_Terminate() //server
endfunction

Function Network_Terminate():
    if MasterserverOnline = 1 then Network_MasterServer_Disconnect()
    Network_CloseConnections()
    winsock clean up
Endfunction

//////////////////////////////////////////////////////////////

Function Network_GetIP():
	ip$="error"
	port=443 : access=0x00800000
	http connect "www.fpscreator.com",port
	action$="" : return$=HTTP REQUEST DATA("POST", "gamehost/whatismyip.php",action$,access)
	If return$ <> "":
		ip$=return$
	endif
	Http Disconnect
	if ip$="error" then UI_WriteLog(UI_RED,"IP RECV ERROR")
Endfunction ip$

//////////////////////////////////////////////////////////////
//  End of code.
//////////////////////////////////////////////////////////////

