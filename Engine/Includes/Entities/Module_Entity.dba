//////////////////////////////////////////////////////////////
//  Game Engine Standard Modules - ENTITY MODULE
//  Concept and code by thenerd, Summer 2012!
//////////////////////////////////////////////////////////////

type ArrayPTR
    arraysize as integer
    ptr as dword
endtype

type EntReference
    name as string
    attributes as arrayptr
    values as arrayptr
endtype

function Ent_Init():
    //Init entity system
    global NumEntities
    dim Entities() as EntReference
    //init entity types
    EntityType_Init()
ENDFUNCTION

function EntSave(file$):
    if file exist(file$) then delete file file$
    file_temp = find free file()
    open to write file_temp,file$
    write string file_temp,"entsave"
    for i = 0 to NumEntities-1:
    WRITE LONG file_temp,1 //flag for an entity existing
    WRITE STRING file_temp,Entities(i).name
    if Entities(i).attributes.arraysize>0:
         // list entity attributes
         local dim tempattributes() as string
         local dim tempvalues() as string
         link array tempattributes(),Entities(i).attributes.ptr
         link array tempvalues(),Entities(i).values.ptr
         for ii = 0 to Entities(i).attributes.arraysize-1:
              if array index valid(tempattributes(ii)):
              if EntityType_SaveParam(tempattributes(ii))=1
                  WRITE LONG file_temp,2
                  WRITE STRING file_temp,tempattributes(ii)
                  WRITE STRING file_temp,tempvalues(ii)
              endif
              endif
         next ii
         unlink array tempattributes()
         unlink array tempvalues()
         undim tempattributes()
         undim tempvalues()  
    endif
    next i
    WRITE LONG file_temp,-1 //flag for end of file
    close file file_temp
ENDFUNCTION

function EntLoad(file$):
    if file exist(file$):
        file_temp = find free file()
        open to read file_temp,file$
        header$ = "null"
        read string file_temp,header$
        if header$="entsave"
            DeleteAllEntities()
            read long file_temp,flag
            while flag > 0:
                select flag
                    case 1
                        //next value will be an entity name
                        read string file_temp,latestname$
                        EntAdd(latestname$)
                    endcase
                    case 2
                        //next values will be entity attrib/value
                        read string file_temp,latestattrib$
                        read string file_temp,latestvalue$
                        EntAddAttribute(EntGetReference(latestname$),latestattrib$,latestvalue$)
                    endcase
                endselect
                //loop through all dat shit
                read long file_temp,flag
            endwhile
        endif
        close file file_temp
    else
        `UI_WriteLog(UI_GREEN,"*Entity file invalid!")
    endif
ENDFUNCTION

function DeleteAllEntities():
    //cleanup entity data first
    `MDL_Cleanup()
    
    While NumEntities > 0:
        `UI_Editor_AddToConsole("Removing entity "+str$(n))
        EntDelete(EntGetName(NumEntities - 1))
    Endwhile
	 `undim Entities()
    `NumEntities=0
   `Ent_Init()
ENDFUNCTION

function GetNumEntities():
    //get number of entities
ENDFUNCTION NumEntities

function EntAdd(name as string):
    //Add entity
    array insert at bottom Entities()
    Entities().name = name
    
    local dim tempattributes(32) as string : Entities().attributes.ptr = get arrayptr(tempattributes())
    local dim tempvalues(32) as string : Entities().values.ptr = get arrayptr(tempvalues())
    Entities().attributes.arraysize = 0
    Entities().values.arraysize = 0
    unlink array tempattributes()
    unlink array tempvalues()
    undim tempattributes()
    undim tempvalues()
    
    inc NumEntities,1
ENDFUNCTION

function EntDelete(name as string):
    //Delete entity
    for i = 0 to NumEntities-1:
        if Entities(i).name = name:
            //delete dependencies
            EntityType_Delete(i)
            local dim tempattributes() as string
            local dim tempvalues() as string
            link array tempattributes(),Entities(i).attributes.ptr
            link array tempvalues(),Entities(i).values.ptr
            undim tempattributes()
            undim tempvalues()
            Entities(i).attributes.ptr=0
            Entities(i).values.ptr=0
            clear array item Entities(),i
            array delete element Entities(),i
            dec NumEntities,1
        endif
    next i
ENDFUNCTION

function GetEntExist(name as string):
    local return_exist as boolean : return_exist = 0
    //get entity id
    for i = 0 to NumEntities-1:
        if Entities(i).name = name then return_exist = 1
    next i
endfunction return_exist

function GetEntIDExist(id):
    local return_exist as boolean : return_exist = 0
    //get entity id
    for i = 0 to NumEntities-1:
        if i = id then return_exist = 1
    next i
endfunction return_exist


function EntGetName(id):
    //Get entity name
   local name as string
   name = Entities(id).name
ENDFUNCTION name

function EntSetName(id,new_name as string):
    //set entity name
    Entities(id).name = new_name
ENDFUNCTION

function EntGetReference(name as string):
    local return_reference as integer
    //get entity id
    for i = 0 to NumEntities-1:
        if Entities(i).name = name then return_reference = i
    next i
ENDFUNCTION return_reference

function EntAddAttribute(id,attribute_name as string, attribute_value as string):
    // add attribute to entity
    local dim tempattributes() as string
    local dim tempvalues() as string
    
    link array tempattributes(),Entities(id).attributes.ptr
    link array tempvalues(),Entities(id).values.ptr
    
    `array insert at bottom tempattributes()
    `array insert at bottom tempvalues()
    tempattributes(Entities(id).attributes.arraysize)=attribute_name
    tempvalues(Entities(id).values.arraysize)=attribute_value
    inc Entities(id).attributes.arraysize,1
    inc Entities(id).values.arraysize,1
    
    unlink array tempattributes()
    unlink array tempvalues()
    undim tempattributes()
    undim tempvalues()
ENDFUNCTION

function EntSetAttribute(id, attribute_name as string, attribute_value as string):
    // set entity attribute
    local dim tempattributes() as string
    local dim tempvalues() as string
    link array tempattributes(),Entities(id).attributes.ptr
    link array tempvalues(),Entities(id).values.ptr
    
    `array insert at bottom tempattributes()
    for i = 0 to Entities(id).attributes.arraysize-1:
        if tempattributes(i)=attribute_name:
            tempvalues(i)=attribute_value
        endif
    next i
    
    unlink array tempattributes()
    unlink array tempvalues()
    undim tempattributes()
    undim tempvalues()
ENDFUNCTION

function EntDeleteAttribute(id, attribute_name as string):
    // set entity attribute
    local dim tempattributes() as string
    local dim tempvalues() as string
    link array tempattributes(),Entities(id).attributes.ptr
    link array tempvalues(),Entities(id).values.ptr
    
    `array insert at bottom tempattributes()
    for i = 0 to Entities(id).attributes.arraysize-1:
        if tempattributes(i)=attribute_name:
            array delete element tempattributes(),i
            array delete element tempvalues(),i
            Entities(id).attributes.arraysize = Entities(id).attributes.arraysize - 1
            exit
        endif
    next i
    
    unlink array tempattributes()
    unlink array tempvalues()
    undim tempattributes()
    undim tempvalues()
ENDFUNCTION

function Ent_GetExists(name as string):
    local returnint as integer
    //get entity id
    for i = 0 to NumEntities-1:
        if Entities(i).name = name then returnint = 1
    next i
ENDFUNCTION returnint

function Ent_GetInt(id, attribute_name as string):
    local returnint as integer
    returnint=val(EntGetAttribute(id,attribute_name))
ENDFUNCTION returnint

function Ent_GetDword(id, attribute_name as string):
    local returndword as dword
    returndword=val(EntGetAttribute(id,attribute_name))
ENDFUNCTION returndword

function Ent_GetFloat(id, attribute_name as string):
    local returnfloat as float
    returnfloat=val(EntGetAttribute(id,attribute_name))
ENDFUNCTION returnfloat

function EntGetAttribute(id, attribute_name as string):
    // get entity attribute
    `UI_WriteLog(UI_Yellow,"Fetch "+attribute_name)
    
    //debug: check if the entity exists
    if GetEntIDExist(id):
    else:
        `ui_writelog(ui_Red,"Trying to read entity attrib '"+attribute_name+"' but ent doesnt exist!")
        message "Trying to read entity attrib '"+attribute_name+"' but ent doesnt exist!"
    endif
    
    local dim tempattributes() as string
    local dim tempvalues() as string
    link array tempattributes(),Entities(id).attributes.ptr
    link array tempvalues(),Entities(id).values.ptr
    local return_string as string : return_string = "0"
    
    for i = 0 to Entities(id).attributes.arraysize-1:
        if tempattributes(i)=attribute_name:
            return_string = tempvalues(i)
        endif
    next i
    
    unlink array tempattributes()
    unlink array tempvalues()
    undim tempattributes()
    undim tempvalues()
ENDFUNCTION return_string

function Ent_Update():
    //update entity system
	 EntHandleEntities()
	y=60 : x= 10
	 `UI_Text(1,x,y,"OpenFPS Entities - "+str$(NumEntities)+" Current") : y=y+12
	`EntListDebug()
	remstart
    for i = 0 to NumEntities-1:
    Entityname$=Entities(i).name
    Entityptr$=str$(Entities(i).attributes.ptr)
	entitytext$=""
	if Entities(i).attributes.arraysize>0:
		 // list entity attributes
		 local dim tempattributes() as string
		 local dim tempvalues() as string
		 link array tempattributes(),Entities(i).attributes.ptr
		 link array tempvalues(),Entities(i).values.ptr
		 for ii = 0 to Entities(i).attributes.arraysize-1:
			  if array index valid(tempattributes(ii)):
			  entitytext$=entitytext$+tempattributes(ii)+"="+tempvalues(ii)+";"
			  endif
		 next ii
		 
		 unlink array tempattributes()
		 unlink array tempvalues()
		 undim tempattributes()
		 undim tempvalues()  
		 
    endif
	 `UI_Text(1,x,y,str$(i)+") "+Entityname$+", values "+entitytext$) : y=y+12
    next i
    remend
ENDFUNCTION

function EntListDebug():
    y = 0
    set cursor 0,0
    for i = 0 to NumEntities-1:
    print "$" + Entities(i).name
    if Entities(i).attributes.arraysize>0:
         // list entity attributes
         local dim tempattributes() as string
         local dim tempvalues() as string
         link array tempattributes(),Entities(i).attributes.ptr
         link array tempvalues(),Entities(i).values.ptr
         for ii = 0 to Entities(i).attributes.arraysize-1:
              if array index valid(tempattributes(ii)):
                print "  -"+tempattributes(ii)+"="+tempvalues(ii)
              endif
         next ii
         unlink array tempattributes()
         unlink array tempvalues()
         undim tempattributes()
         undim tempvalues()  
    endif
    next i
ENDFUNCTION

function EntHandleEntities():
    //handle general updates
    
    //handle all the entities
    for i=0 to NumEntities-1:
        EntityType_Update(i)
    next i
Endfunction

//////////////////////////////////////////////////////////////////////////
// End of code
//////////////////////////////////////////////////////////////////////////

