remstart
/////////////////////////////////////////////////////
//
// OpenFPS ENTITY MANAGEMENT Core Module
//
// Created by menderleit
// Maintained by menderleit
//
/////////////////////////////////////////////////////

----- Changelog:
(01/13/11) - menderleit - Created
(01/13/11) - menderleit - Setup basic UDTs and functions.
(01/14/11) - menderleit - Added SetAttribute function.
(01/14/11) - menderleit - Added a section on some proposed changes.

----- To-Do:
https://www.pivotaltracker.com/projects/202025

----- Purpose:
Handling all objects and entities in the game.

----- Dependancies and Conflicts:
-None-

----- Other Notes:
* All functions in this module are prefixed with ENT_
    
/////////////////////////////////////////////////////
remend


// Constants describing the various Entity types. Use when calling ENT_* functions.
#constant ENT_STATIC    1
#constant ENT_DYNAMIC   2
#constant ENT_ENTITY    3
#constant ENT_TERRAIN   4
#constant ENT_PHYSICS   5

// Constants describing various attributes.
#constant ENT_ATTR_NAME     1
#constant ENT_ATTR_OBJ      2
#constant ENT_ATTR_TID      3


// UDTs for the various Entity types.
// DEVNOTE: The attributes are just examples at this point...
type ENT_STATIC_TYPE
    name as string
    obj as integer
endtype

type ENT_DYNAMIC_TYPE
    name as string
    obj as integer
endtype

type ENT_ENTITY_TYPE
    name as string
endtype

type ENT_TERRAIN_TYPE
    name as string
    tid as integer
endtype

type ENT_PHYSICS_TYPE
    name as string
    obj as integer
endtype


remstart
////////////////////////////////////////////////////////////////////////////////////////////////
// DEVNOTE: Proposed changes to the setup of the entities.
// These types should not be used at this point, as this is only a description
// of proposed changes to the module.
////////////////////////////////////////////////////////////////////////////////////////////////

// Main list of objects/entities.
type ENT_MAIN_TYPE
    name as string          // Name of this object/entity.
    etype as integer        // Type of object/entity. (object, light, zone, etc...)
endtype

// Info about the Object type.
type ENT_OBJECT_TYPE
    parent as integer       // Array index number of the parent object/entity in the main list.
    obj as integer          // Object resource number.
    pos as integer          // vector3 position info.
    rot as integer          // vector3 rotation info.
    material as integer     // material info
    shader as integer       // shader number. (0 = no shader)
    dynamic as boolean      // YES = Dynamic object, NO = Static object.
    physics as boolean      // YES = Affected by physics, NO = NOT affected by physics.
endtype

// Info about the Terrain type.
type ENT_TERRAIN_TYPE2
    parent as integer       // Array index number of the parent object/entity in the main list.
    tid as integer          // Terrain resource number.
    width as float          // Width of Terrain.
    depth as float          // Depth of Terrain.
    heightmap as integer    // Resource number for the Heightmap.
    texture as integer      // Resource number for the Texture.
    detail as integer       // Resource number for the DetailTexture.
endtype

// Info about the PointLight type.
type ENT_POINTLIGHT_TYPE
    parent as integer       // Array index number of the parent object/entity in the main list.
    pos as integer          // vector3 position info
    range as float          // Range of light.
    color as dword          // Color of light. ( dword = rgb(255,255,255) )
endtype

// Info about the Zone type.
type ENT_ZONE_TYPE
    parent as integer       // Array index number of the parent object/entity in the main list.
    pos as integer          // vector3 position info.
    size as integer         // vector3 size info.
    rot as integer          // vector3 rotation info.
    action as integer       // Info about what happens when you enter the Zone.
endtype

global dim ENT_Entity() as ENT_MAIN_TYPE
global dim ENT_Object() as ENT_OBJECT_TYPE
global dim ENT_Terrain() as ENT_TERRAIN_TYPE
...
...
a = AddEntity("ThatBoxInTheCorner", ENT_OBJECT)
SetAttribute( a, ENT_ATTR_SIZE, ENT_SetV3(x#,y#,z#) )

function SetAttribute(EntityIndex as integer, Attribute as integer, Value as string)
    Success as boolean
    Success = 0
    EntityType = ENT_Entity(EntityIndex).etype
    if EntityType = ENT_OBJECT
        for i=0 to ENT_NumObjects-1
            if ENT_Object(i).parent = EntityIndex
                select Attribute
                    case ENT_ATTR_SIZE
                        set vector3 ENT_Object(i).size, ENT_GetV3x(Value), ENT_GetV3y(Value), ENT_GetV3z(Value)
                        Success = 1
                        exitfunction Success
                    endcase
                endselect
            endif
        next i
    endif
endfunction Success

function ENT_SetV3(x as float, y as float, z as float)
    V3 as string
    V3 = str$(x) + ";" + str$(y) + ";" + str$(z)
endfunction V3

function ENT_GetV3x(V3 as string)
    temp$ = ""
    i = 0
    repeat
        inc i, 1
        temp$ = temp$ + mid$(V3, i)
    until mid$(V3, i+1) = ";"
    x# = val(temp$)
endfunction x#

function ENT_GetV3y(V3 as string)
    temp$ = ""
    i = 0
    repeat
        inc i, 1
    until mid$(V3, i) = ";"
    repeat
        inc i, 1
        temp$ = temp$ + mid$(V3, i)
    until mid$(V3, i+1) = ";"
    x# = val(temp$)
endfunction x#

function ENT_GetV3z(V3 as string)
    temp$ = ""
    i = 0
    for j=0 to 1
        repeat
            inc i, 1
        until mid$(V3, i) = ";"
    next j
    repeat
        inc i, 1
        temp$ = temp$ + mid$(V3, i)
    until mid$(V3, i+1) = ""
    x# = val(temp$)
endfunction x#

/////////////////////////////////////////////////////////////////////////////////////////////////
remend


// Initialize the ENTITY module.
// Creates dynamic arrays, sets up globals, and initializes variables to 0.
function ENT_Init()
    global dim ENT_Static() as ENT_STATIC_TYPE
    global dim ENT_Dynamic() as ENT_DYNAMIC_TYPE
    global dim ENT_Entity() as ENT_ENTITY_TYPE
    global dim ENT_Terrain() as ENT_TERRAIN_TYPE
    global dim ENT_Physics() as ENT_PHYSICS_TYPE
    global ENT_NumStatics as integer
    global ENT_NumDynamics as integer
    global ENT_NumEntities as integer
    global ENT_NumTerrains as integer
    global ENT_NumPhysics as integer
    ENT_NumStatics = 0
    ENT_NumDynamics = 0
    ENT_NumEntities = 0
    ENT_NumTerrains = 0
    ENT_NumPhysics = 0
endfunction

// Terminate the ENTITY module.
// Releases all the dynamic arrays (effectively deleting all entries)
// DEVNOTE: Does NOT delete referenced resources like objects and images...
function ENT_Terminate()
    undim ENT_Static()
    undim ENT_Dynamic()
    undim ENT_Entity()
    undim ENT_Terrain()
    undim ENT_Physics()
    ENT_NumStatics = 0
    ENT_NumDynamics = 0
    ENT_NumEntities = 0
    ENT_NumTerrains = 0
    ENT_NumPhysics = 0
endfunction

// Add a new Entity.
// Returns the IndexNumber of the new Entity.
function ENT_AddEntity(ObjectID as integer, EntityName as string, EntityType as integer)
    NewIndex as integer
    select EntityType
        case ENT_STATIC:
            array insert at bottom ENT_Static()
            ENT_Static().name = EntityName
            ENT_Static().obj = ObjectID
            NewIndex = ENT_NumStatics
            inc ENT_NumStatics, 1
        endcase
        case ENT_DYNAMIC:
            array insert at bottom ENT_Dynamic()
            ENT_Dynamic().name = EntityName
            ENT_Dynamic().obj = ObjectID
            NewIndex = ENT_NumDynamics
            inc ENT_NumDynamics, 1
        endcase
        case ENT_ENTITY:
            array insert at bottom ENT_Entity()
            ENT_Entity().name = EntityName
            ENT_Entity().obj = ObjectID
            NewIndex = ENT_NumEntities
            inc ENT_NumEntities, 1
        endcase
        case ENT_TERRAIN:
            array insert at bottom ENT_Terrain()
            ENT_Terrain().name = EntityName
            ENT_Terrain().obj = ObjectID
            NewIndex = ENT_NumTerrains
            inc ENT_NumTerrains, 1
        endcase
        case ENT_PHYSICS:
            array insert at bottom ENT_Physics()
            ENT_Physics().name = EntityName
            ENT_Physics().obj = ObjectID
            NewIndex = ENT_NumPhysics
            inc ENT_NumPhysics, 1
        endcase
    endselect
endfunction NewIndex

// Delete the Entity specified by EntityIndex and EntityType.
// DEVNOTE: Caller are responsible for deleting resources like objects and images.
//          This function only deletes the entry in the Entity system.
function ENT_DeleteEntity(EntityIndex as integer, EntityType as integer)
    if EntityIndex >= 0
        select EntityType
            case ENT_STATIC:
                if EntityIndex < ENT_NumStatics and ENT_NumStatics > 0
                    array delete element ENT_Static(), EntityIndex
                    dec ENT_NumStatics, 1
                endif
            endcase
            case ENT_DYNAMIC:
                if EntityIndex < ENT_NumDynamics and ENT_NumDynamics > 0
                    array delete element ENT_Dynamic(), EntityIndex
                    dec ENT_NumDynamics, 1
                endif
            endcase
            case ENT_ENTITY:
                if EntityIndex < ENT_NumEntities and ENT_NumEntities > 0
                    array delete element ENT_Entity(), EntityIndex
                    dec ENT_NumEntities, 1
                endif
            endcase
            case ENT_TERRAIN:
                if EntityIndex < ENT_NumTerrains and ENT_NumTerrains > 0
                    array delete element ENT_Terrain(), EntityIndex
                    dec ENT_NumTerrains, 1
                endif
            endcase
            case ENT_PHYSICS:
                if EntityIndex < ENT_NumPhysics and ENT_NumPhysics > 0
                    array delete element ENT_Physics(), EntityIndex
                    dec ENT_NumPhysics, 1
                endif
            endcase
        endselect
    endif
endfunction

// Sets an attribute of the specified Entity.
// Returns 1 if successful, or 0 if failed. (TRUE/FALSE)
// DEVNOTE: Value is defined as a string to enable passing of any type of value.
function ENT_SetAttribute(EntityIndex as integer, EntityType as integer, Attribute as integer, Value as string)
    Success as boolean
    Success = 0
    if EntityIndex >= 0
        select EntityType
            case ENT_STATIC
                if EntityIndex < ENT_NumStatics and ENT_NumStatics > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Static(EntityIndex).name = Value
                            Success = 1
                        endcase
                        case ENT_ATTR_OBJ
                            ENT_Static(EntityIndex).obj = val(Value)
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
            case ENT_DYNAMIC
                if EntityIndex < ENT_NumDynamics and ENT_NumDynamics > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Dynamic(EntityIndex).name = Value
                            Success = 1
                        endcase
                        case ENT_ATTR_OBJ
                            ENT_Dynamic(EntityIndex).obj = val(Value)
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
            case ENT_ENTITY
                if EntityIndex < ENT_NumEntities and ENT_NumEntities > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Entity(EntityIndex).name = Value
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
            case ENT_TERRAIN
                if EntityIndex < ENT_NumTerrains and ENT_NumTerrains > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Terrain(EntityIndex).name = Value
                            Success = 1
                        endcase
                        case ENT_ATTR_TID
                            ENT_Terrain(EntityIndex).tid = val(Value)
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
            case ENT_DYNAMIC
                if EntityIndex < ENT_NumPhysics and ENT_NumPhysics > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Physics(EntityIndex).name = Value
                            Success = 1
                        endcase
                        case ENT_ATTR_OBJ
                            ENT_Physics(EntityIndex).obj = val(Value)
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
        endselect
    endif
endfunction Success
