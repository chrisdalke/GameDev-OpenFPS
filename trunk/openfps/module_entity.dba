remstart
/////////////////////////////////////////////////////
//
// OpenFPS ENTITY MANAGEMENT Core Module
//
// Created by menderleit
// Maintained by menderleit
//
/////////////////////////////////////////////////////

----- Changelog:
(01/13/11) - menderleit - Created
(01/13/11) - menderleit - Setup basic UDTs and functions.
(01/14/11) - menderleit - Added SetAttribute function.

----- To-Do:
https://www.pivotaltracker.com/projects/202025

----- Purpose:
Handling all objects in the game.

----- Dependancies and Conflicts:
-None-

----- Other Notes:
* All functions in this module are prefixed with ENT_
    
/////////////////////////////////////////////////////
remend


// Constants describing the various Entity types. Use when calling ENT_* functions.
#constant ENT_STATIC    1
#constant ENT_DYNAMIC   2
#constant ENT_ENTITY    3
#constant ENT_TERRAIN   4
#constant ENT_PHYSICS   5

// Constants describing various attributes.
#constant ENT_ATTR_NAME     1
#constant ENT_ATTR_OBJ      2
#constant ENT_ATTR_TID      3


// UDTs for the various Entity types.
// DEVNOTE: The properties are just examples at this point...
type ENT_STATIC_TYPE
    name as string
    obj as integer
endtype

type ENT_DYNAMIC_TYPE
    name as string
    obj as integer
endtype

type ENT_ENTITY_TYPE
    name as string
endtype

type ENT_TERRAIN_TYPE
    name as string
    tid as integer
endtype

type ENT_PHYSICS_TYPE
    name as string
    obj as integer
endtype


// Initialize the ENTITY module.
// Creates dynamic arrays, sets up globals, and initializes variables to 0.
function ENT_Init()
    global dim ENT_Static() as ENT_STATIC_TYPE
    global dim ENT_Dynamic() as ENT_DYNAMIC_TYPE
    global dim ENT_Entity() as ENT_ENTITY_TYPE
    global dim ENT_Terrain() as ENT_TERRAIN_TYPE
    global dim ENT_Physics() as ENT_PHYSICS_TYPE
    global ENT_NumStatics as integer
    global ENT_NumDynamics as integer
    global ENT_NumEntities as integer
    global ENT_NumTerrains as integer
    global ENT_NumPhysics as integer
    ENT_NumStatics = 0
    ENT_NumDynamics = 0
    ENT_NumEntities = 0
    ENT_NumTerrains = 0
    ENT_NumPhysics = 0
endfunction

// Terminate the ENTITY module.
// Releases all the dynamic arrays (effectively deleting all entries)
// DEVNOTE: Does NOT delete referenced resources like objects and images...
function ENT_Terminate()
    undim ENT_Static()
    undim ENT_Dynamic()
    undim ENT_Entity()
    undim ENT_Terrain()
    undim ENT_Physics()
    ENT_NumStatics = 0
    ENT_NumDynamics = 0
    ENT_NumEntities = 0
    ENT_NumTerrains = 0
    ENT_NumPhysics = 0
endfunction

// Add a new Entity.
// Returns the IndexNumber of the new Entity.
function ENT_AddEntity(ObjectID as integer, EntityName as string, EntityType as integer)
    NewIndex as integer
    select EntityType
        case ENT_STATIC:
            array insert at bottom ENT_Static()
            ENT_Static().name = EntityName
            ENT_Static().obj = ObjectID
            NewIndex = ENT_NumStatics
            inc ENT_NumStatics, 1
        endcase
        case ENT_DYNAMIC:
            array insert at bottom ENT_Dynamic()
            ENT_Dynamic().name = EntityName
            ENT_Dynamic().obj = ObjectID
            NewIndex = ENT_NumDynamics
            inc ENT_NumDynamics, 1
        endcase
        case ENT_ENTITY:
            array insert at bottom ENT_Entity()
            ENT_Entity().name = EntityName
            ENT_Entity().obj = ObjectID
            NewIndex = ENT_NumEntities
            inc ENT_NumEntities, 1
        endcase
        case ENT_TERRAIN:
            array insert at bottom ENT_Terrain()
            ENT_Terrain().name = EntityName
            ENT_Terrain().obj = ObjectID
            NewIndex = ENT_NumTerrains
            inc ENT_NumTerrains, 1
        endcase
        case ENT_PHYSICS:
            array insert at bottom ENT_Physics()
            ENT_Physics().name = EntityName
            ENT_Physics().obj = ObjectID
            NewIndex = ENT_NumPhysics
            inc ENT_NumPhysics, 1
        endcase
    endselect
endfunction NewIndex

// Delete the Entity specified by EntityIndex and EntityType.
// DEVNOTE: Caller are responsible for deleting resources like objects and images.
//          This function only deletes the entry in the Entity system.
function ENT_DeleteEntity(EntityIndex as integer, EntityType as integer)
    if EntityIndex >= 0
        select EntityType
            case ENT_STATIC:
                if EntityIndex < ENT_NumStatics and ENT_NumStatics > 0
                    array delete element ENT_Static(), EntityIndex
                    dec ENT_NumStatics, 1
                endif
            endcase
            case ENT_DYNAMIC:
                if EntityIndex < ENT_NumDynamics and ENT_NumDynamics > 0
                    array delete element ENT_Dynamic(), EntityIndex
                    dec ENT_NumDynamics, 1
                endif
            endcase
            case ENT_ENTITY:
                if EntityIndex < ENT_NumEntities and ENT_NumEntities > 0
                    array delete element ENT_Entity(), EntityIndex
                    dec ENT_NumEntities, 1
                endif
            endcase
            case ENT_TERRAIN:
                if EntityIndex < ENT_NumTerrains and ENT_NumTerrains > 0
                    array delete element ENT_Terrain(), EntityIndex
                    dec ENT_NumTerrains, 1
                endif
            endcase
            case ENT_PHYSICS:
                if EntityIndex < ENT_NumPhysics and ENT_NumPhysics > 0
                    array delete element ENT_Physics(), EntityIndex
                    dec ENT_NumPhysics, 1
                endif
            endcase
        endselect
    endif
endfunction

// Sets an attribute of the specified Entity.
// Returns 1 if successful, or 0 if failed. (TRUE/FALSE)
// DEVNOTE: Value is defined as a string to enable passing of any type of value.
function ENT_SetAttribute(EntityIndex as integer, EntityType as integer, Attribute as integer, Value as string)
    Success as boolean
    Success = 0
    if EntityIndex >= 0
        select EntityType
            case ENT_STATIC
                if EntityIndex < ENT_NumStatics and ENT_NumStatics > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Static(EntityIndex).name = Value
                            Success = 1
                        endcase
                        case ENT_ATTR_OBJ
                            ENT_Static(EntityIndex).obj = val(Value)
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
            case ENT_DYNAMIC
                if EntityIndex < ENT_NumDynamics and ENT_NumDynamics > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Dynamic(EntityIndex).name = Value
                            Success = 1
                        endcase
                        case ENT_ATTR_OBJ
                            ENT_Dynamic(EntityIndex).obj = val(Value)
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
            case ENT_ENTITY
                if EntityIndex < ENT_NumEntities and ENT_NumEntities > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Entity(EntityIndex).name = Value
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
            case ENT_TERRAIN
                if EntityIndex < ENT_NumTerrains and ENT_NumTerrains > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Terrain(EntityIndex).name = Value
                            Success = 1
                        endcase
                        case ENT_ATTR_TID
                            ENT_Terrain(EntityIndex).tid = val(Value)
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
            case ENT_DYNAMIC
                if EntityIndex < ENT_NumPhysics and ENT_NumPhysics > 0
                    select Attribute
                        case ENT_ATTR_NAME
                            ENT_Physics(EntityIndex).name = Value
                            Success = 1
                        endcase
                        case ENT_ATTR_OBJ
                            ENT_Physics(EntityIndex).obj = val(Value)
                            Success = 1
                        endcase
                    endselect
                endif
            endcase
        endselect
    endif
endfunction Success
