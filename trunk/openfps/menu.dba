remstart
/////////////////////////////////////////////////////
//
// OpenFPS MENU Module
//
// Created by thenerd
// Maintained by thenerd
//
/////////////////////////////////////////////////////

----- Changelog:

(11/19/09) - BMacZero - Adapted to existing code.
(2/7/10) - BMacZero - Fixed issue with buttons highlighting incorrectly
(2/7/10) - thenerd - Updating and changing menu system, adding gui functions
(2/8/10) - BMacZero - Polished RenderWindow function, prefixed global vars with "menu"
(2/9/10) - thenerd - Finished RenderWindow function with fill
(6/27/10)  - thenerd  - Added some effects to the menu background.

----- To-Do:
- Make buttons functional. DONE
- Add Custom GUI Elements/Functions:
	*Slider
	*Button - DONE
	*Checkbox
	*Window - DONE - Transparency?
	*Text Box


----- Purpose:
Runs the menu.


----- Dependancies and Conflicts (IMPORTANT STUFF):
-None-


----- Other Notes:
-None-


remend

/////////////////////////////////////////////////////////
// INIT                                                //
/////////////////////////////////////////////////////////

function initMenu()
`loading sprite
global menu_loadingimage
global menu_loadingsprite
menu_loadingimage  = grabResource(res_Image)
menu_loadingsprite = grabResource(res_Sprite)
load image "media\menu\loading-1.png",menu_loadingimage
sprite menu_loadingsprite,0,0,menu_loadingimage
set sprite priority menu_loadingsprite,1

`main sprite
global menu_mainimage
global menu_mainsprite
menu_mainimage  = grabResource(res_Image)
menu_mainsprite = grabResource(res_Sprite)
load image "media\menu\main.png",menu_mainimage
sprite menu_mainsprite,0,0,menu_mainimage
show sprite menu_mainsprite

backdrop on
color backdrop rgb(0,0,255)
`autocam on

`background effects
global menu_bgfx1
menu_bgfx1  = grabResource(res_Object)
menu_bgfx1img  = grabResource(res_Image)
load image "media\menu\menu_bgfx1img.png",menu_bgfx1img
make object plain menu_bgfx1,1024,768
texture object menu_bgfx1,menu_bgfx1img
set object transparency menu_bgfx1,1
position object menu_bgfx1,0,0,512
point object menu_bgfx1,0,0,0

`music
global menu_music
menu_music  = grabResource(res_Music)
load music "media\audio\The Awakening.mp3",menu_music
play music menu_music
endfunction



/////////////////////////////////////////////////////////
// CORE                                                //
/////////////////////////////////////////////////////////

function runMenu()

local alpha as byte

`Transition out of loading
alpha=255
do

	alpha=alpha-20
	if alpha<20 then exit
	set sprite alpha menu_loadingsprite,alpha
	sync
loop
set sprite alpha menu_loadingsprite,0

`init gui variables
global menu_button1 as integer
global menu_button2 as integer
global menu_button3 as integer
menu_button1 = grabResource(res_Image)
menu_button2 = grabResource(res_Image)
menu_button3 = grabResource(res_Image)

global menu_left_top as integer
global menu_right_top as integer
global menu_top_flat as integer
global menu_bottom_flat as integer
global menu_left_bottom as integer
global menu_right_bottom as integer
global menu_left_flat as integer
global menu_right_flat as integer
menu_left_top = grabResource(res_Image)
menu_right_top = grabResource(res_Image)
menu_top_flat = grabResource(res_Image)
menu_bottom_flat = grabResource(res_Image)
menu_left_bottom = grabResource(res_Image)
menu_right_bottom = grabResource(res_Image)
menu_left_flat = grabResource(res_Image)
menu_right_flat = grabResource(res_Image)

`load gui images
load image "media\menu\gui\left_top.png", menu_left_top
load image "media\menu\gui\right_top.png", menu_right_top
load image "media\menu\gui\top_flat.png", menu_top_flat
load image "media\menu\gui\bottom_flat.png", menu_bottom_flat
load image "media\menu\gui\left_bottom.png", menu_left_bottom
load image "media\menu\gui\right_bottom.png", menu_right_bottom
load image "media\menu\gui\left_flat.png", menu_left_flat
load image "media\menu\gui\right_flat.png", menu_right_flat

global menu_clickstate as boolean

load image "media\menu\button-normal.png", menu_button1
load image "media\menu\button-hover.png",  menu_button2
load image "media\menu\button-clicked.png",menu_button3

`delete temporary main menu sprite
freeResource(menu_mainsprite,res_Sprite)

do
	`bg
	paste image menu_mainimage,0,0,1
	scroll object texture menu_bgfx1,0.001,0
	`buttons
	if button("New Game",78,219) then exit
	button("Load Game",78,279)
	button("Help",78,339)
	button("Options",78,399)
	button("Credits",78,459)
	if button("Quit",78,519)=1 then end
	
	if mouseclick()=0 then menu_clickstate=0
	
	`RenderWindow(mousex(),mousey(),640,480)
    UI_Handle()
	sync
loop

delete object menu_bgfx1
freeResource(menu_bgfx1        ,res_Object)
freeResource(menu_mainimage    ,res_Image )
freeResource(menu_loadingsprite,res_Sprite)
freeResource(menu_loadingimage ,res_Image )

freeResource(menu_button1,res_Image)
freeResource(menu_button2,res_Image)
freeResource(menu_button3,res_Image)
freeResource(menu_left_top,res_Image)
freeResource(menu_right_top,res_Image)
freeResource(menu_top_flat,res_Image)
endfunction



/////////////////////////////////////////////////////////
// SUPPORT                                             //
/////////////////////////////////////////////////////////

function RenderWindow(x1,y1,x2,y2):

    if y2<y1
        temp=y2
        y2=y1
        y1=temp
    endif
    if x2<x1
        temp=x2
        x2=x1
        x1=temp
    endif

	paste image menu_left_top, x1,y1,1
	paste image menu_right_top,x2-image width(menu_right_top),y1,1
	tilex(menu_top_flat,x1+image width(menu_left_top),y1,((x2-image width(menu_right_top)*2)-x1)/image width(menu_top_flat))
	
	paste image menu_left_bottom,x1,y2,1
	paste image menu_right_bottom,x2-image width(menu_right_bottom),y2,1
	tilex(menu_bottom_flat,x1+image width(menu_left_bottom),y2,((x2-image width(menu_right_bottom)*2)-x1)/image width(menu_bottom_flat))
	
	tiley(menu_left_flat ,x1,y1+image height(menu_left_top),(y2-y1-image height(menu_left_bottom))/image height(menu_left_flat))
	tiley(menu_right_flat,x2-image width(menu_right_flat),y1+image height(menu_left_top),(y2-y1-image height(menu_left_bottom))/image height(menu_left_flat))
	
	ink rgb(0,0,0),0
	box x1+image width(menu_left_top),y1+image height(menu_left_top),x2-image width(menu_right_bottom),y2
	ink rgb(255,255,255),0
endfunction

function tilex(image,x,y,amount):
for z=0 to amount:
	paste image image,x+(z*image width(image)),y,1
next z
endfunction

function tiley(image,x,y,amount):
for z=0 to amount:
	paste image image,x,y+(z*image height(image)),1
next z
endfunction


function button(text$,x,y):

    local mouse as integer
    local clicked as boolean
	clicked=0
	
	select in_box2d(x,y,x+178,y+50)
        case 0
            paste image menu_button1,x,y,1
        endcase
        case 1
            paste image menu_button2,x,y,1
            if menu_clickstate=1 then clicked=1
        endcase
        case 2
            paste image menu_button3,x,y,1
            menu_clickstate=1
        endcase
    endselect
    
	center text x+89,y+25-(text height("Oj")/2),text$
	
endfunction clicked



function in_box2d(x1,y1,x2,y2):

    local result as integer
    result=0
    local mx as integer
    local my as integer
	mx=MouseX()
	my=MouseY()

	if (mx >= x1) and (mx <= x2) and (my >= y1) and (my <= y2)
		if mouseclick()=0 then result = 1
		if mouseclick()=1 then result = 2
	endif

endfunction result 