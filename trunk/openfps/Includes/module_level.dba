remstart
/////////////////////////////////////////////////////
//
// OpenFPS LEVEL SYSTEM Module
//
// Created by thenerd
// Maintained by thenerd
//
/////////////////////////////////////////////////////

----- Changelog:
(2/7/11)   - thenerd  - Created.

----- To-Do:
-None-

----- Purpose:
Loads and keeps track of game levels.

----- Dependancies and Conflicts:
-None-

----- Other Notes:
All functions in this module are prefixed with LVL_
    
/////////////////////////////////////////////////////
remend

/////////////////////////////////////////////////////
// TYPES
/////////////////////////////////////////////////////

type Level_Data
	    init as boolean
	    name as string
	    file as string
    music as integer
    entityfile as string
    mapfile as string
    loadimage as string
endtype

/////////////////////////////////////////////////////
// INIT
/////////////////////////////////////////////////////

function LVL_Init():
	//////////////////////////////
	//LVL_Init()
	//Inits the level system
	//////////////////////////////
	UI_WriteLog(UI_Yellow,"=== Starting level module")
	
Rem Setup variables
Global LVL_Current as Level_Data
		
	UI_WriteLog(UI_Green,"=== Level module started")
endfunction

/////////////////////////////////////////////////////
// MAIN FUNCTIONS
/////////////////////////////////////////////////////

function LVL_Load(level_file$):
	//////////////////////////////
	//LVL_Load()
	//Loads a level file into the engine
	//////////////////////////////
 		UI_WriteLog(UI_Yellow,"Loading level from file <i>"+level_file$+"</i>...")
	
	`Move to 'engine' mode.
 	SyS_LoopMode="engine" 
	
	REM START LOADING LEVEL DATA >>>>
	
 `	Predefined information (either create or passed in)
 	LVL_Current.init=1
 	LVL_Current.file=level_file$
		
	`Load the level information from the level file  
 	ReadText as String
 	Label as String
 	Value as String
 	If File Exist(level_file$)=0 `Check for file exist
     	UI_WriteLog(UI_Red,"Level load failed: <i>"+level_file$+"</i> not found.")
     	Wait 1000
     	End
 	EndIf
 	FileNumber = res_grab(res_File) `Get the file resource number
 	Open To Read FileNumber,level_file$ `Open the file for reading
 	
    	Rem The main read loop
    	Do
        	If File End(FileNumber)=1 then Exit
        	Read String FileNumber, ReadText
        	Label=TExtract(ReadText,1)
        	Value=TExtract(ReadText,2)
            	Select Label
                	Case "name"
                    	LVL_Current.name=Value
                	EndCase 
                	Case "music"
                    	LVL_Current.music=Val(Value)
                	EndCase
                	Case "entityfile"
                    	LVL_Current.entityfile=Value
                	EndCase
                	Case "loadimage"
                    	LVL_Current.loadimage=Value
                	EndCase   
                	Case "mapfile"
                    	LVL_Current.mapfile=Value
                	EndCase     
            	EndSelect         
    	LOOP
    	
	Close File FileNumber `Close the file
	res_free(FileNumber, res_File) `Release the file data
	UI_WriteLog(UI_Green,"Loaded level data.")
	Rem FINISHED LOADING LEVEL DATA <<<<
	
	Rem CHECK IF FILES EXIST >>>>
    	If File Exist(LVL_Current.mapfile)<1 then UI_WriteLog(UI_Red,"Level load failed: <i>"+LVL_Current.mapfile+"</i> not found."):End
    	If File Exist(LVL_Current.loadimage)<1 then UI_WriteLog(UI_Red,"Level load failed: <i>"+LVL_Current.loadimage+"</i> not found."):End
    	If File Exist(LVL_Current.entityfile)<1 then UI_WriteLog(UI_Red,"Level load failed: <i>"+LVL_Current.entityfile+"</i> not found."):End
	
	REM LOAD LOADING IMAGE >>>>
    	LVLLoadImage=res_grab(res_Image)
    Load Image LVL_Current.loadimage,LVLLoadImage
    VIS_FadeBetweenImages(0,LVLLoadImage,1)
    Paste Image LVLLoadImage, 0, 0
    Sync
    Delete Image LVLLoadImage : res_free(LVLLoadImage,res_Image)
    	UI_WriteLog(UI_Green,"Showing loading level screen.")
    	    Wait 2000	
	
	Rem BEGIN LOADING THE 3D WORLD >>>>
    	SyS_LoopMode="engine" `Temporary, as cannot proceed
    	`UI_WriteLog(UI_BLUE,"Halted until code module coded.")
    	`MENU_state="NONE"
    `ExitFunction
	
    	`normal commence>>
		`ENT_DeleteAllEntities()
		`ENT_LoadEntities(LVL_Current.entityfile)
		UI_WriteLog(UI_Yellow,"* level loaded.")
		
		ExitFunction
		
		rem on error
		LVL_UnLoad()
		UI_WriteLog(UI_Red,"* level load failed! (File does not exist)"):SyS_LoopMode="menu"

endfunction

function LVL_UnLoad():
	//////////////////////////////
	//LVL_UnLoad()
	//Unloads the current level
	//////////////////////////////
	LVL_Current.init=0
	LVL_Current.name="null"
	LVL_Current.file="null"
endfunction

function LVL_Update():
	//////////////////////////////
	//LVL_Update()
	//Updates the level system
	//////////////////////////////
endfunction

function LVL_SaveState():
	//////////////////////////////
	//LVL_SaveState()
	//Saves the current state of the game
	//////////////////////////////
endfunction

function LVL_LoadState():
	//////////////////////////////
	//LVL_LoadState()
	//Loads a save file
	//////////////////////////////
endfunction

/////////////////////////////////////////////////////
// TERMINATE
/////////////////////////////////////////////////////

function LVL_Terminate():
	//////////////////////////////
	//LVL_Terminate()
	//Terminates the level system
	//////////////////////////////
endfunction

/////////////////////////////////////////////////////
// End of code.
/////////////////////////////////////////////////////