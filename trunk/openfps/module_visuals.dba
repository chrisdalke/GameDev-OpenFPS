Rem ***** Included Source File *****
/////////////////////////
//
// OpenFPS VISUALS Module         
//
// Created by thenerd, miso
//                           
//
/////////////////////////////////////////////////////
remstart
***** Included Source File *****

----- Changelog:
(07/03/10) - thenerd     - Created
(07/04/10) - miso        - Added basic sky
(07/04/10) - miso        - Removed cloud commands for now, maybe we dont need the second layer at all
(7/4/10)   - miso        - placed log commands


----- To-Do:
This module is a blank template with the functions we need for visuals.
It will be filled in as we code those aspects.
* Needed Functions:

----- Purpose:
Handle visual data such as shaders, particles, bloom, ex.

----- Dependancies and Conflicts (IMPORTANT STUFF):
  *Uses PLR_Headpos.x, PLR_Headpos.y and PLR_Headpos.z variables to reposition the skydome.
   Variables gets value in movements module.


----- Conflicts
*NONE*

----- Other Notes:
*NONE*

----- Function List:

--MAIN COMMANDS
 `initvisuals()                 - initiate the main visual module
 `Updatevisuals()               - updates visual effects if necessary
 `terminatevisuals()            - terminate the module
--SKY COMMANDS
  `VS_AddSkyToScene(obj$,img$)  - Loads skydome model (obj$) and texture (img$)
  `VS_UpdateSky()               - Reposition sky to headpos if sky exists.
  `VS_DeleteSky()               - Deletes sky modell and texture if exists.
remend

`=========Constants=========`
#Constant VS_False  =0
#Constant VS_True   =0
`===========================`

`==========Globals==========`
Global VS_Sky             as Myskytype   :`basic data for sky
Global VS_SkyScrollTicker as Integer     :`timer variable for internal use
`===========================`

`===========Types===========`
Type MyskyType
	Initialized      as Boolean:`1 if initialized
	ObjID            as Integer:`ID of the object
	TextureID        as Integer:`ID of the texture
	ScrollEnabled    as Boolean:`set to 1 if you want to scroll the texture
	ScrollSpeedX     as Float  :`velocity of scrolling in X axis
	ScrollSpeedY     as Float  :`velocity of scrolling in Y axis
EndType
`===========================`


`=========Functions=========`


//------ MAIN COMMANDS
Function initvisuals()
//***************************************************************************************
//*   Miso                                                                              *
//*     This function initiate the visual features.                                     *
//*                                                                                     *
//*                                                                                     *
//*                                                                                     *
//*                                                                                     *
//***************************************************************************************
UI_WriteLog(UI_Green,"=== Starting Visuals module")
  //--load sky and clouds
	VS_AddSkyToScene("media\visuals\vs_skydome.x","media\visuals\vs_basicsky.jpg")
  //--set variables
	VS_Sky.Scrollenabled=VS_True : VS_Sky.ScrollSpeedX=0.00005 : VS_Sky.ScrollSpeedY=0.00001
  //--create timer
	VS_CreateSkyScrollTicker()
UI_WriteLog(UI_Green,"=== Visual module started")
Endfunction

Function updatevisuals()
	VS_UpdateSky()
Endfunction

Function terminatevisuals()
UI_WriteLog(UI_Green,"=== Terminating Visuals module")
	VS_DeleteSky()
UI_WriteLog(UI_Green,"=== Visuals module terminated")
Endfunction

//------ SKY COMMANDS
Function VS_AddSkyToScene(param_object$,param_texture$)
//***************************************************************************************
//*   Miso                                                                              *
//*     This function loads the sky model and textures it.                              *
//*                                                                                     *
//*                                                                                     *
//*                                                                                     *
//*                                                                                     *
//***************************************************************************************
  UI_SetDebugPosition("VS_AddskytoScene()","module_visuals.dba")
     If VS_Sky.initialized=VS_False
        UI_CheckFile(param_object$):UI_CheckFile(param_texture$)
	    VS_Sky.ObjID     = grabresource(res_object)
	    VS_Sky.TextureID = grabresource(res_image)
	 	Load Object param_object$,VS_Sky.ObjID
	 	Load Image param_texture$,VS_Sky.TextureID,1
	 	Scale Object VS_Sky.ObjID,1000000,1000000,1000000
	 	Texture Object VS_Sky.ObjID,VS_Sky.TextureID
	 	Set Object Fog VS_Sky.ObjID,0
	 	Set Object Light VS_Sky.ObjID,0
	 	Disable Object Zwrite VS_Sky.ObjID
	 Endif
  UI_RestoreDebugPosition()
Endfunction


Function VS_UpdateSky()
// scrolls sky
	If VS_Sky.Initialized=VS_True
		Position Object VS_Sky.ObjID,PLR_HeadPos.x,PLR_HeadPos.y-15000,PLR_HeadPos.z
		If VS_Sky.ScrollEnabled=VS_True 
			If VS_AskSkyScrollTicker()=VS_True 
				Scroll Object Texture VS_Sky.ObjID,VS_Sky.ScrollSpeedX,VS_Sky.ScrollSpeedY
			Endif
		Endif
	Endif
Endfunction

Function VS_DeleteSky()
	If VS_Sky.Initialized=VS_True
		If Object Exist(VS_Sky.ObjID)=VS_True then Delete Object VS_Sky.ObjID
		IF Image Exist(VS_Sky.TextureID)=VS_True then Delete Image VS_Sky.TExtureID
		VS_Sky.Initialized=VS_False
	Endif

Endfunction


Function VS_AddSunToScene()
Endfunction

Function VS_UpdateSun()
Endfunction

Function VS_DeleteSun()
Endfunction


//Timer commands
Function VS_CreateSkyScrollTicker()
	If VS_SkyScrollTicker=0
		VS_Skyscrollticker = FIND FREE TICKER()
		MAKE TICKER VS_SkyScrollTicker,30
	Endif
Endfunction

Function VS_AskSkyScrollTicker()
Local tickresult as Integer
		tickresult = TICKER(VS_SkyScrollTicker,1)
EndFunction tickresult

Function VS_DeleteSkyScrollTicker()
IF VS_SkyScrollTicker=0
	DELETE TICKER VS_SkyScrollTicker
	VS_SkyScrollTicker = 0
Endif
Endfunction