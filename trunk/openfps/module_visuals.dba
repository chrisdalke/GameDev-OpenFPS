Rem ***** Included Source File *****
/////////////////////////
//
// OpenFPS VISUALS Module         
//
// Created by thenerd, miso
//                           
//
/////////////////////////////////////////////////////
remstart
***** Included Source File *****

----- Changelog:
(07/03/10) - thenerd     - Created
(07/04/10) - miso        - Added basic sky
(07/04/10) - miso        - Removed cloud commands for now, maybe we dont need the second layer at all
(7/4/10)   - miso        - placed log commands
(7/30/10)   - miso       - Added various effects.


----- To-Do:
This module is a blank template with the functions we need for visuals.
It will be filled in as we code those aspects.
* Needed Functions:

----- Purpose:
Handle visual data such as shaders, particles, bloom, ex.

----- Dependancies and Conflicts (IMPORTANT STUFF):
  *Uses PLR_Headpos.x, PLR_Headpos.y and PLR_Headpos.z variables to reposition the skydome.
   Variables gets value in movements module.


----- Conflicts
*NONE*

----- Other Notes:
*NONE*

----- Function List:

--MAIN COMMANDS
 `initvisuals()                 - initiate the main visual module
 `Updatevisuals()               - updates visual effects if necessary
 `terminatevisuals()            - terminate the module
--SKY COMMANDS
  `VS_AddSkyToScene(obj$,img$)  - Loads skydome model (obj$) and texture (img$)
  `VS_UpdateSky()               - Reposition sky to headpos if sky exists.
  `VS_DeleteSky()               - Deletes sky modell and texture if exists.
--FX COMMANDS
  `vis_game_end()               - End-game effect
  `vis_setblack()				- Blackens the screen.
  `vis_fadetitle()				- Shows the title fade in sequence.
remend

`=========Constants=========`
#Constant VS_False  =0
#Constant VS_True   =0
`===========================`

`==========Globals==========`
Global VS_Sky             as Myskytype   :`basic data for sky
Global VS_SkyScrollTicker as Integer     :`timer variable for internal use
Global VS_Sun             as MySunType
`===========================`

`===========Types===========`
Type ScreenClip
	Initialized      as Boolean:`1 if initialized
	S_Width  		 as Integer:`screen width
	S_Height 		 as Integer:`screen height
	End_Size 		 as Integer:`end size
	Speed			 as Float  :`resize speed
	Current			 as Float  :`current y size
	img 			 as Integer:`bar image name
	_sprite			 as Integer:`bar sprite
	_Timer			 as Float  :`timer hold
EndType

Type MyskyType
	Initialized      as Boolean:`1 if initialized
	ObjID            as Integer:`ID of the object
	TextureID        as Integer:`ID of the texture
	ScrollEnabled    as Boolean:`set to 1 if you want to scroll the texture
	ScrollSpeedX     as Float  :`velocity of scrolling in X axis
	ScrollSpeedY     as Float  :`velocity of scrolling in Y axis
EndType

Type MySunType
	Initialized      as Boolean:`1 if initialized
	Bloomenabled     as Boolean:`1 if bloom is enabled
	ObjID            as Integer:`ID of the sun plane object
	BloomObjID       as Integer:`ID od the sun false bloom/glow plane object
	TextureID        as Integer:`ID of the texture
	BloomTextureID   as Integer:`ID of the false bloom/glow texture
	Size             as Integer:`size in dbro units
	Distance         as Integer:`fixed distance	 from camera
	Angle            as Integer:`angle
	X                as Float  :`auto counted
	Y                as Float  :`auto counted
	Z                as Float  :`auto counted
EndType


`===========================`


`=========Functions=========`


//------ MAIN COMMANDS
Function initvisuals()
//***************************************************************************************
//*   Miso                                                                              *
//*     This function initiate the visual features.                                     *
//*                                                                                     *
//*                                                                                     *
//*                                                                                     *
//*                                                                                     *
//***************************************************************************************
	UI_WriteLog(UI_Green,"=== Starting Visuals module")
  //--load sky and clouds
	VS_AddSkyToScene("media\visuals\vs_skydome.x","media\visuals\vs_basicsky.jpg")
  //--set variables
	VS_Sky.Scrollenabled=VS_True : VS_Sky.ScrollSpeedX=0.00005 : VS_Sky.ScrollSpeedY=0.00001
  //--create timer
	VS_CreateSkyScrollTicker()
	VS_AddSunToScene("media\visuals\vs_basicsun.jpg",100000,50000,100000,46000)
	`screen setup
	global vis_s_clip as ScreenClip
	vis_s_clip.Initialized=0
	vis_s_clip.S_Width=screen width()
	vis_s_clip.S_Height=screen height()
	vis_s_clip.End_Size=100
 	vis_s_clip.Current=0
 	vis_s_clip.Speed=1.0
 	vis_s_clip._Timer=0.0
	vis_s_clip.img = grabResource(res_Image)
	vis_s_clip._sprite = grabResource(res_Sprite)
	load image "media\images\widescreen-bar.png",vis_s_clip.img
	sprite vis_s_clip._sprite,0,0,vis_s_clip.img
	hide sprite vis_s_clip._sprite
	
	global TrainingScreen
	global TrainingScreen_sprite
	TrainingScreen = grabResource(res_Image)
	TrainingScreen_sprite = grabResource(res_Sprite)
	load image "media\menu\training.png",TrainingScreen
	sprite TrainingScreen_sprite,0,0,TrainingScreen 
		
	global crosshair1_img
	global crosshair1_sprite
	`DAMMIT BLITZ SPRITE BUG
	`crosshair1_img=grabResource(res_Image)
	`crosshair1_sprite=grabResource(res_Sprite)
	`load image "media\images\crosshair.png",crosshair1_img
	`sprite crosshair1_sprite,(screen width()/2)-(image width(crosshair1_img)/2),(screen height()/2)-(image height(crosshair1_img)/2),crosshair1_img
	
	UI_WriteLog(UI_Green,"=== Visual module started")
Endfunction

Function updatevisuals()
	VS_UpdateSky()
	`visual clip
	
	if vis_s_clip.Initialized>0:
		vis_s_clip._Timer=vis_s_clip._Timer+1.0
		if vis_s_clip.Current<vis_s_clip.End_Size:
			vis_s_clip.Current=vis_s_clip.Current+vis_s_clip.Speed
		endif
		paste sprite vis_s_clip._sprite,0,vis_s_clip.Current-200
		paste sprite vis_s_clip._sprite,0,vis_s_clip.S_Height-(vis_s_clip.Current)
		UI_Text(3,100,vis_s_clip.S_Height/2,"Game End!")
	endif
Endfunction

function vis_game_end()
	`init visclip
	UI_ClearAllGuis()
	vis_s_clip.Initialized=1
endfunction

Function terminatevisuals()
	UI_WriteLog(UI_Green,"=== Terminating Visuals module")
	VS_DeleteSky()
	UI_WriteLog(UI_Green,"=== Visuals module terminated")
Endfunction

//------ SKY COMMANDS
Function VS_AddSkyToScene(param_object$,param_texture$)
//***************************************************************************************
//*   Miso                                                                              *
//*     This function loads the sky model and textures it.                              *
//*                                                                                     *
//***************************************************************************************
	 UI_SetDebugPosition("VS_AddskytoScene()","module_visuals.dba")
     If VS_Sky.initialized=VS_False
        UI_CheckFile(param_object$):UI_CheckFile(param_texture$)
	    VS_Sky.ObjID     = grabresource(res_object)
	    VS_Sky.TextureID = grabresource(res_image)
	 	Load Object param_object$,VS_Sky.ObjID
	 	Load Image param_texture$,VS_Sky.TextureID,1
	 	Scale Object VS_Sky.ObjID,1000000,1000000,1000000
	 	Texture Object VS_Sky.ObjID,VS_Sky.TextureID
	 	Set Object Fog VS_Sky.ObjID,0
	 	Set Object Light VS_Sky.ObjID,0
	 	Disable Object Zwrite VS_Sky.ObjID
	 Endif
	 UI_RestoreDebugPosition()
Endfunction


Function VS_UpdateSky()
//***************************************************************************************
//*   Miso                                                                              *
//*     Scroll sky texture if needed at loop.                                           *
//*                                                                                     *
//***************************************************************************************
// scrolls sky
	If VS_Sky.Initialized=VS_True
		Position Object VS_Sky.ObjID,PLR_HeadPos.x,PLR_HeadPos.y-15000,PLR_HeadPos.z
		If VS_Sky.ScrollEnabled=VS_True 
			If VS_AskSkyScrollTicker()=VS_True 
				Scroll Object Texture VS_Sky.ObjID,VS_Sky.ScrollSpeedX,VS_Sky.ScrollSpeedY
			Endif
		Endif
	Endif
Endfunction

Function VS_DeleteSky()
//***************************************************************************************
//*   Miso                                                                              *
//*     Delete Sky, won't crash the game.                                                *
//*                                                                                     *
//***************************************************************************************
	If VS_Sky.Initialized=VS_True
		If Object Exist(VS_Sky.ObjID)=VS_True then Delete Object VS_Sky.ObjID
		IF Image Exist(VS_Sky.TextureID)=VS_True then Delete Image VS_Sky.TExtureID
		VS_Sky.Initialized=VS_False
	Endif

Endfunction


Function VS_AddSunToScene(param_img$,x,y,z,size)
//***************************************************************************************
//*   Miso                                                                              *
//*     Loads sun texture and initialize sun object.                                    *
//*                                                                                     *
//***************************************************************************************
UI_SetDebugPosition("VS_AddsSunToScene()","module_visuals.dba")
	If VS_Sun.Initialized=VS_False
		VS_Sun.ObjID=grabresource(res_object) 
		VS_Sun.TextureID=grabresource(res_image)
		
		//--Checks if image file exists
		UI_Checkfile(param_img$)
		
		//--Load image for sun
		Load Image param_img$,VS_Sun.TextureID
		
		//--Make sun object plain
		Make object plain VS_Sun.ObjID,size,size
		VS_Sun.Size=size
		rem VS_Sun.Angle=angle
		rem VS_Sun.Distance=p_distance
		rem VS_Sun.X = VS_Sun.Distance*cos(VS_Sun.Angle)-VS_Sun.Distance*sin(VS_Sun.Angle)
		rem VS_Sun.Y = VS_Sun.Distance*cos(VS_Sun.Angle)+VS_Sun.Distance*sin(VS_Sun.Angle)
		rem VS_Sun.Z = 0
		
		VS_Sun.X = x
		VS_Sun.Y = y
		VS_Sun.Z = z
			
		
		Position Object VS_Sun.ObjID,VS_Sun.x,VS_Sun.y,VS_Sun.z
		Texture Object VS_Sun.Objid,VS_Sun.TextureID
		Point Object VS_Sun.ObjID,0,0,0
		Set Object Light VS_Sun.ObjID,0
		Set Object Fog VS_Sun.ObjID,0
		Disable Object Zwrite VS_Sun.ObjID
		Ghost Object On VS_Sun.ObjID
	Endif
UI_RestoreDebugPosition()
Endfunction

Function VS_UpdateSun()
Endfunction

Function VS_DeleteSun()
Endfunction


//Timer commands
Function VS_CreateSkyScrollTicker()
	If VS_SkyScrollTicker=0
		VS_Skyscrollticker = FIND FREE TICKER()
		MAKE TICKER VS_SkyScrollTicker,30
	Endif
Endfunction

Function VS_AskSkyScrollTicker()
Local tickresult as Integer
		tickresult = TICKER(VS_SkyScrollTicker,1)
EndFunction tickresult

Function VS_DeleteSkyScrollTicker()
IF VS_SkyScrollTicker=0
	DELETE TICKER VS_SkyScrollTicker
	VS_SkyScrollTicker = 0
Endif
Endfunction