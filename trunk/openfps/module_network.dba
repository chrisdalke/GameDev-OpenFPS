remstart
/////////////////////////////////////////////////////
//
// OpenFPS NETWORK FUNCTIONS Core Module
//
// Created by --
// Maintained by --
//
/////////////////////////////////////////////////////

----- Changelog:
(2/8/10) - BMacZero - Created
(07/06/10) - miso     - just placed logger commands
(07/06/10) - thenerd  - added commands
(07/28/10) - thenerd  - added PlayerData.cfg for player name & other info
(08/17/10) - miso     - added a display info when waiting to connect master server, not to see tha black screen
(11/29/10) - thenerd  - Restructured code to use new module layout
----- To-Do:
-None-

----- Purpose:
Communicates with host to retrieve updated information on
player, enemy, and object positions and states.
Passes this information to relevant modules to deal with it.


----- Dependancies and Conflicts (IMPORTANT STUFF):
-None-

----- Other Notes:
Chat Message Tags
&name=name           - Changes your name and displays a message.
&name_silent=name    - Changes your name without displaying a message.
&color="r,g,b"		 - Changes your chat color (WORK IN PROGRESS)
&blarg	             - :D

All functions and resources in the Network module use the prefix NET_

----- Function List:
-Client:
NET_init()			  		  - initializes the networking module
NET_update()     	  		  - updates any network data with the server.
NET_terminate()  	  		  - ends the networking module, and cleans up any used resources.
NET_getChatMessage()		  - gets the latest chat message.
NET_sendChatMessage(string$)  -	sends a chat message.

-Server variables:
DATA_MaxPlayers:	max players on server
DATA_Map:			server map
DATA_TimeLimit:		Time limit until reset
DATA_ServerType:	Type (1=Public, 2=Private LAN, 3=LoopBack interface)
DATA_PrivatePass:   Password for server (Default is blank)

remend

`-------GLOBALS----------
#constant NET_SERVER_HOST "localhost"
#constant NET_SERVER_PORT 27013
Global NET_channel as DWORD

`server type
type Server
	init as boolean
	name as string
	ip as string
	DATA_Port as integer
	DATA_UDPChannel as dword
	DATA_MaxPlayers as integer
	DATA_Players as integer
	DATA_Map as string
	DATA_MapObj as dword
	DATA_TimeLimit as integer
	DATA_ServerType as integer
	DATA_PrivatePass as string
	DATA_Welcome as boolean
endtype

global NET_Server as Server

/////////////////////////////////////////////////////////
// INIT                                                //
/////////////////////////////////////////////////////////


function NET_init()
	// -----------------------
	// Init network function
	// -----------------------
	UI_WriteLog(UI_Yellow,"=== Starting Network module")
	
	`globals
	global net_disable
	net_disable=0
	
	`start winsock
	winsock make
	if (winsock error())
   		`an error has occurred, output the error message to the log and quit.
   		UI_WriteLog(UI_RED,winsock error msg$())
   		winsock clean up
   		end
	else
		`write init success
		UI_WriteLog(UI_Green,"Network init Successful.")
	endif
	
	`update once to avoid crash
	sync

	`attempt connect to master server
	`disabled for now
	UI_WriteLog(UI_Yellow,"Attempting to connect to Master Server...")
	remstart
	NET_channel = winsock connect(NET_SERVER_HOST,NET_SERVER_PORT)
	check_for_error(NET_channel)
	remend
	net_disable=1
	UI_WriteLog(UI_Red,"Master Server connection Failed.")
	
	`if success/not success
	if net_disable<1:
		`write log
		UI_WriteLog(UI_Green,"Connected to the master server "+NET_SERVER_HOST+":"+STR$(NET_SERVER_PORT))
		UI_WriteLog(UI_Yellow,"=== Loading Player Data")
		
		`load player data
		temp_plr_data=RES_grab(res_File)
		OPEN TO READ temp_plr_data,"PlayerData.cfg"
		READ STRING temp_plr_data,NET_PlayerName$
		NET_PlayerName$=right$(NET_PlayerName$,(len(NET_PlayerName$)-11))
		close file temp_plr_data
		RES_free(temp_plr_data,res_File)
		UI_WriteLog(UI_Green,"=== Player Data Loaded")
	
		`add text to chat box
		UI_Addtexttochatbox("Welcome to Biostorm: Chemical Warfare!")
		UI_Addtexttochatbox("Master server is online.")
		`send player name packet
		NET_sendPlayerName(NET_PlayerName$,0)
	else:
		`add failure text to chat box
		UI_Addtexttochatbox("Master server is offline!")
		UI_Addtexttochatbox("No chat will be available.")
	endif
	`write log
	UI_WriteLog(UI_Green,"=== Network module started")
	// -----------------------
endfunction


/////////////////////////////////////////////////////////
// CORE                                                //
/////////////////////////////////////////////////////////

function NET_update()
	// -----------------------
	// Net Update function
	// -----------------------
	if net_disable<1:
  		winsock refresh channel NET_channel
   		check_for_error(NET_channel)
   		NET_getChatMessage()
	endif
	// -----------------------
endfunction

function NET_getChatMessage():
	// -----------------------
	// Net communication function
	// -----------------------
	if net_disable<1:
   	if (winsock channel data waiting(NET_channel))
      	check_for_error(NET_channel)
      	message$ = winsock recv string(NET_channel)
      	if (message$ = "")
         	`this client has been disconnected remotely by the server.
         	if (winsock channel error(NET_channel))
            	UI_Addtexttochatbox("You have been forcefully disconnected by the server!")
         	else
            	UI_Addtexttochatbox("You have been gracefully disconnected by the server!")
         	endif
      	else
			UI_Addtexttochatbox(message$)
      	endif
   	endif
	endif
	// -----------------------
endfunction

function NET_sendPlayerName(string$,mode):
	// -----------------------
	// Net communication function
	// -----------------------
	if net_disable<1:
		//0=silent
		//1=normal
		if mode=0 then winsock send string NET_channel, "&name_silent="+string$
		if mode=1 then winsock send string NET_channel, "&name="+string$
		check_for_error(NET_channel)
	endif
	// -----------------------
endfunction

function NET_sendChatMessage(string$):
	// -----------------------
	// Net communication function
	// -----------------------
	if net_disable<1:
		winsock send string NET_channel, string$
		check_for_error(NET_channel)
	endif
	// -----------------------
endfunction

/////////////////////////////////////////////////////////
// SERVER COMMANDS                                     //
/////////////////////////////////////////////////////////

function NET_StartServer()
	// -----------------------
	// Starts a server
	// -----------------------
	if NET_Server.init<1:
	NET_Server.name="Server"
	NET_Server.ip="127.0.0.1"
	NET_Server.DATA_MaxPlayers=24
	NET_Server.DATA_Players=0
	NET_Server.DATA_Map="media\maps\Test\test.dbo"
	NET_Server.DATA_TimeLimit=0
	NET_Server.DATA_ServerType=3
	NET_Server.DATA_PrivatePass=""
	NET_Server.DATA_Welcome=1
	
	NET_Server.DATA_Port=27013
	NET_Server.DATA_UDPChannel=winsock create udp channel()
	winsock bind channel NET_Server.DATA_UDPChannel,NET_Server.DATA_Port
	
	`add button
	x=800
	y=620
	UI_AddCenterGadgettoScreen("button_gamewelcome",x,y,"UI_button")
	UI_AddMouseoverImageToGadget("button_gamewelcome","UI_buttonhover")
	UI_AddtitleToGadget("button_gamewelcome",3,x-8,y-14,"Join Game")

	`load menu
	NET_Server.DATA_MapObj=RES_grab(RES_Object)
	if NET_Server.DATA_Map="":
		`null map
		NET_Server.DATA_Map="NONE RUNNING"
	else:
		load object NET_Server.DATA_Map,NET_Server.DATA_MapObj
		set object light NET_Server.DATA_MapObj,0
	endif
	NET_Server.init=1
	endif
endfunction

function NET_NameServer(name$)
	NET_Server.name=name$
endfunction


function Net_UpdateServer()
	// -----------------------
	// Updates the server
	// -----------------------
	Debug_Offset=UI_EVENT_ConsoleOffset+48
	paste image CORE_DebugScreenImg,0,0+Debug_Offset,1
	y=Debug_Offset+32
	if NET_Server.init>0:
		UI_Text(1,20,y,"Server is Running"):y=y+18
		UI_Text(1,20,y,NET_Server.name+" @ "+NET_Server.ip):y=y+18
		UI_Text(1,20,y,"TimeFactor#="+str$(SyS_TimeFactor)):y=y+18
		UI_Text(1,20,y,NET_Server.DATA_Map):y=y+18
		UI_Text(1,20,y,"Players: "+str$(NET_Server.DATA_Players)+"/"+str$(NET_Server.DATA_MaxPlayers)):y=y+18
		winsock refresh channel NET_Server.DATA_UDPChannel
		if winsock channel data waiting(NET_Server.DATA_UDPChannel):
			WINSOCK RECV MESSAGE NET_Server.DATA_UDPChannel
			UI_Text(1,20,y,"CONNECTION ESTABLISHED!"):y=y+18
		endif
	else:
		UI_Text(1,20,y,"Server is not running!"):y=y+18
	endif
	if NET_Server.DATA_Welcome>0:
		MVM_ShowMouse()
		paste image CORE_GamePanel,0,0,1
		UI_Text(3,100,180,"Server: "+NET_Server.name)
		if UI_GadgetExist("button_gamewelcome")=0:
			x=800
			y=620
			UI_AddCenterGadgettoScreen("button_gamewelcome",x,y,"UI_button")
			UI_AddMouseoverImageToGadget("button_gamewelcome","UI_buttonhover")
			UI_AddtitleToGadget("button_gamewelcome",3,x-8,y-14,"Join Game")
		endif
		if mouseclick()=1 and UI_Mouseclicked=0 and UI_MouseOveredGadget$="button_gamewelcome":
			NET_Server.DATA_Welcome=0
			CORE_CleanUp()
			MVM_HideMouse()
		endif
	endif
endfunction

function Net_EndServer()
	// -----------------------
	// Terminates the server
	// -----------------------
endfunction


/////////////////////////////////////////////////////////
// TERMINATE                                           //
/////////////////////////////////////////////////////////


function NET_terminate()
	// -----------------------
	// Terminate function
	// -----------------------
	UI_WriteLog(UI_Yellow,"=== Terminating module")
	winsock clean up
	UI_WriteLog(UI_Green,"=== Network module terminated")
	// -----------------------
endfunction

/////////////////////////////////////////////////////////
// DEBUG                                               //
/////////////////////////////////////////////////////////

function check_for_error(a_channel as DWORD)
	// -----------------------
	// Winsock debug function
	// -----------------------
	`check for an error on a channel.
   if (winsock channel error(a_channel))
      `an error has occurred, enable the net_disable variable.
	  net_disable=1
   endif
   // -----------------------
endfunction