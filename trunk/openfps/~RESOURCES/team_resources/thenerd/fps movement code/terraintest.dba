/////////////////////////////////////
// FPS MOVEMENT TEST ENVIRONMENT
// Coded by thenerd 
// July 14th, 2011
/////////////////////////////////////

`types
Type mywindowtype
   ID 		as Integer
   Xwidth 	as Integer
   Yrow 	as Integer
Endtype


`TERRAIN TEST

`main init code
set display mode 1024,768,32,1
disable escapekey

`center window (you can disable this)
center window

sync on
sync rate 60
cls 0
autocam off
hide mouse

font_default=a2CreateFont("Tahoma",12,a2Size_Point(),a2Style_Normal())
#CONSTANT White rgb(255,255,255)
GLOBAL comet_screen_fps
a2SetLineAA 0

load object "..\..\..\media\visuals\VS_skydome.x",1
load image "..\..\..\media\visuals\VS_basicsky.jpg",1
texture object 1,1
set object light 1,0
scale object 1,100000,100000,100000
`disable object zread 1


load object "..\..\..\media\guns\MP5K\HUD.x",2
loop object 2,32,76
disable object zdepth 2
load 3dsound "media\fire.wav",1

global GUN_x#
global GUN_y#
global GUN_z#
global Gun_FOV#
global Gun_DIST#
Gun_FOV#=42
Gun_DIST#=9

global cr#:global cf#:global ncr#:global ncf#:global ncx#:global ncy#
global camera_object:global camera_object2
camera_object=20:camera_object2=21
global vx# as double float:global vy# as double float:global vz# as double float
global cvx# as double float:global cvz# as double float
global CAM_x# as float:global CAM_y# as float:global CAM_z# as float
global CAM_AngleX# as float:global CAM_AngleY# as float:global CAM_AngleZ# as float
global CAM_AngleZOrig# as float:global CAM_MouseMove# as float
global gravity# as double float : gravity# = -0.2
global slope# as double float : slope# = 0.5
global ground as integer : ground = 1
global jumptimer as integer : jumptimer = 0
global radius# as double float : radius# = 7.0
global littleRadius# as double float : littleRadius# = 2.0
global Sprint_energy# as float:global Speed_factor# as float
global PlayerHeight# as float:global PlayerHeightDest# as float
PlayerHeightDest#=36.0
global PlayerState as string
Sprint_energy#=100.0:Speed_factor#=2.0
Create_CameraController()

`fog
fog on
fog color rgb(200,200,200)
fog distance 10,3500
backdrop on
color backdrop rgb(200,200,200)

set camera to image 0,4,1024,778

`terrain
global g_HeightmapImgID
global g_TextureImgID
global g_DetailmapImgID
g_HeightmapImgID=501
g_TextureImgID=502
g_DetailmapImgID=503
load image "movement_test\terrain_level_test\heightmap.bmp",g_HeightmapImgID
load image "movement_test\terrain_level_test\texture.jpg",g_TextureImgID
load image "movement_test\terrain_level_test\detail.tga",g_DetailmapImgID
global g_TerrainID
g_TerrainID=BT MakeTerrain()
BT SetTerrainHeightmap g_TerrainID,g_HeightmapImgID
BT SetTerrainTexture g_TerrainID,g_TextureImgID
BT SetTerrainDetail g_TerrainID,g_DetailmapImgID
BT SetTerrainScale g_TerrainID,24.0
BT SetTerrainYScale g_TerrainID,4.0
BT SetTerrainSplit g_TerrainID,8
BT SetTerrainDetailTile g_TerrainID,3.0
BT SetTerrainLOD g_TerrainID,3
BT SetTerrainLODDistance g_TerrainID,1,1000.0
BT SetTerrainLODDistance g_TerrainID,2,2000.0
BT SetTerrainSmoothing g_TerrainID,1
BT SetTerrainQuadRotation g_TerrainID,1
global g_TerrainObjectID
g_TerrainObjectID=500
BT BuildTerrain g_TerrainID,g_TerrainObjectID
BT SetBuildStep 0
repeat
	progress=BT ContinueBuild()
until progress=-1

`set object wireframe g_TerrainObjectID,1

Objectives_Init()

`load test level
load object "movement_test\testmap2.dbo",11,3
load effect "movement_test\LightMap.fx",1,0
position object 11,800,400,800
set object effect 11,1
Add_ObjectCollision(11)

load image "movement_test\alpha.png",3
global BlendMode
`texture object g_TerrainObjectID,3,3


load image "media\hud.png",5
sprite 5,0,0,5	
load image "media\compass.png",6
load object "media\circle.x",5
texture object 5,6
lock object on 5
set object light 5,0
set object cull 5,0
xrotate object 5,90
fix object pivot 5
position object 5,10.8,7.66,16
scale object 5,124,124,124

LODLevel=1 //Set this anywhere between 0 and 2
for i=0 to BT GetSectorCount(g_TerrainID,LODLevel)-1
	if BT GetSectorExcluded(g_TerrainID,LODLevel,i)=0
		BT MakeSectorObject g_TerrainID,LODLevel,i,501+i
		Add_ObjectCollision(501+i)
		exclude object on 501+i
	endif
next i

global Reclick

global HUD_x#
global HUD_y#
global HUD_z#

Objective_Add("Test1",1292,43,1122)
Objective_Add("Test2",496,43,1673)
Objective_Add("Test3",569,43,453)
Objective_Add("Test4",1163,43,114)

load object "weeds2\rock.dbo",300
exclude object on 300

grass_obj=301
for x=1 to 5:
for z=1 to 5:
	clone object grass_obj,300
	position object grass_obj,x*50,0,z*50
	grass_obj=grass_obj+1
next z
next x

/////////////////////////////////////

`main loop

do
    position mouse 320,240
    
    if KEYSTATE(60)
	y=10
	a2text font_default,10,y,"OpenFPS Game Engine",White:y=y+a2GetLineHeight(font_default)
	a2text font_default,10,y,"[Comet Fps] Loops/Second: "+str$(comet_screen_fps),White:y=y+a2GetLineHeight(font_default)
	a2text font_default,10,y,"[Comet Fps] Screen Fps: "+str$(screen fps()),White:y=y+a2GetLineHeight(font_default)
	a2text font_default,10,y,"[OpenFPS] Gun FOV: "+str$(Gun_FOV#),White:y=y+a2GetLineHeight(font_default)
	a2text font_default,10,y,"[OpenFPS] Gun Distance: "+str$(Gun_DIST#),White:y=y+a2GetLineHeight(font_default)
	a2text font_default,10,y,"[Cam] Position X: "+str$(camera position x()),White:y=y+a2GetLineHeight(font_default)
	a2text font_default,10,y,"[Cam] Position Y:"+str$(camera position y()),White:y=y+a2GetLineHeight(font_default)
	a2text font_default,10,y,"[Cam] Position Z:"+str$(camera position z()),White:y=y+a2GetLineHeight(font_default)

	if zone(camera position x(),camera position y(),camera position z()):
		a2text font_default,10,y,"[OpenFPS] Camera in zone!",White:y=y+a2GetLineHeight(font_default)
	endif
	endif
	
    Update_CameraController()
    
	position camera CAM_x#,CAM_y#,CAM_z#
	rotate camera CAM_AngleX#,CAM_AngleY#,CAM_AngleZ#
	
	cam_grass_x=int(CAM_x#/100)*100
	cam_grass_z=int(CAM_z#/100)*100
	
	grass_obj=301
	for x=1 to 5:
	for z=1 to 5:
	grass_x=cam_grass_x+(x*100)-250
	grass_z=cam_grass_z+(z*100)-250
	position object grass_obj,grass_x,0,grass_z
	dist_check#=distcheck(CAM_x#,0,CAM_z#,grass_x,0,grass_z)
	dist_alpha=clamp(((255-dist_check)),0,255)
	`set alpha mapping on grass_obj,dist_alpha
	grass_obj=grass_obj+1
	next z
	next x


	zrotate object 5,CAM_AngleY#
	
	GUN_x#=curveangle(360-CAM_AngleX#,GUN_x#,0.8)
	GUN_y#=curveangle(CAM_AngleY#+180,GUN_y#,0.4)
	GUN_z#=curveangle(CAM_Anglez#,GUN_z#,2.0)
	position object 2,camera position x(),camera position y(),camera position z()
	rotate object 2,GUN_x#,GUN_y#,GUN_z#
	move object 2,GUN_DIST#
	scale object 2,100,100,140
	set object fov 2,Gun_FOV#
	
   	`position sky
	position object 1,camera position x(),camera position y(),camera position z()
	yrotate object 1,wrapvalue(object angle y(1)+0.01)
	  
	BT SetCurrentCamera 0 //Set current camera to 0 (if the camera has moved/rotated since this command was last called, you must call it again!)
	BT UpdateTerrainCull g_TerrainID //Update frustum culling
	BT UpdateTerrainLOD g_TerrainID //Update LOD
	BT RenderTerrain g_TerrainID //Render the terrain
	
	comet_screen_fps=cometSYNC(60,500)
	
	Paste Image 4,0,0
	
    `Objectives_Update()
    
	`terminate the loop on escapekey
	if escapekey():
		exit
	endif
loop

/////////////////////////////////////

`terminate
ode end
end

/////////////////////////////////////

`functions

function ODE_ShootSphere():
	`doesn't work.
endfunction



function Add_ObjectCollision(obj_num):
    sc_setupComplexObject obj_num,1,2
	sc_updateObject obj_num
endfunction

function Create_CameraController():
	make object sphere camera_object,24.0
	sc_setupObject camera_object,0,1	
	position object camera_object,500,200,362
	make object sphere camera_object2,24.0
	sc_setupObject camera_object2,0,1
	position object camera_object2,500,200,362
	set alpha mapping on camera_object,50
	set object wireframe camera_object,1
	hide object camera_object
	hide object camera_object2
endfunction

function Update_CameraController():	
	PlayerState="STILL"
	rem rotate player with mouse
	mmx#=mousemovex()/3.0
	mmy#=mousemovey()/3.0
	yrotate object camera_object,object angle y(camera_object)+mmx#
	xrotate object camera_object,object angle x(camera_object)+mmy#
	
	CAM_MouseMove#=abs(mmx#)+abs(mmy#)
	
	oldx# = object position x(camera_object)
	oldy# = object position y(camera_object)
	oldz# = object position z(camera_object)
	oldx2# = object position x(camera_object2)
	oldy2# = object position y(camera_object2)
	oldz2# = object position z(camera_object2)
	
	angy# = object angle y(camera_object)
	vx# = 0 
	vz# = 0
	CAM_AngleZOrig# = 0
	
	if vy#=0 and jumptimer=0 then vy# = vy# + 10*gravity# else vy# = vy# + gravity#
	if keystate(32)=1 then vx# = vx# + cos(angy#) : vz# = vz# - sin(angy#) : CAM_AngleZOrig# = -8
	if keystate(30)=1 then vx# = vx# - cos(angy#) : vz# = vz# + sin(angy#) : CAM_AngleZOrig# = 8
	if keystate(31)=1 then vx# = vx# - sin(angy#) : vz# = vz# - cos(angy#) 
	if keystate(17)=1 then vx# = vx# + sin(angy#) : vz# = vz# + cos(angy#) 
	if ground=1
		if spacekey()=1 and jumptimer=0:
			vy# = vy# + 4.6 + (Speed_factor#/2)
			jumping = 1
			jumptimer=1
		endif
	endif
	
	if KEYSTATE(47) then vy#=2.0
	
	if abs(vx#)+abs(vz#)>0.1 then PlayerState="WALKING"
	
	if shiftkey():
		if abs(vx#)+abs(vz#)>0.1:
			if Sprint_energy#>4:
			Sprint_energy#=Sprint_energy#-1.0
			Speed_factor#=Speed_factor#+0.1
			PlayerState="RUNNING"
			else
				Sprint_energy#=-40
				Speed_factor#=Speed_factor#-0.1
			endif
		endif
	else
		Sprint_energy#=Sprint_energy#+1.0
		Speed_factor#=Speed_factor#-0.1
	endif
	Sprint_energy#=clamp(Sprint_energy#,-40.0,100.0)
	Speed_factor#=clamp(Speed_factor#,2.0,4.0)
	
	cvx#=curvevalue((vx#*Speed_factor#),cvx#,4.0)
	cvz#=curvevalue((vz#*Speed_factor#),cvz#,4.0)
	
	x# = oldx#+(cvx#)
	y# = oldy#+(vy#)
	z# = oldz#+(cvz#)
	
	`gravity (sparkies example code)
	collide = sc_SphereCastGroup(1,oldx#,oldy#,oldz#,oldx#,oldy#+vy#,oldz#,radius#,0)
	if collide>0 
		rem how flat is this ground
		ny# = sc_getCollisionNormalY()
		if abs(ny#)>slope#
			rem FLAT, stick
			oldy# = sc_getStaticCollisionY()
		else
			rem STEEP, slide
	      x# = x# - oldx# : z# = z# - oldz#
	      oldx# = sc_getCollisionSlideX()
	      oldy# = sc_getCollisionSlideY()
	      oldz# = sc_getCollisionSlideZ()
	      x# = x# + oldx# : z# = z# + oldz#
		endif
		
		rem ny#<0 means the player has hit a ceiling rather than a floor
		
		if ny#>slope#
			rem only on ground if standing on flat ground
			ground = 1 
			vy# = 0
		else 
			ground = 0
			rem if player has hit a flat ceiling then stop vy# movement
			if ny#<-slope# then vy# = gravity#
		endif
	else
		rem nothing below player, not on ground, add vertical speed to player
		oldy# = oldy# + vy#
		ground = 0
	endif
	
	rem jumptimer will decrease only when player is back on ground
	rem creates a pause between two successive jumps
	if spacekey()=0 then jumptimer=0
	if ground=1 then jumping=0
	
	rem handle horizontal movement as sliding
	rem player only collides with group 1 (level) objs and moves freely through others
	collide = sc_SphereSlideGroup(1,oldx#,oldy#,oldz#,x#,oldy#,z#,radius#,0)
	
	if controlkey()
		PlayerHeightDest#=20.0
		PlayerState="CROUCHING"
	else
		PlayerHeightDest#=36.0
	endif
	PlayerHeight#=curvevalue(PlayerHeightDest#,PlayerHeight#,2.0)
	
	if collide>0
		rem if hit, reposition player, halt movement vector
		x# = sc_getCollisionSlideX()
		oldy# = sc_getCollisionSlideY()
		z# = sc_getCollisionSlideZ()
		vx# = 0
		vz# = 0
		rem possible code for giving the player a jumping help up stairs...
		rem might be useful if slope# is set very high but stairs are still required
		`dy# = oldy#-sc_getStaticCollisionY()
		`if dy#<slope# and dy#>0 and ground=1 then vy# = 0.5
		a2text font_default,10,y,"[Cam] Body Collide!",White:y=y+a2GetLineHeight(font_default)
	endif
	
	`position player objects
	position object camera_object,x#,oldy#,z#
	
	`collide with actual head...
	x2#=x#
	y2#=oldy#+PlayerHeight#
	z2#=z#
	collide = sc_SphereSlideGroup(1,oldx2#,oldy2#,oldz2#,x2#,y2#,z2#,radius#-3,0)
	if collide>0
		x2# = sc_getCollisionSlideX()
		y2# = sc_getCollisionSlideY()
		z2# = sc_getCollisionSlideZ()
		PlayerHeightDest#=20.0
		vy# = 0
		position object camera_object,x2#,oldy#,z2#
		a2text font_default,10,y,"[Cam] Head Collide!",White:y=y+a2GetLineHeight(font_default)
	endif
	position object camera_object2,x2#,y2#,z2#
		
	
	sc_updateObject camera_object
	
	`CAM_AngleZ#=curvevalue(0.0,CAM_AngleZOrig#,8.0)
	
	CAM_x#=object position x(camera_object2)
	CAM_y#=object position y(camera_object2)
	CAM_z#=object position z(camera_object2)
	CAM_AngleX#=object angle x(camera_object)
	CAM_AngleY#=object angle y(camera_object)
endfunction


rem comet sync function
function cometSYNC(syncrate,update)

   rem get time elapsed
   syncrate=syncrate/(1000/update)
   ssync=syncrate
   inc syncrate,offset
   time=timer()
   time_elapsed=time-oldtimer

   rem count loops
   inc cloop

   rem check if 1 second passed
   if time_elapsed>=update

      rem calculate loops missed
      lastloopsmissed=loopsmissed
      loopsmissed=((syncrate-cloop)+lastloopsmissed)/2

      rem reset values
      result=cloop
      cloop=1
      oldtimer=time

      rem calculate when to skip next loops
      if loopsmissed<1
         skip#=0
         incskip#=0
      else
         x#=syncrate
         y#=loopsmissed
         skip#=x#/y#
         incskip#=skip#
      endif
      inc offset,(ssync-result)
      result=result*(1000/update)
   endif

   rem sync
   if int(skip#)=cloop then inc skip#,incskip# else sync

endfunction result


/////////////////////////////////////