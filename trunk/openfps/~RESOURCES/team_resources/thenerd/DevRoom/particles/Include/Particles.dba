`====================================================
` Partical Functions
`====================================================
` By EVOLVED
` www.evolved-software.com
`====================================================

`====================================================
` Find a Free Object
`====================================================
function Find_Free_Object()
   o=1000
   repeat:inc o:until object exist(o)=0
endfunction o

`====================================================
` Find a Free Effect
`====================================================
function Find_Free_Effect()
   e=500
   repeat:inc e:until effect exist(e)=0
endfunction e


`Emitter data
type EmitterData
   InUse
   Object
   Effect
   Visible
   Particles
   ParticleStart
   PositionX#
   PositionY#
   PositionZ#
   AngleX#
   AngleY#
   AngleZ#
   ParticleLife
   ParticleEmission#
   ParticleCurveScale#
   ParticleCurveDirection#
   ParticleCurveVelocity#
   ParticleCurveColor#
endtype

`Particle data
type ParticleData
   Update
   Life#
   Gravity#
   GravityPower#
   WindPower#
   Alpha#
   CurrentAlpha#
   AlphaStart
   PositionX#
   PositionY#
   PositionZ#
   StartPositionX#
   StartPositionY#
   StartPositionZ#
   StartRndAngleX#
   StartRndAngleY#
   StartRndAngleZ#
   AngleX#
   AngleY#
   AngleZ#
   RndAngleX#
   RndAngleY#
   RndAngleZ#
   CurrentDirectionX#
   DestinationDirectionX#
   CurrentDirectionY#
   DestinationDirectionY#
   CurrentDirectionZ#
   DestinationDirectionZ#
   Scale#
   CurrentScale#
   DestinationScale#
   Velocity#
   CurrentVelocity#
   DestinationVelocity#
   ColorR#
   CurrentColorR#
   DestinationColorR#
   ColorG#
   CurrentColorG#
   DestinationColorG#
   ColorB#
   CurrentColorB#
   DestinationColorB#
endtype

`====================================================
` Emmiter Setup
`====================================================
function Emitter_Setup()

   `Vectors
      null=make vector4(1)
      null=make vector3(2)
      null=make matrix4(3)
      null=make matrix4(4)
      null=make matrix4(5)

   `Variables.
      global EmitterCount
      global ParticleCount
      global Gravity#=0.025
      global EmitterWindX#
      global EmitterWindZ#
      Emitter_Set_Wind(45,2.0)

   `Arrays.
      global dim Emitter() as EmitterData
      global dim Particle() as ParticleData

endfunction

`====================================================
` Emmiter Set Wind
`====================================================
function Emitter_Set_Wind(WindAng#,WindPower#)
   rotate x matrix4 3,0
   rotate y matrix4 4,-(WindAng#)/57.3
   rotate z matrix4 5,0
   multiply matrix4 3,3,4:multiply matrix4 3,3,5
   set vector3 2,0,0,1:transform normals vector3 2,2,3
   EmitterWindX#=x vector3(2)*WindPower#
   EmitterWindZ#=z vector3(2)*WindPower#
endfunction

`====================================================
` Emmiter Up Date
`====================================================
function Emitter_UpDate(ETimer#)
   for e=0 to EmitterCount-1
      if Emitter(e).Visible=1 and Emitter(e).InUse=1
         null=get object effect(Emitter(e).Object,-1)
         for p=0 to Emitter(e).Particles
            Particle=p+Emitter(e).ParticleStart
            if Particle(Particle).Life#>Emitter(e).ParticleLife
               Particle(Particle).Update=1
               Particle(Particle).Life#=-(Particle(Particle).Life#-Emitter(e).ParticleLife)
               Particle(Particle).PositionX#=Emitter(e).PositionX#+Particle(Particle).StartPositionX#
               Particle(Particle).PositionY#=Emitter(e).PositionY#+Particle(Particle).StartPositionY#
               Particle(Particle).PositionZ#=Emitter(e).PositionZ#+Particle(Particle).StartPositionZ#
               NRndAngX#=(rnd(Particle(Particle).StartRndAngleX#*100)/100)-(Particle(Particle).StartRndAngleX#/2)
               NRndAngY#=(rnd(Particle(Particle).StartRndAngleY#*100)/100)-(Particle(Particle).StartRndAngleY#/2)
               NRndAngZ#=(rnd(Particle(Particle).StartRndAngleZ#*100)/100)-(Particle(Particle).StartRndAngleZ#/2)
               NewAngleX#=wrapvalue(Emitter(e).AngleX#+NRndAngX#)
               NewAngleY#=wrapvalue(Emitter(e).AngleY#+NRndAngY#)
               NewAngleZ#=wrapvalue(Emitter(e).AngleZ#+NRndAngZ#)
               rotate x matrix4 3,-NewAngleX#/57.3
               rotate y matrix4 4,-NewAngleY#/57.3
               rotate z matrix4 5,-NewAngleZ#/57.3
               multiply matrix4 3,3,4:multiply matrix4 3,3,5
               set vector3 2,0,0,1:transform normals vector3 2,2,3
               Particle(Particle).CurrentDirectionX#=x vector3(2)
               Particle(Particle).CurrentDirectionY#=y vector3(2)
               Particle(Particle).CurrentDirectionZ#=z vector3(2)
               NRndAngX#=NRndAngX#+((rnd(Particle(Particle).RndAngleX#*100)/100)-(Particle(Particle).RndAngleX#/2))
               NRndAngY#=NRndAngY#+((rnd(Particle(Particle).RndAngleY#*100)/100)-(Particle(Particle).RndAngleY#/2))
               NRndAngZ#=NRndAngZ#+((rnd(Particle(Particle).RndAngleZ#*100)/100)-(Particle(Particle).RndAngleZ#/2))
               rotate x matrix4 3,-wrapvalue(Emitter(e).AngleX#+Particle(Particle).AngleX#+NRndAngX#)/57.3
               rotate y matrix4 4,-wrapvalue(Emitter(e).AngleY#+Particle(Particle).AngleY#+NRndAngY#)/57.3
               rotate z matrix4 5,-wrapvalue(Emitter(e).AngleZ#+Particle(Particle).AngleZ#+NRndAngZ#)/57.3
               multiply matrix4 3,3,4:multiply matrix4 3,3,5
               set vector3 2,0,0,1:transform normals vector3 2,2,3
               Particle(Particle).DestinationDirectionX#=x vector3(2)
               Particle(Particle).DestinationDirectionY#=y vector3(2)
               Particle(Particle).DestinationDirectionZ#=z vector3(2)
               Particle(Particle).Gravity#=0
               Particle(Particle).CurrentAlpha#=1
               Particle(Particle).CurrentScale#=Particle(Particle).Scale#
               Particle(Particle).CurrentVelocity#=Particle(Particle).Velocity#
               Particle(Particle).CurrentColorR#=Particle(Particle).ColorR#
               Particle(Particle).CurrentColorG#=Particle(Particle).ColorG#
               Particle(Particle).CurrentColorB#=Particle(Particle).ColorB#
            endif
            if Particle(Particle).Update=1
               if Particle(Particle).Life#>Particle(Particle).AlphaStart
                  Particle(Particle).CurrentAlpha#=(Emitter(e).ParticleLife-((Particle(Particle).Life#-Particle(Particle).AlphaStart)/(1-Particle(Particle).Alpha#)))/Emitter(e).ParticleLife
               endif
               Particle(Particle).CurrentScale#=curvevalue(Particle(Particle).DestinationScale#,Particle(Particle).CurrentScale#,Emitter(e).ParticleCurveScale#/ETimer#)
               Particle(Particle).CurrentVelocity#=curvevalue(Particle(Particle).DestinationVelocity#,Particle(Particle).CurrentVelocity#,Emitter(e).ParticleCurveVelocity#/ETimer#)
               Particle(Particle).CurrentDirectionX#=curvevalue(Particle(Particle).DestinationDirectionX#,Particle(Particle).CurrentDirectionX#,Emitter(e).ParticleCurveDirection#/ETimer#)
               Particle(Particle).CurrentDirectionY#=curvevalue(Particle(Particle).DestinationDirectionY#,Particle(Particle).CurrentDirectionY#,Emitter(e).ParticleCurveDirection#/ETimer#)
               Particle(Particle).CurrentDirectionZ#=curvevalue(Particle(Particle).DestinationDirectionZ#,Particle(Particle).CurrentDirectionZ#,Emitter(e).ParticleCurveDirection#/ETimer#)
               Particle(Particle).CurrentColorR#=curvevalue(Particle(Particle).DestinationColorR#,Particle(Particle).CurrentColorR#,Emitter(e).ParticleCurveColor#/ETimer#)
               Particle(Particle).CurrentColorG#=curvevalue(Particle(Particle).DestinationColorG#,Particle(Particle).CurrentColorG#,Emitter(e).ParticleCurveColor#/ETimer#)
               Particle(Particle).CurrentColorB#=curvevalue(Particle(Particle).DestinationColorB#,Particle(Particle).CurrentColorB#,Emitter(e).ParticleCurveColor#/ETimer#)
               Particle(Particle).Gravity#=Particle(Particle).Gravity#+((Gravity#*Particle(Particle).GravityPower#)*ETimer#)
               Particle(Particle).PositionX#=Particle(Particle).PositionX#+(Particle(Particle).CurrentDirectionX#*(Particle(Particle).CurrentVelocity#*ETimer#))+((EmitterWindX#*Particle(Particle).WindPower#)*ETimer#)
               Particle(Particle).PositionY#=Particle(Particle).PositionY#+(Particle(Particle).CurrentDirectionY#*(Particle(Particle).CurrentVelocity#*ETimer#))-(Particle(Particle).Gravity#*ETimer#)
               Particle(Particle).PositionZ#=Particle(Particle).PositionZ#+(Particle(Particle).CurrentDirectionZ#*(Particle(Particle).CurrentVelocity#*ETimer#))+((EmitterWindZ#*Particle(Particle).WindPower#)*ETimer#)
               set vector4 1,Particle(Particle).PositionX#,Particle(Particle).PositionY#,Particle(Particle).PositionZ#,Particle(Particle).CurrentScale#
               set effect constant vector element "ParticlePosition",p,1
               set vector4 1,Particle(Particle).CurrentColorR#/255,Particle(Particle).CurrentColorG#/255,Particle(Particle).CurrentColorB#/255,Particle(Particle).CurrentAlpha#
               set effect constant vector element "ParticleColor",p,1
            endif
            inc Particle(Particle).Life#,ETimer#
         next p
         release effect pointer
      endif
   next e
endfunction

`====================================================
` Create Emitter
`====================================================
function Emitter_Create(Shader$,Texture,Particles#,Life#,Emission#)
   Emitter=-1
   for e=0 to EmitterCount-1
      if Emitter(e).InUse=0 then Emitter=e
   next e
   if Emitter=-1
      array insert at bottom Emitter()
      Emitter=EmitterCount
      inc EmitterCount
   endif
   Emitter(Emitter).InUse=1
   Emitter(Emitter).Object=Find_Free_Object()
   Emitter(Emitter).Effect=Find_Free_Effect()
   Emitter(Emitter).Visible=1
   Emitter(Emitter).ParticleLife=Life#
   Emitter(Emitter).Particles=Particles#-1
   Emitter(Emitter).ParticleStart=ParticleCount
   for p=0 to Particles#-1
      array insert at bottom Particle()
      Particle(ParticleCount).Life#=(Life#-(p*((Life#/(Particles#-1))*(Emission#/100))))
      inc ParticleCount
   next p
   Emitter_MakeObject(Emitter(Emitter).Object,Particles#)
   load effect Shader$,Emitter(Emitter).Effect,0,1
   set object effect Emitter(Emitter).Object,Emitter(Emitter).Effect
   texture object Emitter(Emitter).Object,0,Texture
   set object transparency Emitter(Emitter).Object,2
   disable object zwrite Emitter(Emitter).Object
endfunction Emitter

`====================================================
` Delete Emitter
`====================================================
function Emitter_Delete(Emitter)
if Emitter>-1 and Emitter<EmitterCount
   if Emitter(Emitter).InUse=1
      delete object Emitter(Emitter).Object
      delete effect Emitter(Emitter).Effect
      for p=0 to Emitter(Emitter).Particles
         array delete element Particle(),Emitter(Emitter).ParticleStart
         dec ParticleCount
      next p
      for e=0 to EmitterCount-1
         if e>Emitter
            if Emitter(e).InUse=1 then Emitter(e).ParticleStart=Emitter(e).ParticleStart-(Emitter(Emitter).Particles+1)
         endif
      next e
      Emitter(Emitter).InUse=0
      Emitter(Emitter).Visible=0
      Emitter(Emitter).ParticleStart=0
   endif
endif
endfunction

`====================================================
` Set Emitter Visible
`====================================================
function Emitter_Visible(Emitter,Vis)
if Emitter>-1 and Emitter<EmitterCount
   if Vis=1
      Emitter(Emitter).Visible=1
      show object Emitter(Emitter).Object
      exclude object off Emitter(Emitter).Object
   else
      Emitter(Emitter).Visible=0
      hide object Emitter(Emitter).Object
      exclude object on Emitter(Emitter).Object
   endif
endif
endfunction

`====================================================
` Emitter Position
`====================================================
function Emitter_Set_Position(Emitter,X#,Y#,Z#)
if Emitter>-1 and Emitter<EmitterCount
   Emitter(Emitter).PositionX#=X#
   Emitter(Emitter).PositionY#=Y#
   Emitter(Emitter).PositionZ#=Z#
endif
endfunction

`====================================================
` Emitter Angle
`====================================================
function Emitter_Set_Angle(Emitter,X#,Y#,Z#)
if Emitter>-1 and Emitter<EmitterCount
   Emitter(Emitter).AngleX#=X#
   Emitter(Emitter).AngleY#=Y#
   Emitter(Emitter).AngleZ#=Z#
endif
endfunction

`====================================================
` Particle alpha
`====================================================
function Emitter_SetParticle_Alpha(Emitter,Alpha#,RndAlpha#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).Alpha#=(Alpha#/100)+(rnd(RndAlpha#)/100)
   next p
endif
endfunction

`====================================================
` Particle alpha Start
`====================================================
function Emitter_SetParticle_AlphaStart(Emitter,AlphaStart)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).AlphaStart=AlphaStart
   next p
endif
endfunction

`====================================================
` Particle Gravity
`====================================================
function Emitter_SetParticle_Gravity(Emitter,GravityPower#,RndGravityPower#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).GravityPower#=(GravityPower#/100)+(rnd(RndGravityPower#)/100)
   next p
endif
endfunction

`====================================================
` Particle Wind
`====================================================
function Emitter_SetParticle_Wind(Emitter,WindPower#,RndWindPower#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).WindPower#=(WindPower#/100)+(rnd(RndWindPower#)/100)
   next p
endif
endfunction

`====================================================
` Particle Start Position
`====================================================
function Emitter_SetParticle_StartPosition(Emitter,RndX#,RndY#,RndZ#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).StartPositionX#=rnd(RndX#*2)-RndX#
      Particle(p+Emitter(Emitter).ParticleStart).StartPositionY#=rnd(RndY#*2)-RndY#
      Particle(p+Emitter(Emitter).ParticleStart).StartPositionZ#=rnd(RndZ#*2)-RndZ#
   next p
endif
endfunction

`====================================================
` Particle Rotation
`====================================================
function Emitter_SetParticle_Rotation(Emitter,Rotation#,RndRotation#)
if Emitter>-1 and Emitter<EmitterCount
   set vector4 1,RndRotation#,Rotation#,0,0
   set effect constant vector Emitter(Emitter).Effect,"Rotation",1
endif
endfunction

`====================================================
` Particle Start Angle
`====================================================
function Emitter_SetParticle_StartAngle(Emitter,RndX#,RndY#,RndZ#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).StartRndAngleX#=rnd(RndX#*2)-RndX#
      Particle(p+Emitter(Emitter).ParticleStart).StartRndAngleY#=rnd(RndY#*2)-RndY#
      Particle(p+Emitter(Emitter).ParticleStart).StartRndAngleZ#=rnd(RndZ#*2)-RndZ#
   next p
endif
endfunction

`====================================================
` Particle Destination Angle
`====================================================
function Emitter_SetParticle_DestinationAngle(Emitter,X#,Y#,Z#,RndX#,RndY#,RndZ#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).AngleX#=X#
      Particle(p+Emitter(Emitter).ParticleStart).AngleY#=Y#
      Particle(p+Emitter(Emitter).ParticleStart).AngleZ#=Z#
      Particle(p+Emitter(Emitter).ParticleStart).RndAngleX#=rnd(RndX#*2)-RndX#
      Particle(p+Emitter(Emitter).ParticleStart).RndAngleY#=rnd(RndY#*2)-RndY#
      Particle(p+Emitter(Emitter).ParticleStart).RndAngleZ#=rnd(RndZ#*2)-RndZ#
   next p
endif
endfunction

`====================================================
` Particle Curve Angle
`====================================================
function Emitter_SetParticle_CurveAngle(Emitter,CurveAngle#)
if Emitter>-1 and Emitter<EmitterCount
   Emitter(Emitter).ParticleCurveDirection#=CurveAngle#
endif
endfunction

`====================================================
` Particle Start Scale
`====================================================
function Emitter_SetParticle_StartScale(Emitter,Scale#,RndScale#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).Scale#=Scale#+rnd(RndScale#)
      Particle(p+Emitter(Emitter).ParticleStart).DestinationScale#=Particle(p+Emitter(Emitter).ParticleStart).Scale#
   next p
endif
endfunction

`====================================================
` Particle Destination Scale
`====================================================
function Emitter_SetParticle_DestinationScale(Emitter,DestinationScale#,RndDestinationScale#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).DestinationScale#=DestinationScale#+rnd(RndDestinationScale#)
   next p
endif
endfunction

`====================================================
` Particle Curve Scale
`====================================================
function Emitter_SetParticle_CurveScale(Emitter,CurveScale#)
if Emitter>-1 and Emitter<EmitterCount
   Emitter(Emitter).ParticleCurveScale#=CurveScale#
endif
endfunction

`====================================================
` Particle Start Velocity
`====================================================
function Emitter_SetParticle_StartVelocity(Emitter,Velocity#,RndVelocity#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).Velocity#=Velocity#+(rnd(RndVelocity#*100)/100)
      Particle(p+Emitter(Emitter).ParticleStart).DestinationVelocity#=Particle(p+Emitter(Emitter).ParticleStart).Velocity#
   next p
endif
endfunction

`====================================================
` Particle Destination Velocity
`====================================================
function Emitter_SetParticle_DestinationVelocity(Emitter,DestinationVelocity#,RndDestinationVelocity#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).DestinationVelocity#=DestinationVelocity#+(rnd(RndDestinationVelocity#*100)/100)
   next p
endif
endfunction

`====================================================
` Particle Curve Velocity
`====================================================
function Emitter_SetParticle_CurveVelocity(Emitter,CurveVelocity#)
if Emitter>-1 and Emitter<EmitterCount
   Emitter(Emitter).ParticleCurveVelocity#=CurveVelocity#
endif
endfunction

`====================================================
` Particle Start Color
`====================================================
function Emitter_SetParticle_StartColor(Emitter,ColorR#,ColorG#,ColorB#,RndColorR#,RndColorG#,RndColorB#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).ColorR#=ColorR#+rnd(RndColorR#)
      Particle(p+Emitter(Emitter).ParticleStart).ColorG#=ColorG#+rnd(RndColorG#)
      Particle(p+Emitter(Emitter).ParticleStart).ColorB#=ColorB#+rnd(RndColorB#)
      Particle(p+Emitter(Emitter).ParticleStart).DestinationColorR#=Particle(p+Emitter(Emitter).ParticleStart).ColorR#
      Particle(p+Emitter(Emitter).ParticleStart).DestinationColorG#=Particle(p+Emitter(Emitter).ParticleStart).ColorG#
      Particle(p+Emitter(Emitter).ParticleStart).DestinationColorB#=Particle(p+Emitter(Emitter).ParticleStart).ColorB#
   next p
endif
endfunction

`====================================================
` Particle Destination Color
`====================================================
function Emitter_SetParticle_DestinationColor(Emitter,ColorR#,ColorG#,ColorB#,RndColorR#,RndColorG#,RndColorB#)
if Emitter>-1 and Emitter<EmitterCount
   for p=0 to Emitter(Emitter).Particles
      Particle(p+Emitter(Emitter).ParticleStart).DestinationColorR#=ColorR#+rnd(RndColorR#)
      Particle(p+Emitter(Emitter).ParticleStart).DestinationColorG#=ColorG#+rnd(RndColorG#)
      Particle(p+Emitter(Emitter).ParticleStart).DestinationColorB#=ColorB#+rnd(RndColorB#)
   next p
endif
endfunction

`====================================================
` Particle Curve Color
`====================================================
function Emitter_SetParticle_CurveColor(Emitter,CurveColor#)
if Emitter>-1 and Emitter<EmitterCount
   Emitter(Emitter).ParticleCurveColor#=CurveColor#
endif
endfunction

`====================================================
` Emitter Make Object
`====================================================
function Emitter_MakeObject(Obj,Particles)
   Vertex=((Particles*3)*2)
   Make Memblock 1,(Vertex*40)+12
   Write Memblock Dword 1,0,(0x002 || 0x010 || 0x200)
   Write Memblock Dword 1,4,40
   Write Memblock Dword 1,8,Vertex
   make mesh from memblock 1,1
   delete memblock 1
   make object Obj,1,0
   set object normals Obj
   delete mesh 1
   make mesh from object 1,Obj
   delete object Obj
   Vertex=0:Index=0
   lock vertexdata for mesh 1
   for p=0 to Particles
      set indexdata Vertex,Index+0:inc Vertex
      set indexdata Vertex,Index+1:inc Vertex
      set indexdata Vertex,Index+2:inc Vertex
      set indexdata Vertex,Index+1:inc Vertex
      set indexdata Vertex,Index+3:inc Vertex
      set indexdata Vertex,Index+2:inc Vertex
      ang#=rnd(360)
      set vertexdata uv Index,0,1,0
      set vertexdata uv Index,1,p,ang#/57.3:inc Index
      set vertexdata uv Index,0,0,0
      set vertexdata uv Index,1,p,ang#/57.3:inc Index
      set vertexdata uv Index,0,1,1
      set vertexdata uv Index,1,p,ang#/57.3:inc Index
      set vertexdata uv Index,0,0,1
      set vertexdata uv Index,1,p,ang#/57.3:inc Index
   next p
   delete mesh from vertexdata Index,get vertexdata vertex count()-1,0,0
   unlock vertexdata
   make object Obj,1,0
   convert object fvf Obj,(0x002 || 0x200)
endfunction

