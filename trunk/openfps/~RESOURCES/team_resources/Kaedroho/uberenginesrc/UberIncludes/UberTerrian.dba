type UberTerrain
sectors as dword
sectorsize as float
split as float
scale as float
yscale as float
file as dword
hmwidth as dword
hmheight as dword
size as float
images as dword
lodadetail as dword
lodbdetail as dword
lodcdetail as dword
lodddetail as dword
lodedetail as dword
texturemode as byte
height as float
loddista as float
loddistb as float
loddistc as float
loddistd as float
loddiste as float
zonegroup as dword
waterobj as dword
endtype

#constant UBERTERRAIN_SIDE_TOP=1
#constant UBERTERRAIN_SIDE_RIGHT=2
#constant UBERTERRAIN_SIDE_BOTTOM=3
#constant UBERTERRAIN_SIDE_LEFT=4

type UberTerrain_image
colour as dword
image as dword
endtype

type UberTerrainPoint
height as float
environment as dword
colour as dword
endtype

type UberTerrainSector
objnuma as dword
objnumb as dword
objnumc as dword
objnumd as dword
objnume as dword
lodlevel as byte
updatevertexdata as boolean
row as dword
column as dword
xpos as float
ypos as float
zpos as float
zxpos as float
zypos as float
zzpos as float
aTopLOD as byte
aRightLOD as byte
aBottomLOD as byte
aLeftLOD as byte
bTopLOD as byte
bRightLOD as byte
bBottomLOD as byte
bLeftLOD as byte
cTopLOD as byte
cRightLOD as byte
cBottomLOD as byte
cLeftLOD as byte
dTopLOD as byte
dRightLOD as byte
dBottomLOD as byte
dLeftLOD as byte
eTopLOD as byte
eRightLOD as byte
eBottomLOD as byte
eLeftLOD as byte
zonenumber as dword
height as float
collisionactive as boolean
needsvertexdataupdate as boolean
endtype

UberTerrain_StartVars:
UberTerrain as UberTerrain
dim UberTerrainSector(0) as UberTerrainSector
dim UberTerrainPoint(0,0) as UberTerrainPoint
dim UberTerrain_image(0) as UberTerrain_image
UberTerrain.loddista=3000
UberTerrain.loddistb=6000
UberTerrain.loddistc=20000
UberTerrain.loddistd=25000
UberTerrain.loddiste=30000
return

function UberTerrain_LoadTerrain(file$)
if UberCore.Terrainmade<>1
   gosub UberTerrain_StartVars
   file=UberFile_LoadFile(UberCore_Folders.environments+file$)
   UberTerrain.file=file
   UberFile_LoadScript(file,"settings.txt")

   if lower$(lua string$("filetype"))="terrain"
      select upper$(lua string$("engineversion"))
         case "UB0.03"

            heightmap=UberFile_ExtractImage(file,"heightmap.bmp")
            texture=UberFile_ExtractImage(file,"texture.bmp")
            texturea=UberFile_ExtractImageReduce(file,"detail.tga",1)
            textureb=UberFile_ExtractImageReduce(file,"detail.tga",2)
            texturec=UberFile_ExtractImageReduce(file,"detail.tga",3)
            textured=UberFile_ExtractImageReduce(file,"detail.tga",4)
            texturee=UberFile_ExtractImageReduce(file,"detail.tga",5)
            environment=UberFile_ExtractImage(file,"environment.bmp")

            UberTerrain.hmwidth=image width(heightmap)
            UberTerrain.hmheight=image height(heightmap)

            UberTerrain.scale=lua float("Scale")
            UberTerrain.yscale=10`lua float("YScale")
            UberTerrain.size=image width(heightmap)*UberTerrain.scale
            UberTerrain.height=0`lua float("Height")

            UberTerrain.split=8`lua int("SectorSplit")
            UberTerrain.sectors=UberTerrain.split^2

            UberTerrain.sectorsize=UberTerrain.size/UberTerrain.split

            UberTerrain.lodadetail=UberTerrain.hmwidth/UberTerrain.split
            UberTerrain.lodbdetail=UberTerrain.lodadetail/2
            UberTerrain.lodcdetail=UberTerrain.lodbdetail/2
            UberTerrain.lodddetail=UberTerrain.lodcdetail/2
            UberTerrain.lodedetail=UberTerrain.lodddetail/2

            dim UberTerrainPoint(UberTerrain.hmwidth,UberTerrain.hmheight) as UberTerrainPoint

            environmentmemblock=UberCore_FreeMemblock()
            heightmapmemblock=UberCore_FreeMemblock()
            texturememblock=UberCore_FreeMemblock()

            make memblock from image environmentmemblock,environment
            make memblock from image heightmapmemblock,heightmap
            make memblock from image texturememblock,texture

            for x=1 to UberTerrain.hmwidth
            for y=1 to UberTerrain.hmheight
               dwordnum=(x-1)+UberTerrain.hmwidth*(y-1)
               mempos=12+dwordnum*4
               UberTerrainPoint(x,y).environment=memblock dword(environmentmemblock,mempos)
               UberTerrainPoint(x,y).colour=memblock dword(texturememblock,mempos)
               UberTerrainPoint(x,y).height=rgbr(memblock dword(heightmapmemblock,mempos))*UberTerrain.yscale
            next y
            next x


            delete memblock environmentmemblock
            delete memblock heightmapmemblock
            delete memblock texturememblock

            freememblock=UberCore_FreeMemblock()
            UberTerrain.zonegroup=UberZone_FindFreeGroup()
            for i=1 to UberTerrain.sectors
               array insert at bottom UberTerrainSector(0)

               if column=>UberTerrain.split
                  column=0
                  row=row+1
               endif
               UberTerrainSector(i).objnuma=UberCore_FreeObject()
               UberTerrainSector(i).objnumb=UberCore_FreeObject()
               UberTerrainSector(i).objnumc=UberCore_FreeObject()
               UberTerrainSector(i).objnumd=UberCore_FreeObject()
               UberTerrainSector(i).objnume=UberCore_FreeObject()
               UberTerrainSector(i).row=row
               UberTerrainSector(i).column=column

               UberTerrain_MakeSector(i,freememblock,1,UberTerrainSector(i).objnuma)
               UberTerrain_MakeSector(i,freememblock,2,UberTerrainSector(i).objnumb)
               UberTerrain_MakeSector(i,freememblock,3,UberTerrainSector(i).objnumc)
               UberTerrain_MakeSector(i,freememblock,4,UberTerrainSector(i).objnumd)
               UberTerrain_MakeSector(i,freememblock,5,UberTerrainSector(i).objnume)

					UberTerrainSector(i).aTopLOD=1
					UberTerrainSector(i).aRightLOD=1
					UberTerrainSector(i).aBottomLOD=1
					UberTerrainSector(i).aLeftLOD=1
					UberTerrainSector(i).bTopLOD=2
					UberTerrainSector(i).bRightLOD=2
					UberTerrainSector(i).bBottomLOD=2
					UberTerrainSector(i).bLeftLOD=2
					UberTerrainSector(i).cTopLOD=3
					UberTerrainSector(i).cRightLOD=3
					UberTerrainSector(i).cBottomLOD=3
					UberTerrainSector(i).cLeftLOD=3
					UberTerrainSector(i).dTopLOD=4
					UberTerrainSector(i).dRightLOD=4
					UberTerrainSector(i).dBottomLOD=4
					UberTerrainSector(i).dLeftLOD=4
					UberTerrainSector(i).eTopLOD=5
					UberTerrainSector(i).eRightLOD=5
					UberTerrainSector(i).eBottomLOD=5
					UberTerrainSector(i).eLeftLOD=5

               texture object UberTerrainSector(i).objnuma,texturea
               texture object UberTerrainSector(i).objnumb,textureb
               texture object UberTerrainSector(i).objnumc,texturec
               texture object UberTerrainSector(i).objnumd,textured
               texture object UberTerrainSector(i).objnume,texturee


               phy make rigid body static terrain UberTerrainSector(i).objnuma
               sc_setupcomplexobject UberTerrainSector(i).objnuma,0,2

               show object UberTerrainSector(i).objnuma
               hide object UberTerrainSector(i).objnumb
               hide object UberTerrainSector(i).objnumc
               hide object UberTerrainSector(i).objnumd
               hide object UberTerrainSector(i).objnume
               UberTerrainSector(i).lodlevel=1


               x#=UberTerrainSector(i).zxpos
               y#=UberTerrainSector(i).zypos
               z#=UberTerrainSector(i).zzpos
               width#=UberTerrain.sectorsize+10
               height#=UberTerrainSector(i).height+10
               depth#=UberTerrain.sectorsize+10
               UberTerrainSector(i).zonenumber=UberZone_MakeBoxZone(x#,y#,z#,width#,height#,depth#)
               UberZone_SetZoneGroup(UberTerrainSector(i).zonenumber,UberTerrain.zonegroup)
               UberZone_SetZoneValue(UberTerrainSector(i).zonenumber,i)
               UberZone_SetZoneName(UberTerrainSector(i).zonenumber,"TerrainSector")


               column=column+1
            next i


            UberCore.Terrainmade=1
         endcase
      endselect
   endif

   UberTerrain.file=0
   UberFile_CloseFile(file)
endif

endfunction


function UberTerrain_SetLODDistances(a,b,c,d,e)
UberTerrain.loddista=a
UberTerrain.loddistb=b
UberTerrain.loddistc=c
UberTerrain.loddistd=d
UberTerrain.loddiste=e
endfunction


UberTerrain_Update:
loda#=UberTerrain.loddista*UberCore.zoom`UberCore.viewrange*0.33
lodb#=UberTerrain.loddistb*UberCore.zoom`UberCore.viewrange*0.66
lodc#=UberTerrain.loddistc*UberCore.zoom`UberCore.viewrange
lodd#=UberTerrain.loddistd*UberCore.zoom`UberCore.viewrange
lode#=UberTerrain.loddiste*UberCore.zoom`UberCore.viewrange

camx#=camera position x(UberPlayer.camnum)
camy#=camera position y(UberPlayer.camnum)
camz#=camera position z(UberPlayer.camnum)

for i=1 to UberTerrain.sectors
   if object in screen(UberTerrainSector(i).objnumc)
		select UberTerrainSector(i).lodlevel
		
		endselect
   `STAGE 1

      x#=object position x(UberTerrainSector(i).objnumc)
      y#=object position y(UberTerrainSector(i).objnumc)
      z#=object position z(UberTerrainSector(i).objnumc)
      distsqr#=UberCalcs_GetDistanceSquared(camx#,camy#,camz#,x#,y#,z#)

      if distsqr#<loda#^2 and UberTerrainSector(i).lodlevel<>1
         UberTerrainSector(i).lodlevel=1
         UberTerrain_SectorLODChanged(i)
      endif

      if distsqr#<lodb#^2 and distsqr#>loda#^2 and UberTerrainSector(i).lodlevel<>2
         UberTerrainSector(i).lodlevel=2
         UberTerrain_SectorLODChanged(i)
      endif

      if distsqr#<lodc#^2 and distsqr#>lodb#^2 and UberTerrainSector(i).lodlevel<>3
         UberTerrainSector(i).lodlevel=3
         UberTerrain_SectorLODChanged(i)
      endif

      if distsqr#<lodd#^2 and distsqr#>lodc#^2 and UberTerrainSector(i).lodlevel<>4
         UberTerrainSector(i).lodlevel=4
         UberTerrain_SectorLODChanged(i)
      endif

      if distsqr#<lode#^2 and distsqr#>lodd#^2 and UberTerrainSector(i).lodlevel<>5
         UberTerrainSector(i).lodlevel=5
         UberTerrain_SectorLODChanged(i)
      endif

   `STAGE 2

         select UberTerrainSector(i).lodlevel
            case 1
               show object UberTerrainSector(i).objnuma
               hide object UberTerrainSector(i).objnumb
               hide object UberTerrainSector(i).objnumc
               hide object UberTerrainSector(i).objnumd
               hide object UberTerrainSector(i).objnume
            endcase
            case 2
               hide object UberTerrainSector(i).objnuma
               show object UberTerrainSector(i).objnumb
               hide object UberTerrainSector(i).objnumc
               hide object UberTerrainSector(i).objnumd
               hide object UberTerrainSector(i).objnume
            endcase
            case 3
               hide object UberTerrainSector(i).objnuma
               hide object UberTerrainSector(i).objnumb
               show object UberTerrainSector(i).objnumc
               hide object UberTerrainSector(i).objnumd
               hide object UberTerrainSector(i).objnume
            endcase
            case 4
               hide object UberTerrainSector(i).objnuma
               hide object UberTerrainSector(i).objnumb
               hide object UberTerrainSector(i).objnumc
               show object UberTerrainSector(i).objnumd
               hide object UberTerrainSector(i).objnume
            endcase
            case 5
               hide object UberTerrainSector(i).objnuma
               hide object UberTerrainSector(i).objnumb
               hide object UberTerrainSector(i).objnumc
               hide object UberTerrainSector(i).objnumd
               show object UberTerrainSector(i).objnume
            endcase
         endselect
   else
   	hide object UberTerrainSector(i).objnuma
   	hide object UberTerrainSector(i).objnumb
   	hide object UberTerrainSector(i).objnumc
   	hide object UberTerrainSector(i).objnumd
    hide object UberTerrainSector(i).objnume
   endif
next i

for i=1 to UberTerrain.sectors
    if UberTerrainSector(i).needsvertexdataupdate
        if object in screen(UberTerrainSector(i).objnumc)
        
       `STAGE 3
            UberTerrain_UpdateSectorVertexData(i)
        endif
    endif
next i

return

UberTerrain_End:
for i=1 to UberTerrain.sectors
	SC_RemoveObject UberTerrainSector(i).objnuma
next i


undim UberTerrainSector(0)
undim UberTerrainPoint(0,0)
undim UberTerrain_image(0)

UberTerrain.sectors=0
UberTerrain.sectorsize=0
UberTerrain.split=0
UberTerrain.scale=0
UberTerrain.yscale=0
UberTerrain.file=0
UberTerrain.hmwidth=0
UberTerrain.hmheight=0
UberTerrain.size=0
UberTerrain.images=0
UberTerrain.lodadetail=0
UberTerrain.lodbdetail=0
UberTerrain.lodcdetail=0
UberTerrain.texturemode=0
UberTerrain.height=0
return


function UberTerrain_SectorLODChanged(sector)
if UberTerrain_SectorExists(sector)
    UberTerrainSector(sector).needsvertexdataupdate=1

    rightsector=sector+UberTerrain.split
    bottomsector=sector-1
    leftsector=sector-UberTerrain.split
    topsector=sector+1
    
    if UberTerrain_SectorExists(rightsector)
        UberTerrainSector(rightsector).needsvertexdataupdate=1
    endif
    
    if UberTerrain_SectorExists(bottomsector)
        UberTerrainSector(bottomsector).needsvertexdataupdate=1
    endif
    
    if UberTerrain_SectorExists(leftsector)
        UberTerrainSector(leftsector).needsvertexdataupdate=1
    endif
    
    if UberTerrain_SectorExists(topsector)
        UberTerrainSector(topsector).needsvertexdataupdate=1
    endif
endif
endfunction

function UberTerrain_MakeSector(i,freememblock,lodlevel,objnum)

xpos#=UberTerrain.sectorsize/2+UberTerrainSector(i).row*UberTerrain.sectorsize
zpos#=UberTerrain.sectorsize/2+UberTerrainSector(i).column*UberTerrain.sectorsize

select lodlevel
   case 1
      QuadsAccross=UberTerrain.lodadetail
   endcase
   case 2
      QuadsAccross=UberTerrain.lodbdetail
   endcase
   case 3
      QuadsAccross=UberTerrain.lodcdetail
   endcase
   case 4
      QuadsAccross=UberTerrain.lodddetail
   endcase
   case 5
      QuadsAccross=UberTerrain.lodedetail
   endcase
endselect

Quads=int(QuadsAccross^2)
Polys=int(Quads*2)
Quadsize#=UberTerrain.sectorsize/QuadsAccross

texturewidth=UberTerrain.hmwidth
textureheight=UberTerrain.hmheight

`sectortype=1
if sectortype=0
	UberTerrain_MakeObjectPlain(objnum,UberTerrain.sectorsize,UberTerrain.sectorsize,QuadsAccross,QuadsAccross)
	
	HighestPoint#=0
	LowestPoint#=0
	lock vertexdata for limb objnum,0
	for t=0 to get vertexdata vertex count()-1
   	x#=get vertexdata position x(t)
   	z#=get vertexdata position z(t)
   	y#=UberTerrain_GetGroundHeight(x#+xpos#,z#+zpos#)
   	if y#>HighestPoint# then HighestPoint#=y#
   	if y#<LowestPoint# then LowestPoint#=y#
   	set vertexdata position t,x#,y#,z#
   	`set vertexdata uv t,(x#+xpos#)/UberTerrain.size,(z#+zpos#)/UberTerrain.size
   	
	next t

else
	make memblock freememblock,(Polys*3*36)+12
	
	write memblock dword freememblock,0,338
	write memblock dword freememblock,4,36
	write memblock dword freememblock,8,polys*3
	
	HighestPoint#=0
	lowestPoint#=0
	polygonnum=0
	for x=1 to QuadsAccross
   	for z=1 to QuadsAccross
      	xoffset#=x*Quadsize#-UberTerrain.sectorsize/2-Quadsize#
      	zoffset#=z*Quadsize#-UberTerrain.sectorsize/2-Quadsize#
	
      	PointAX#=xoffset#
      	PointAZ#=zoffset#
      	PointAY#=UberTerrain_GetGroundHeight(xpos#+PointAX#,zpos#+PointAZ#)
      	PointAU#=(xpos#+PointAX#)/UberTerrain.size
      	PointAV#=(zpos#+PointAZ#)/UberTerrain.size
      	TexX=int(PointAU#*texturewidth)
      	TexY=int(PointAV#*textureheight)
      	PointAColour=0
	
	
      	PointBX#=xoffset#+Quadsize#
      	PointBZ#=zoffset#
      	PointBY#=UberTerrain_GetGroundHeight(xpos#+PointBX#,zpos#+PointBZ#)
      	PointBU#=(xpos#+PointBX#)/UberTerrain.size
      	PointBV#=(zpos#+PointBZ#)/UberTerrain.size
      	TexX=int(PointBU#*texturewidth)
      	TexY=int(PointBV#*textureheight)
      	PointBColour=0
	
	
      	PointCX#=xoffset#+Quadsize#
      	PointCZ#=zoffset#+Quadsize#
      	PointCY#=UberTerrain_GetGroundHeight(xpos#+PointCX#,zpos#+PointCZ#)
      	PointCU#=(xpos#+PointCX#)/UberTerrain.size
      	PointCV#=(zpos#+PointCZ#)/UberTerrain.size
      	TexX=int(PointCU#*texturewidth)
      	TexY=int(PointCV#*textureheight)
      	PointCColour=0
	
	
      	PointDX#=xoffset#
      	PointDZ#=zoffset#+Quadsize#
      	PointDY#=UberTerrain_GetGroundHeight(xpos#+PointDX#,zpos#+PointDZ#)
      	PointDU#=(xpos#+PointDX#)/UberTerrain.size
      	PointDV#=(zpos#+PointDZ#)/UberTerrain.size
      	TexX=int(PointDU#*texturewidth)
      	TexY=int(PointDV#*textureheight)
      	PointDColour=0
	
	
      	if PointAY#>HighestPoint# then HighestPoint#=PointAY#
      	if PointBY#>HighestPoint# then HighestPoint#=PointBY#
      	if PointCY#>HighestPoint# then HighestPoint#=PointCY#
      	if PointDY#>HighestPoint# then HighestPoint#=PointDY#
	
      	if PointAY#<LowestPoint# then LowestPoint#=PointAY#
      	if PointBY#<LowestPoint# then LowestPoint#=PointBY#
      	if PointCY#<LowestPoint# then LowestPoint#=PointCY#
      	if PointDY#<LowestPoint# then LowestPoint#=PointDY#
	
      	write memblock float freememblock,12+36*polygonnum,PointCX#
      	write memblock float freememblock,16+36*polygonnum,PointCY#
      	write memblock float freememblock,20+36*polygonnum,PointCZ#
	
      	write memblock float freememblock,24+36*polygonnum,0
      	write memblock float freememblock,28+36*polygonnum,1
      	write memblock float freememblock,32+36*polygonnum,0
	
      	write memblock dword freememblock,36+36*polygonnum,PointCColour
	
      	write memblock float freememblock,40+36*polygonnum,PointCU#`*UberTerrain.split
      	write memblock float freememblock,44+36*polygonnum,PointCV#`*UberTerrain.split
	
      	polygonnum=polygonnum+1
	
      	write memblock float freememblock,12+36*polygonnum,PointBX#
      	write memblock float freememblock,16+36*polygonnum,PointBY#
      	write memblock float freememblock,20+36*polygonnum,PointBZ#
	
      	write memblock float freememblock,24+36*polygonnum,0
      	write memblock float freememblock,28+36*polygonnum,1
      	write memblock float freememblock,32+36*polygonnum,0
	
      	write memblock dword freememblock,36+36*polygonnum,PointBColour
	
      	write memblock float freememblock,40+36*polygonnum,PointBU#`*UberTerrain.split
      	write memblock float freememblock,44+36*polygonnum,PointBV#`*UberTerrain.split
	
      	polygonnum=polygonnum+1
	
      	write memblock float freememblock,12+36*polygonnum,PointAX#
      	write memblock float freememblock,16+36*polygonnum,PointAY#
      	write memblock float freememblock,20+36*polygonnum,PointAZ#
	
      	write memblock float freememblock,24+36*polygonnum,0
      	write memblock float freememblock,28+36*polygonnum,1
      	write memblock float freememblock,32+36*polygonnum,0
	
      	write memblock dword freememblock,36+36*polygonnum,PointAColour
	
      	write memblock float freememblock,40+36*polygonnum,PointAU#`*UberTerrain.split
      	write memblock float freememblock,44+36*polygonnum,PointAV#`*UberTerrain.split
	
      	polygonnum=polygonnum+1
	
      	write memblock float freememblock,12+36*polygonnum,PointAX#
      	write memblock float freememblock,16+36*polygonnum,PointAY#
      	write memblock float freememblock,20+36*polygonnum,PointAZ#
	
      	write memblock float freememblock,24+36*polygonnum,0
      	write memblock float freememblock,28+36*polygonnum,1
      	write memblock float freememblock,32+36*polygonnum,0
	
      	write memblock dword freememblock,36+36*polygonnum,PointAColour
	
      	write memblock float freememblock,40+36*polygonnum,PointAU#`*UberTerrain.split
      	write memblock float freememblock,44+36*polygonnum,PointAV#`*UberTerrain.split
	
      	polygonnum=polygonnum+1
	
      	write memblock float freememblock,12+36*polygonnum,PointDX#
      	write memblock float freememblock,16+36*polygonnum,PointDY#
      	write memblock float freememblock,20+36*polygonnum,PointDZ#
	
      	write memblock float freememblock,24+36*polygonnum,0
      	write memblock float freememblock,28+36*polygonnum,1
      	write memblock float freememblock,32+36*polygonnum,0
	
      	write memblock dword freememblock,36+36*polygonnum,PointDColour
	
      	write memblock float freememblock,40+36*polygonnum,PointDU#`*UberTerrain.split
      	write memblock float freememblock,44+36*polygonnum,PointDV#`*UberTerrain.split
	
      	polygonnum=polygonnum+1
	
      	write memblock float freememblock,12+36*polygonnum,PointCX#
      	write memblock float freememblock,16+36*polygonnum,PointCY#
      	write memblock float freememblock,20+36*polygonnum,PointCZ#
	
      	write memblock float freememblock,24+36*polygonnum,0
      	write memblock float freememblock,28+36*polygonnum,1
      	write memblock float freememblock,32+36*polygonnum,0
	
      	write memblock dword freememblock,36+36*polygonnum,PointCColour
	
	
      	write memblock float freememblock,40+36*polygonnum,PointCU#`*UberTerrain.split
      	write memblock float freememblock,44+36*polygonnum,PointCV#`*UberTerrain.split
	
      	polygonnum=polygonnum+1
	
   	next z
	next x
	meshnum=UberCore_FreeMesh()
	make mesh from memblock meshnum,freememblock
	delete memblock freememblock
	make object objnum,meshnum,0
	delete mesh meshnum
endif

set object normals objnum
set object specular power objnum,1000
set object specular objnum,rgb(255,255,255)
`set object wireframe objnum,1


ymov#=lowestPoint#+(HighestPoint#-LowestPoint#)/2
UberTerrainSector(i).xpos=xpos#
UberTerrainSector(i).ypos=ymov#
UberTerrainSector(i).zpos=zpos#
lock vertexdata for limb objnum,0
for t=0 to get vertexdata vertex count()-1
   `set vertexdata position t,get vertexdata position x(t),get vertexdata position y(t)-ymov#,get vertexdata position z(t)
	set vertexdata diffuse t,UberTerrain_GetPointColour(get vertexdata position x(t)+xpos#,get vertexdata position z(t)+zpos#)
	
next t

unlock vertexdata

calculate object bounds objnum

select lodlevel
   case 1
      UberTerrainSector(i).height=HighestPoint#-LowestPoint#
      UberTerrainSector(i).zxpos=xpos#-UberTerrain.sectorsize/2
      UberTerrainSector(i).zypos=ymov#
      UberTerrainSector(i).zzpos=zpos#-UberTerrain.sectorsize/2
      `color object objnum,rgb(0,0,255)
   endcase
   case 2
      `color object objnum,rgb(0,255,0)
   endcase
   case 3
      `color object objnum,rgb(255,0,0)
   endcase
   case 4
      `color object objnum,rgb(255,255,0)
   endcase
   case 5
      `color object objnum,rgb(0,255,255)
   endcase
endselect


position object objnum,UberTerrain.sectorsize*UberTerrainSector(i).row,0,UberTerrain.sectorsize*UberTerrainSector(i).column
endfunction

function UberTerrain_MakeTexture(colour,file$)
if UberTerrain.file
   array insert at bottom UberTerrain_image(0)
   UberTerrain.images=UberTerrain.images=1
   n=UberTerrain.images
   UberTerrain_image(n).colour=colour
   UberTerrain_image(n).image=UberFile_ExtractImage(UberTerrain.file,file$)
endif
endfunction

function UberTerrain_GetGroundHeight(x#,z#)
tilesize#=UberTerrain.sectorsize/UberTerrain.lodadetail
x#=x#+tilesize#
z#=z#+tilesize#

xt=int(x#/tilesize#)
zt=int(z#/tilesize#)
if (((xt+1)*tilesize#)-x#)+(z#-(zt*tilesize#))<=tilesize#
   dx#=UberTerrain_GetPointheight(xt+1,zt)-UberTerrain_GetPointheight(xt,zt)
   dz#=UberTerrain_GetPointheight(xt+1,zt+1)-UberTerrain_GetPointheight(xt+1,zt)
else
   dx#=UberTerrain_GetPointheight(xt+1,zt+1)-UberTerrain_GetPointheight(xt,zt+1)
   dz#=UberTerrain_GetPointheight(xt,zt+1)-UberTerrain_GetPointheight(xt,zt)
endif
height#=(((x#-(xt*tilesize#))/tilesize#)*dx#)+(((z#-(zt*tilesize#))/tilesize#)*dz#)+UberTerrain_GetPointheight(xt,zt)+UberTerrain.height
endfunction height#

function UberTerrain_GetGroundHeightDetail(detail,x#,z#)
tilesize#=UberTerrain.sectorsize/UberTerrain.lodadetail
x#=x#+tilesize#
z#=z#+tilesize#

xt=int(x#/tilesize#)
zt=int(z#/tilesize#)
if (((xt+1)*tilesize#)-x#)+(z#-(zt*tilesize#))<=tilesize#
   dx#=UberTerrain_GetPointheightDetail(detail,xt+1,zt)-UberTerrain_GetPointheightDetail(detail,xt,zt)
   dz#=UberTerrain_GetPointheightDetail(detail,xt+1,zt+1)-UberTerrain_GetPointheightDetail(detail,xt+1,zt)
else
   dx#=UberTerrain_GetPointheightDetail(detail,xt+1,zt+1)-UberTerrain_GetPointheightDetail(detail,xt,zt+1)
   dz#=UberTerrain_GetPointheightDetail(detail,xt,zt+1)-UberTerrain_GetPointheightDetail(detail,xt,zt)
endif
height#=(((x#-(xt*tilesize#))/tilesize#)*dx#)+(((z#-(zt*tilesize#))/tilesize#)*dz#)+UberTerrain_GetPointheightDetail(detail,xt,zt)+UberTerrain.height
endfunction height#

function UberTerrain_GetPointheightDetail(detail,x#,z#)
select detail
	case 1
		loddetail#=1
	endcase
	case 2
		loddetail#=2
	endcase
	case 3
		loddetail#=4
	endcase
	case 4
		loddetail#=8
	endcase
	case 5
		loddetail#=16
	endcase
endselect
nxd#=UberCalcs_RoundDown(x#,loddetail#)
nzd#=UberCalcs_RoundDown(z#,loddetail#)
nxu#=UberCalcs_RoundUp(x#,loddetail#)
nzu#=UberCalcs_RoundUp(z#,loddetail#)

tilesize#=nxu#-nxd#
xpos#=(x#-nxd#)/tilesize#
zpos#=(z#-nzd#)/tilesize#

ah#=UberTerrain_GetPointheight(int(nxd#),int(nzu#))
bh#=UberTerrain_GetPointheight(int(nxu#),int(nzu#))
ch#=UberTerrain_GetPointheight(int(nxu#),int(nzd#))
dh#=UberTerrain_GetPointheight(int(nxd#),int(nzd#))

lh#=ah#+(ch#-ah#)*zpos#
rh#=bh#+(dh#-bh#)*zpos#
height#=lh#+(rh#-lh#)*xpos#
endfunction height#

function UberTerrain_GetPointheight(x,z)
if x>UberTerrain.hmwidth then x=UberTerrain.hmwidth-1
if x<0 then x=0
if z>UberTerrain.hmheight then z=UberTerrain.hmheight-1
if z<0 then z=0
height#=UberTerrainPoint(x,z).height
endfunction height#

function UberTerrain_UpdateSectorVertexData(sector)
if UberTerrain_SectorExists(sector)

   abovesector=sector+1
   rightsector=sector+UberTerrain.split
   belowsector=sector-1
   leftsector=sector-UberTerrain.split

   abovesectorexists=UberTerrain_SectorExists(abovesector)
   rightsectorexists=UberTerrain_SectorExists(rightsector)
   belowsectorexists=UberTerrain_SectorExists(belowsector)
   leftsectorexists=UberTerrain_SectorExists(leftsector)
   
   thislodlevel=UberTerrain_GetSectorLodLevel(sector)
   select thislodlevel
      case 1
         objnum=UberTerrainSector(sector).objnuma
         detail=UberTerrain.Lodadetail
         topsidelodlevel=UberTerrainSector(sector).aTopLOD
   		rightsidelodlevel=UberTerrainSector(sector).aRightLOD
   		bottomsidelodlevel=UberTerrainSector(sector).aBottomLOD
   		leftsidelodlevel=UberTerrainSector(sector).aLeftLOD
      endcase
      case 2
         objnum=UberTerrainSector(sector).objnumb
         detail=UberTerrain.Lodbdetail
         
         topsidelodlevel=UberTerrainSector(sector).bTopLOD
   		rightsidelodlevel=UberTerrainSector(sector).bRightLOD
   		bottomsidelodlevel=UberTerrainSector(sector).bBottomLOD
   		leftsidelodlevel=UberTerrainSector(sector).bLeftLOD
      endcase
      case 3
         objnum=UberTerrainSector(sector).objnumc
         detail=UberTerrain.Lodcdetail
         
         topsidelodlevel=UberTerrainSector(sector).cTopLOD
   		rightsidelodlevel=UberTerrainSector(sector).cRightLOD
   		bottomsidelodlevel=UberTerrainSector(sector).cBottomLOD
   		leftsidelodlevel=UberTerrainSector(sector).cLeftLOD
      endcase
      case 4
         objnum=UberTerrainSector(sector).objnumd
         detail=UberTerrain.Lodddetail
         
         topsidelodlevel=UberTerrainSector(sector).dTopLOD
   		rightsidelodlevel=UberTerrainSector(sector).dRightLOD
   		bottomsidelodlevel=UberTerrainSector(sector).dBottomLOD
   		leftsidelodlevel=UberTerrainSector(sector).dLeftLOD
      endcase
      case 5
         objnum=UberTerrainSector(sector).objnume
         detail=UberTerrain.Lodedetail
         
          topsidelodlevel=UberTerrainSector(sector).eTopLOD
   		 rightsidelodlevel=UberTerrainSector(sector).eRightLOD
   		 bottomsidelodlevel=UberTerrainSector(sector).eBottomLOD
   		 leftsidelodlevel=UberTerrainSector(sector).eLeftLOD
      endcase
   endselect

	abovelodlevel=0
	rightlodlevel=0
	belowlodlevel=0
	leftlodlevel=0
   if abovesectorexists then abovelodlevel=UberTerrain_GetSectorLodLevel(abovesector)
   if rightsectorexists then rightlodlevel=UberTerrain_GetSectorLodLevel(rightsector)
   if belowsectorexists then belowlodlevel=UberTerrain_GetSectorLodLevel(belowsector)
   if leftsectorexists then leftlodlevel=UberTerrain_GetSectorLodLevel(leftsector)

   updatetop=abovesectorexists and thislodlevel<abovelodlevel `topsidelodlevel<>abovelodlevel and thislodlevel<abovelodlevel and abovesectorexists
   updateright=rightsectorexists and thislodlevel<rightlodlevel `rightsidelodlevel<>rightlodlevel and thislodlevel<rightlodlevel and rightsectorexists
   updatebottom=belowsectorexists and thislodlevel<belowlodlevel `bottomsidelodlevel<>belowlodlevel and thislodlevel<belowlodlevel and belowsectorexists
   updateleft=leftsectorexists and thislodlevel<leftlodlevel `leftsidelodlevel<>leftlodlevel and thislodlevel<leftlodlevel and leftsectorexists
   update=updatetop or updateright or updatebottom or updateleft

   resettop=topsidelodlevel<>thislodlevel and thislodlevel=>abovelodlevel and abovesectorexists
   resetright=rightsidelodlevel<>thislodlevel and thislodlevel=>rightlodlevel and rightsectorexists
   resetbottom=bottomsidelodlevel<>thislodlevel and thislodlevel=>belowlodlevel and belowsectorexists
   resetleft=leftsidelodlevel<>thislodlevel and thislodlevel=>leftlodlevel and leftsectorexists
   reset=resettop or resetright or resetbottom or resetleft

   if update or reset
   	tilesize#=UberTerrain.sectorsize/detail
      lock vertexdata for limb objnum,0
      	set vertexdata position 1,get vertexdata position x(1),get vertexdata position y(1),get vertexdata position z(1)
         if update
            if updatetop and abovesectorexists
            	aboveloddetail=UberTerrain_GetLODDetail(abovelodlevel)
            	
					difference=int(detail/aboveloddetail)
	
					UberTerrain_SetSideLodLevel(sector,UBERTERRAIN_SIDE_TOP,abovelodlevel)
					
					for i=1 to int(detail/difference)
						x=i*difference-1
						z=0
						vertex=x+z*(detail+1)
						`set vertexdata diffuse vertex,rgb(255,0,0)
						thisx#=get vertexdata position x(vertex)
						thisz#=get vertexdata position z(vertex)
						pax#=thisx#+tilesize#
						paz#=thisz#
						pbx#=thisx#-tilesize#
						pbz#=thisz#
						pos#=0.5
						
						pay#=UberTerrain_GetGroundHeight(pax#+UberTerrainSector(sector).xpos,paz#+UberTerrainSector(sector).zpos)
						pby#=UberTerrain_GetGroundHeight(pbx#+UberTerrainSector(sector).xpos,pbz#+UberTerrainSector(sector).zpos)
						
						thisy#=pay#+(pby#-pay#)*pos#
						set vertexdata position vertex,thisx#,thisy#,thisz#
					next i
            endif
            if updateright and rightsectorexists
            	rightloddetail=UberTerrain_GetLODDetail(rightlodlevel)
            	
					difference=int(detail/rightloddetail)
					
					UberTerrain_SetSideLodLevel(sector,UBERTERRAIN_SIDE_RIGHT,rightlodlevel)
										
					for i=1 to int(detail/difference)
						x=detail
						z=i*difference-1
						vertex=x+z*(detail+1)
						`set vertexdata diffuse vertex,rgb(0,255,0)
						thisx#=get vertexdata position x(vertex)
						thisz#=get vertexdata position z(vertex)
						pax#=thisx#
						paz#=thisz#+tilesize#
						pbx#=thisx#
						pbz#=thisz#-tilesize#
						pos#=0.5
						
						pay#=UberTerrain_GetGroundHeight(pax#+UberTerrainSector(sector).xpos,paz#+UberTerrainSector(sector).zpos)
						pby#=UberTerrain_GetGroundHeight(pbx#+UberTerrainSector(sector).xpos,pbz#+UberTerrainSector(sector).zpos)
						
						thisy#=pay#+(pby#-pay#)*pos#
						set vertexdata position vertex,thisx#,thisy#,thisz#
					next i
            endif
            if updatebottom and belowsectorexists
            	belowloddetail=UberTerrain_GetLODDetail(belowlodlevel)
            	
					difference=int(detail/belowloddetail)
					
					UberTerrain_SetSideLodLevel(sector,UBERTERRAIN_SIDE_BOTTOM,belowloddetail)
										
					for i=1 to int(detail/difference)
						x=i*difference-1
						z=detail
						vertex=x+z*(detail+1)
						`set vertexdata diffuse vertex,rgb(0,0,255)
						thisx#=get vertexdata position x(vertex)
						thisz#=get vertexdata position z(vertex)
						pax#=thisx#+tilesize#
						paz#=thisz#
						pbx#=thisx#-tilesize#
						pbz#=thisz#
						pos#=0.5
						
						pay#=UberTerrain_GetGroundHeight(pax#+UberTerrainSector(sector).xpos,paz#+UberTerrainSector(sector).zpos)
						pby#=UberTerrain_GetGroundHeight(pbx#+UberTerrainSector(sector).xpos,pbz#+UberTerrainSector(sector).zpos)
						
						thisy#=pay#+(pby#-pay#)*pos#
						set vertexdata position vertex,thisx#,thisy#,thisz#
					next i
            endif
            if updateleft and leftsectorexists
            	leftloddetail=UberTerrain_GetLODDetail(leftlodlevel)
            	
					difference=int(detail/leftloddetail)
					
					UberTerrain_SetSideLodLevel(sector,UBERTERRAIN_SIDE_LEFT,leftlodlevel)
									
					for i=1 to int(detail/difference)
						x=detail+1
						z=i*difference-2
						vertex=x+z*(detail+1)
						`set vertexdata diffuse vertex,rgb(255,255,0)
						thisx#=get vertexdata position x(vertex)
						thisz#=get vertexdata position z(vertex)
						pax#=thisx#
						paz#=thisz#+tilesize#
						pbx#=thisx#
						pbz#=thisz#-tilesize#
						pos#=0.5
						
						pay#=UberTerrain_GetGroundHeight(pax#+UberTerrainSector(sector).xpos,paz#+UberTerrainSector(sector).zpos)
						pby#=UberTerrain_GetGroundHeight(pbx#+UberTerrainSector(sector).xpos,pbz#+UberTerrainSector(sector).zpos)
						
						thisy#=pay#+(pby#-pay#)*pos#
						set vertexdata position vertex,thisx#,thisy#,thisz#
					next i	
            endif
         endif

         if reset
				if resettop
					UberTerrain_SetSideLodLevel(sector,UBERTERRAIN_SIDE_TOP,thislodlevel)
					for i=1 to detail+1
						x=i-1
						z=0
						vertex=x+z*(detail+1)
						x#=get vertexdata position x(vertex)
						z#=get vertexdata position z(vertex)
						y#=UberTerrain_GetGroundHeight(x#+UberTerrainSector(sector).xpos,z#+UberTerrainSector(sector).zpos)
						curry#=get vertexdata position y(vertex)
                        if y#-0.5>curry# or y#+0.5<curry#
                            set vertexdata position vertex,x#,y#,z#
                        endif
						`set vertexdata diffuse vertex,rgb(255,255,255)
					next i
				endif
				if resetright
					UberTerrain_SetSideLodLevel(sector,UBERTERRAIN_SIDE_RIGHT,thislodlevel)
					for i=1 to detail+1
						x=detail
						z=i-1
						vertex=x+z*(detail+1)
						x#=get vertexdata position x(vertex)
						z#=get vertexdata position z(vertex)
						y#=UberTerrain_GetGroundHeight(x#+UberTerrainSector(sector).xpos,z#+UberTerrainSector(sector).zpos)
						curry#=get vertexdata position y(vertex)
                        if y#-0.5>curry# or y#+0.5<curry#
                            set vertexdata position vertex,x#,y#,z#
                        endif
						`set vertexdata diffuse vertex,rgb(0,0,255)
					next i
				endif
				if resetbottom
					UberTerrain_SetSideLodLevel(sector,UBERTERRAIN_SIDE_BOTTOM,thislodlevel)
					for i=1 to detail+1
						x=i-1
						z=detail
						vertex=x+z*(detail+1)
						x#=get vertexdata position x(vertex)
						z#=get vertexdata position z(vertex)
						y#=UberTerrain_GetGroundHeight(x#+UberTerrainSector(sector).xpos,z#+UberTerrainSector(sector).zpos)
						curry#=get vertexdata position y(vertex)
                        if y#-0.5>curry# or y#+0.5<curry#
                            set vertexdata position vertex,x#,y#,z#
                        endif
						`set vertexdata diffuse vertex,rgb(255,255,255)
					next i
				endif
				if resetleft
					UberTerrain_SetSideLodLevel(sector,UBERTERRAIN_SIDE_LEFT,thislodlevel)
					for i=1 to detail+1
						x=detail+1
						z=i-1
						vertex=x+z*(detail+1)
						x#=get vertexdata position x(vertex)
						z#=get vertexdata position z(vertex)
						y#=UberTerrain_GetGroundHeight(x#+UberTerrainSector(sector).xpos,z#+UberTerrainSector(sector).zpos)
						curry#=get vertexdata position y(vertex)
                        if y#-0.5>curry# or y#+0.5<curry#
                            set vertexdata position vertex,x#,y#,z#
                        endif
						`set vertexdata diffuse vertex,rgb(255,255,255)
					next i
				endif
			endif
      unlock vertexdata
   endif
endif
endfunction

function UberTerrain_GetLODDetail(lodlevel)
select lodlevel
   case 1
      detail=UberTerrain.Lodadetail
   endcase
   case 2
      detail=UberTerrain.Lodbdetail
   endcase
   case 3
      detail=UberTerrain.Lodcdetail
   endcase
   case 4
      detail=UberTerrain.Lodddetail
   endcase
   case 5
      detail=UberTerrain.Lodedetail
   endcase
endselect				

endfunction detail

function UberTerrain_SectorExists(sector)
returnval=sector>0 and sector<=UberTerrain.sectors
endfunction returnval

function UberTerrain_GetSectorLodLevel(sector)
lodlevel=0
if UberTerrain_SectorExists(sector)
   lodlevel=UberTerrainSector(sector).lodlevel
endif
endfunction lodlevel

function UberTerrain_SetSideLodLevel(sector,side,level)
if UberTerrain_SectorExists(sector)
	lodlevel=UberTerrain_GetSectorLodLevel(sector)
	select side
		case UBERTERRAIN_SIDE_TOP
			if lodlevel=1
				UberTerrainSector(sector).aTopLOD=level
			endif
			if lodlevel=2
				UberTerrainSector(sector).bTopLOD=level
			endif
			if lodlevel=3
				UberTerrainSector(sector).cTopLOD=level
			endif
			if lodlevel=4
				UberTerrainSector(sector).dTopLOD=level
			endif
			if lodlevel=5
				UberTerrainSector(sector).eTopLOD=level
			endif
		endcase
		case UBERTERRAIN_SIDE_RIGHT
			if lodlevel=1
				UberTerrainSector(sector).aRightLOD=level
			endif
			if lodlevel=2
				UberTerrainSector(sector).bRightLOD=level
			endif
			if lodlevel=3
				UberTerrainSector(sector).cRightLOD=level
			endif
			if lodlevel=4
				UberTerrainSector(sector).dRightLOD=level
			endif
			if lodlevel=5
				UberTerrainSector(sector).eRightLOD=level
			endif
		endcase
		case UBERTERRAIN_SIDE_BOTTOM
			if lodlevel=1
				UberTerrainSector(sector).aBottomLOD=level
			endif
			if lodlevel=2
				UberTerrainSector(sector).bBottomLOD=level
			endif
			if lodlevel=3
				UberTerrainSector(sector).cBottomLOD=level
			endif
			if lodlevel=4
				UberTerrainSector(sector).dBottomLOD=level
			endif
			if lodlevel=5
				UberTerrainSector(sector).eBottomLOD=level
			endif
		endcase
		case UBERTERRAIN_SIDE_LEFT
			if lodlevel=1
				UberTerrainSector(sector).aLeftLOD=level
			endif
			if lodlevel=2
				UberTerrainSector(sector).bLeftLOD=level
			endif
			if lodlevel=3
				UberTerrainSector(sector).cLeftLOD=level
			endif
			if lodlevel=4
				UberTerrainSector(sector).dLeftLOD=level
			endif
			if lodlevel=5
				UberTerrainSector(sector).eLeftLOD=level
			endif
		endcase
	endselect
endif
endfunction

function UberTerrain_GetPointColour(x#,z#)
mapwidth#=UberTerrain.size
mapheight#=UberTerrain.size
u#=x#/mapwidth#
v#=z#/mapheight#

while u#=>1
u#=u#-1
endwhile
while v#=>1
v#=v#-1
endwhile

while u#<0
u#=u#+1
endwhile
while v#<0
v#=v#+1
endwhile

hmapwidth=UberTerrain.hmwidth
hmapheight=UberTerrain.hmheight
px=floor(u#*hmapwidth)
py=floor(v#*hmapheight)

colour=UberTerrainPoint(px,py).colour
endfunction colour

`START WRITTEN BY: IAN M-----------------------------------------------------------------------------------------------------------------------

function UberTerrain_MakeObjectPlain(ObjectID as integer, Width as float, Depth as float, XSegs as integer, ZSegs as integer)
   local XPos as float
   local ZPos as float
   local XStep as float
   local ZStep as float
   local XStart as float
   local ZStart as float

   XStep = Width / XSegs
   XStart = 0.0 - (XStep * XSegs / 2.0)
   ZStep = Depth / ZSegs
   ZStart = ZStep * ZSegs / 2.0

   MAKE OBJECT NEW ObjectID, (XSegs+1)*(ZSegs+1), 6*XSegs*ZSegs, 338
   lock vertexdata for limb ObjectID, 0

   V = 0
   ZPos = ZStart
   for z = 0 to ZSegs
      XPos = XStart
      for x = 0 to XSegs
         UberTerrain_SetVertexData(V, XPos, 0.0, ZPos, 0.0, 1.0, 0.0, 1.0 / ((XSegs + 0.0) / x), 1.0 / ((ZSegs + 0.0) / z), 0xffffffff )
         inc V
         inc XPos, XStep
      next
      dec ZPos, ZStep
   next

   I = 0
   for z = 0 to ZSegs - 1
      for x = 0 to XSegs - 1
         set indexdata I    , UberTerrain_GetPlaneVertex(x, z, C_TOP_LEFT, XSegs, ZSegs)
         set indexdata I + 1, UberTerrain_GetPlaneVertex(x, z, C_TOP_RIGHT, XSegs, ZSegs)
         set indexdata I + 2, UberTerrain_GetPlaneVertex(x, z, C_BOT_LEFT, XSegs, ZSegs)
         set indexdata I + 3, UberTerrain_GetPlaneVertex(x, z, C_TOP_RIGHT, XSegs, ZSegs)
         set indexdata I + 4, UberTerrain_GetPlaneVertex(x, z, C_BOT_RIGHT, XSegs, ZSegs)
         set indexdata I + 5, UberTerrain_GetPlaneVertex(x, z, C_BOT_LEFT, XSegs, ZSegs)
         inc I, 6
      next
   next
   unlock vertexdata
endfunction

function UberTerrain_SetVertexdata(Index as integer, x as float, y as float, z as float, nx as float, ny as float, nz as float, u as float, v as float, d as dword)
   set vertexdata position Index, x, y, z
   set vertexdata normals  Index, nx, ny, nz
   set vertexdata uv       Index, u, v
   set vertexdata diffuse  Index, d
endfunction

#constant C_TOP_LEFT  1
#constant C_TOP_RIGHT 2
#constant C_BOT_LEFT  3
#constant C_BOT_RIGHT 4

function UberTerrain_GetPlaneVertex(X as integer, Z as integer, Corner as integer, XSegs as integer, ZSegs as integer)
   local V as integer

   V = (XSegs + 1) * Z + X
   select Corner
      case C_TOP_LEFT  :                  : endcase
      case C_TOP_RIGHT : inc V            : endcase
      case C_BOT_LEFT  : inc V, XSegs + 1 : endcase
      case C_BOT_RIGHT : inc V, XSegs + 2 : endcase
      case default     : V = -1           : endcase
   endselect
endfunction V

`END WRITTEN BY: IAN M-------------------------------------------------------------------------------------------------------------------------

function UberTerrain_ResetCollision()
for i=1 to UberTerrain.sectors
   UberTerrainSector(i).collisionactive=0
   `phy set collision state UberTerrainSector(i).objnuma,0
next i
endfunction

function UberTerrain_SetTerrainMaterial(material)
for i=1 to UberTerrain.sectors
   UberCore_Object(UberTerrainSector(i).objnuma).material=material
next i
endfunction

function UberTerrain_DynamicObj(x#,y#,z#,radius#)
UberZone_GetSphereZone(UberTerrain.zonegroup,x#,y#,z#,radius#)
for i=1 to UberCore_GetChecklistSize()
   UberTerrainSector(UberCore_GetChecklistValueA(i)).collisionactive=1
   phy set collision state UberTerrainSector(i).objnuma,1
next i
endfunction

function UberTerrain_makewater(height#)
UberTerrain.waterobj=UberCore_FreeObject()
make object plain UberTerrain.waterobj,UberTerrain.size,UberTerrain.size
xrotate object UberTerrain.waterobj,90
color object UberTerrain.waterobj,rgb(128,128,255)
ghost object on UberTerrain.waterobj
position object UberTerrain.waterobj,UberTerrain.size/2,height#,UberTerrain.size/2
endfunction