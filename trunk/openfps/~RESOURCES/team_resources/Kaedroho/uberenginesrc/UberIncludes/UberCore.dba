
function UberCore_GetVersion()
version$="0.04B"
endfunction version$

function UberCore_GetRelease()
release$="081208"
endfunction release$

Type UberCore
elapsedtime as float
objects as dword
images as dword
sounds as dword
fonts as dword
meshes as dword
effects as dword
Memblocks as dword
frameTime as float
startTime as integer
fade as float
fadesprite as dword
checkobj as dword
enginerunning as boolean
paused as boolean
exitgame as boolean
fadein as boolean
fadeout as boolean
loading as boolean
Terrainmade as boolean
viewrange as float
blackedout as boolean
firstseccond as boolean
firstloop as boolean
startenginetime as dword
zoom as float
fov as float
totalelapsedtime as float
mainlayer as dword
mediafile as dword
fogon as boolean
fogdistance as float
skycolour as dword
checklistsize as dword
pauselayer as dword
pausefade as float
escapekeynopress as boolean
pauseexitbutton as dword
pauseresumebutton as dword
debugmode as boolean
debuglines as dword
debugwireframetogglenopress as boolean
wireframemode as boolean
editormode as boolean
debugline as boolean
endtype

type UberCore_Debugline
txt as string
endtype

type UberCore_Checklist
str as string
val1 as integer
val2 as integer
val3 as integer
val4 as integer
fval1 as float
fval2 as float
fval3 as float
fval4 as float
endtype

type UberCore_Folders
weapons as string
images as string
missions as string
environments as string
models as string
sounds as string
actors as string
endtype

type UberCore_Preferences
hudcolourR as byte
hudcolourG as byte
hudcolourB as byte
DisplayWidth as dword
DisplayHeight as dword
DisplayDepth as dword
vsync as boolean
Shaders as boolean
Bloom as boolean
endtype

type UberCore_Object
material as dword
endtype

UberCore_StartVars:
UberCore as UberCore
UberCore_Folders as UberCore_Folders
UberCore_Preferences as UberCore_Preferences
dim UberCore_Checklist(0) as UberCore_Checklist
dim UberCore_Debugline(0) as UberCore_Debugline
dim UberCore_Object(0) as UberCore_Object
return

function UberCore_StartMain()
gosub UberCore_StartVars
gosub UberCore_StartConfig


UberCore_SetDisplayMode(UberCore_Preferences.DisplayWidth,UberCore_Preferences.DisplayHeight,UberCore_Preferences.DisplayDepth)
window to front

set default error title "UberEngine("+UberCore_GetRelease()+") Error"

disable escapekey
UberCore.fadesprite=dxs create empty sprite(screen width(),screen height())
dxs set sprite diffuse UberCore.fadesprite,0,0,0


gosub UberFile_Start


copy file "UberIncludes/RequiredMedia.zip","RequiredMedia.zip"
UberCore.mediafile=UberFile_LoadFile("RequiredMedia.zip")

gosub UberScript_Start

UberFile_LoadMedia()


gosub UberUI_Start
gosub UberSound_Start
UberCore.mainlayer=UberUI_MakeLayer()
`HT_ShowStartScreen()
UberFile_CloseFile(UberCore.mediafile)
delete file "RequiredMedia.zip"
endfunction

function UberCore_StartEngine()
copy file "UberIncludes/RequiredMedia.zip","RequiredMedia.zip"
UberCore.mediafile=UberFile_LoadFile("RequiredMedia.zip")
cls
UberUI_DrawText(UberUI_GetScreenWidth()/2,UberUI_GetScreenHeight()/2,"Starting Engine...",1,rgb(255,255,255),UberCore.mainlayer)
sync

autocam off
hide mouse

`set global object creation 1
set global collision off
UberCore.checkobj=UberCore_freeobject()
make object plain UberCore.checkobj,1,1
exclude object on UberCore.checkobj

gosub UberUI_Reset
gosub UberPhysX_Start
gosub UberFX_Start
gosub UberPlayer_Start
gosub UberWeapon_Start
gosub UberInteligence_Start
gosub UberZone_Start
gosub UberAnimation_start
gosub UberVegetation_Start
gosub UberMaterials_start

UberCore.mainlayer=UberUI_MakeLayer()

UberCore.viewrange=30000
UberCore.fadein=1
UberCore.fade=255
UberCore.enginerunning=1
UberCore.frameTime=15
UberCore.startTime=timer()
UberCore.firstloop=1
UberCore.firstseccond=1
UberCore.loading=1
UberCore.fov=75
UberCore.exitgame=0
UberCore.debugline=1
UberCore.skycolour=rgb(180,180,255)
UberCore_BlackOut(0)

if UberCore_Preferences.shaders
    if UberCore_Preferences.bloom
        UberFile_ExtractFile(UberCore.mediafile,"bloom.dbs")
        imgnum=UberCore_FreeImage()
        effnum=UberCore_FreeEffect()
        load camera effect "bloom.dbs",effnum,0
        set camera effect 0,effnum,imgnum
        texture screen imgnum
         
        draw to camera
 
        delete file "bloom.dbs"
    endif
endif
cls
UberUI_DrawText(UberUI_GetScreenWidth()/2,UberUI_GetScreenHeight()/2,"loading...",1,rgb(255,255,255),UberCore.mainlayer)
sync
UberFile_CloseFile(UberCore.mediafile)
delete file "RequiredMedia.zip"


endfunction

function UberCore_Update(elapsedtime#)

UberCore.elapsedtime=elapsedtime#/1000.0

UberCore.totalelapsedtime=UberCore.totalelapsedtime+UberCore.elapsedtime

if UberCore.enginerunning
   UberCore.loading=0

   if escapekey()
      if UberCore.escapekeynopress=0
         if UberCore.PauseLayer
            if UberCore.Paused
               UberCore.paused=0
               hide mouse
            else
               UberCore.paused=1
               show mouse
            endif
         else
            UberCore.fadeout=1
         endif
         UberCore.escapekeynopress=1
      endif
   else
      UberCore.escapekeynopress=0
   endif


   gosub UberSound_Update
   
   if UberCore.Paused
      gosub UberUI_Update
      if UberCore.pausefade<255
         fadechange#=200*UberCore.elapsedtime
         UberCore.pausefade=UberCore.pausefade+fadechange#
         UberUI_SetLayerFade(UberCore.PauseLayer,UberCore.pausefade)
         UberCore_SetScreenFade(UberCore.pausefade/2)
      else
         UberUI_SetLayerFade(UberCore.PauseLayer,255)
         UberCore_SetScreenFade(128)
      endif

      if UberCore.pauseexitbutton
         if UberUI_buttonpressed(UberCore.pauseexitbutton)
            UberCore.fadeout=1
            UberCore.paused=0
         endif
      endif

      if UberCore.pauseresumebutton
         if UberUI_buttonpressed(UberCore.pauseresumebutton)
           UberCore.paused=0
         endif
      endif
   else
   
   	gosub UberWeapon_Update
      if UberCore.fadeout=0 then gosub UberPlayer_Update
      if UberCore.Terrainmade then gosub UberTerrain_Update
      gosub UberPhysX_Update
      gosub UberInteligence_Update
   	gosub UberFX_Update
   	gosub UberAnimation_Update
   	
   	gosub UberCore_UpdateDebugmode

      if UberCore.fadeout=0 and UberCore.fadein=0
         if UberCore.pausefade > 0
            fadechange#=200*UberCore.elapsedtime
            UberCore.pausefade=UberCore.pausefade-fadechange#
            UberUI_SetLayerFade(UberCore.PauseLayer,UberCore.pausefade)
            UberCore_SetScreenFade(UberCore.pausefade/2)
          else
            UberUI_SetLayerFade(UberCore.PauseLayer,0)
            UberCore_SetScreenFade(0)
         endif
      endif

   endif
   


   	
   if UberCore.fadein
      fadechange#=200*UberCore.elapsedtime
      UberCore_SetScreenFade(UberCore.fade-fadechange#)
      if UberCore.fade<=0 then UberCore.fadein=0:UberCore_SetScreenFade(0)
   endif

   if UberCore.fadeout
      fadechange#=200*UberCore.elapsedtime
      UberCore_SetScreenFade(UberCore.fade+fadechange#)
      if UberCore.fade=>255 then UberCore.fadeout=0:UberCore.exitgame=1:UberCore_SetScreenFade(0):UberCore_BlackOut(1)
   endif
   
    if UberCore_Run()
        if UberCore_Preferences.shaders and UberCore_Preferences.bloom
            `backdrop off
            `sync camera 0
            `cls rgb(255,64,0)
        else
            sync
        endif
    endif
endif

if UberCore.fade
   dxs begin sprite render UberCore.fadesprite
      dxs draw sprite UberCore.fadesprite,0,0
   dxs end sprite render UberCore.fadesprite
endif

if UberCore.firstloop=1 then UberCore.firstloop=0:UberCore.startenginetime=timer()
if timer()=>UberCore.startenginetime+1000 then UberCore.firstseccond=0

if UberCore.zoom=0 then UberCore.zoom=1
set camera fov UberCore.fov/UberCore.zoom
endfunction

function UberCore_GetElapsedTime()
UberCore.frameTime = (UberCore.frameTime * 0.8) + ((timer() - UberCore.startTime) * 0.2)
UberCore.startTime = timer()
returnval=UberCore.frameTime
endfunction returnval

function UberCore_freeobject()
inc UberCore.objects
array insert at bottom UberCore_Object(0)
returnval=UberCore.objects
endfunction returnval

function UberCore_freeimage()
inc UberCore.images
returnval=UberCore.images
endfunction returnval

function UberCore_FreeMesh()
inc UberCore.meshes
returnval=UberCore.meshes
endfunction returnval

function UberCore_FreeMemblock()
inc UberCore.Memblocks
returnval=UberCore.Memblocks
endfunction returnval

function UberCore_FreeFont()
inc UberCore.fonts
returnval=UberCore.fonts
endfunction returnval

function UberCore_FreeEffect()
inc UberCore.effects
returnval=UberCore.effects
endfunction returnval

function UberCore_FreeSound()
inc UberCore.sounds
returnval=UberCore.sounds
endfunction returnval

function UberCore_SetScreenFade(fade#)
if fade#<0 then fade#=0
if fade#>255 then fade#=255
if fade#
   dxs set sprite alpha UberCore.fadesprite,int(fade#)
endif
UberCore.fade=fade#

endfunction

function UberCore_Run()
if UberCore.exitgame
   run=0
else
   run=1
endif
endfunction run

function UberCore_Error(message$)
exit prompt message$,"UberEngine("+UberCore_GetRelease()+") Error"
end
endfunction

UberCore_StartConfig:
lua make
lua load file "folders.txt"
lua load file "preferences.txt"

UberCore_Folders.weapons=lua string$("Folders_weapons")
UberCore_Folders.images=lua string$("Folders_images")
UberCore_Folders.missions=lua string$("Folders_missions")
UberCore_Folders.environments=lua string$("Folders_environments")
UberCore_Folders.models=lua string$("Folders_models")
UberCore_Folders.sounds=lua string$("Folders_sounds")
UberCore_Folders.actors=lua string$("Folders_actors")
UberCore_Preferences.hudcolourR=lua int("Preferences_hudcolourR")
UberCore_Preferences.hudcolourG=lua int("Preferences_hudcolourG")
UberCore_Preferences.hudcolourB=lua int("Preferences_hudcolourB")
UberCore_Preferences.DisplayWidth=lua int("Preferences_DisplayWidth")
UberCore_Preferences.DisplayHeight=lua int("Preferences_DisplayHeight")
UberCore_Preferences.DisplayDepth=lua int("Preferences_DisplayDepth")
UberCore_Preferences.vsync=lua int("Preferences_vsync")
UberCore_Preferences.shaders=0`lua int("Preferences_shaders")
UberCore_Preferences.bloom=0`lua int("Preferences_bloom")
lua terminate
return

function UberCore_ExitGame()
UberCore.exitgame=1
endfunction

function UberCore_BlackOut(flag)
if flag
   set camera range 0,0
   color backdrop 0
   UberCore.blackedout=1

   if UberCore.exitgame
      dxs set sprite alpha UberCore.fadesprite,255

      dxs begin sprite render UberCore.fadesprite
         dxs draw sprite UberCore.fadesprite,0,0
      dxs end sprite render UberCore.fadesprite
      sync

      dxs begin sprite render UberCore.fadesprite
          dxs draw sprite UberCore.fadesprite,0,0
      dxs end sprite render UberCore.fadesprite

      UberUI_DrawText(UberUI_GetScreenWidth()/2,UberUI_GetScreenHeight()/2,"Exiting Game",1,rgb(255,255,255),UberCore.mainlayer)
      sync
      UberCore_EndEngine()
   endif

else
   set camera range 1,UberCore.Viewrange
   color backdrop UberCore.skycolour
   UberCore.blackedout=0
endif
endfunction

function UberCore_EndEngine()

if UberCore.enginerunning

   gosub UberFX_End
   gosub UberWeapons_End
   gosub UberPlayer_End
   if UberCore.Terrainmade then gosub UberTerrain_End
   gosub UberPhysX_End
   gosub UberScript_End
   gosub UberInteligence_End
   gosub UberZone_End
   gosub UberVegetation_End
   gosub UberAnimation_End
   gosub UberMaterials_end
   
   UberCore.mainlayer=UberUI_MakeLayer()
   UberCore.enginerunning=0
   UberCore.Terrainmade=0
	gosub UberUI_End
   for i=1 to UberCore.objects
      if object exist(i) then delete object i
   next i
   UberCore.objects=0

   for i=1 to UberCore.images
      if image exist(i) then delete image i
   next i
   UberCore.images=0
   
   for i=1 to UberCore.sounds
      if sound exist(i) then delete sound i
   next i
   UberCore.sounds=0
   
   for i=1 to UberCore.meshes
      if mesh exist(i) then delete mesh i
   next i
   UberCore.meshes=0
   
   for i=1 to UberCore.Memblocks
      if Memblock exist(i) then delete Memblock i
   next i
   UberCore.Memblocks=0
   
	copy file "UberIncludes/RequiredMedia.zip","RequiredMedia.zip"
	UberCore.mediafile=UberFile_LoadFile("RequiredMedia.zip")
	
	gosub UberUI_Start
	
	UberFile_CloseFile(UberCore.mediafile)
	delete file "RequiredMedia.zip"
   `flush video memory
endif
endfunction

function UberCore_SetFOG(distance#)
fog on
fog distance distance#,UberCore.Viewrange*0.9
fog color UberCore.skycolour
UberCore.fogon=1
UberCore.Fogdistance=distance#
endfunction

function UberCore_SetViewrange(viewrange#)
UberCore.viewrange=viewrange#
set camera range 1,UberCore.Viewrange
if UberCore.fogon then fog distance UberCore.Fogdistance,UberCore.Viewrange*0.9
endfunction


function UberCore_ClearChecklist()
undim UberCore_Checklist(0)
dim UberCore_Checklist(0) as UberCore_Checklist
UberCore.checklistsize=0
endfunction

function UberCore_AddToChecklist(string$,val1,val2,val3,val4,fval1#,fval2#,fval3#,fval4#)
array insert at bottom UberCore_Checklist(0)
inc UberCore.checklistsize
n=UberCore.checklistsize
UberCore_Checklist(n).str=string$
UberCore_Checklist(n).val1=val1
UberCore_Checklist(n).val2=val2
UberCore_Checklist(n).val3=val3
UberCore_Checklist(n).val4=val4
UberCore_Checklist(n).fval1=fval1#
UberCore_Checklist(n).fval2=fval2#
UberCore_Checklist(n).fval3=fval3#
UberCore_Checklist(n).fval4=fval4#
endfunction

function UberCore_GetChecklistSize()
size=UberCore.checklistsize
endfunction size

function UberCore_GetChecklistString(n)
string$=UberCore_Checklist(n).str
endfunction string$

function UberCore_GetChecklistValueA(n)
returnval=UberCore_Checklist(n).val1
endfunction returnval

function UberCore_GetChecklistValueB(n)
returnval=UberCore_Checklist(n).val2
endfunction returnval

function UberCore_GetChecklistValueC(n)
returnval=UberCore_Checklist(n).val3
endfunction returnval

function UberCore_GetChecklistValueD(n)
returnval=UberCore_Checklist(n).val4
endfunction returnval


function UberCore_GetChecklistFValueA(n)
returnval#=UberCore_Checklist(n).fval1
endfunction returnval#

function UberCore_GetChecklistFValueB(n)
returnval#=UberCore_Checklist(n).fval2
endfunction returnval#

function UberCore_GetChecklistFValueC(n)
returnval#=UberCore_Checklist(n).fval3
endfunction returnval#

function UberCore_GetChecklistFValueD(n)
returnval#=UberCore_Checklist(n).fval4
endfunction returnval#


function UberCore_SetDisplayMode(width,height,depth)
if check display mode(width,height,depth)
   set display mode width,height,depth,UberCore_Preferences.vsync
   UberCore_Recover()
endif
endfunction

function UberCore_Recover()
//d3d_init
dxs initialize
if UberCore.Enginerunning
   UberUI_DrawText(UberUI_GetScreenWidth()/2,UberUI_GetScreenHeight()/2+20,"Recovering...",1,rgb(255,255,255),UberCore.mainlayer)
endif
endfunction

function UberCore_SetPauseLayer(layer)
UberCore.pauselayer=layer
endfunction

function UberCore_SetPauseExitbutton(button)
UberCore.pauseexitbutton=button
endfunction

function UberCore_SetPauseResumebutton(button)
UberCore.pauseresumebutton=button
endfunction

function UberCore_SetFOV(fov#)
UberCore.fov=fov#
endfunction

function UberCore_EnableDebug()
global UBERCORE_DEBUGENABLED as boolean
UBERCORE_DEBUGENABLED=1
endfunction

UberCore_MakeUberButton:

return

UberCore_UpdateUberButton:

return

UberCore_UpdateDebugmode:
if UberCore.debugmode
	if keystate(59)
		if UberCore.debugwireframetogglenopress=0
			gosub UberCore_ToggleWireframeMode
			UberCore.debugwireframetogglenopress=1
		endif
	else
		UberCore.debugwireframetogglenopress=0
	endif
endif
return

UberCore_ToggleWireframeMode:
if UberCore.wireframemode
	for i=1 to UberCore.objects
		if object exist(i) then set object wireframe i,1
	next i
	UberCore.wireframemode=0
else
	for i=1 to UberCore.objects
		if object exist(i) then set object wireframe i,0
	next i
	UberCore.wireframemode=1
endif
return

function UberCore_EnableEditormode()
ubercore.editormode=1
endfunction

function UberCore_DisableEditormode()
ubercore.editormode=0
endfunction