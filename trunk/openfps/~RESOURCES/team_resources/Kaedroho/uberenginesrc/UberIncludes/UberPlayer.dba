type UberPlayer
camnum as dword
mode as boolean
objnum as dword
collobjnum as dword
eyeheight as float
shoulderheight as float
fullheight as float
eyez as float
width as float
gun as dword
direction as float
pitch as float
hudsprite as dword
hudcolour as dword
aimx as float
aimy as float
crosshairdist as float
zoom as float
xacc as float
yacc as float
zacc as float
xvel as float
yvel as float
zvel as float
duck as float
physxmaterial as dword
onfloor as boolean
hudlayer as dword
mmovx as float
mmovy as float
running as boolean
oldrecoil as float
runtrans as float
gunstate as byte `0 = select 1 = idle 2 = reload 3 = cock 4 = put away
gunswitch as dword
maxmessages as dword
endtype

type UberPlayer_Message
txt as string
starttime as dword
colour as dword
inuse as boolean
endtype

UberPlayer_start:
UberPlayer as UberPlayer
UberPlayer.maxmessages=5
dim UberPlayer_Message(UberPlayer.maxmessages) as UberPlayer_Message
UberPlayer.eyez=10
UberPlayer.fullheight=200
UberPlayer.shoulderheight=185
UberPlayer.eyeheight=185
UberPlayer.eyez=10
UberPlayer.width=100
UberPlayer.physxmaterial=UberPhysX_MakeMaterial(0,0,0,"PlayerMaterial")
UberPlayer.hudcolour=rgb(UberCore_Preferences.hudcolourR,UberCore_Preferences.hudcolourG,UberCore_Preferences.hudcolourB)
UberPlayer.objnum=UberCore_FreeObject()
UberPlayer.hudlayer=UberUI_MakeLayer()
make object sphere UberPlayer.objnum,10
exclude object on UberPlayer.objnum
gosub UberPlayer_StartHUD

UberPlayer.collobjnum=UberCore_FreeObject()
make object box UberPlayer.collobjnum,UberPlayer.width,UberPlayer.fullheight-UberPlayer.width,UberPlayer.width
exclude object on UberPlayer.collobjnum
phy make rigid body dynamic capsule UberPlayer.collobjnum,UberPlayer.physxmaterial
UberPlayer_PositionPlayer(0,0,0)
return

UberPlayer_Update:
cam=UberPlayer.camnum
if UberPlayer.gun
	if UberPlayer.gunstate=1
		zoom=1
	else
		zoom=0
	endif
else
	zoom=1
endif

if (mouseclick()=2 or mouseclick()=3) and zoom
   Uberplayer.zoom=Uberplayer.zoom+10*UberCore.elapsedtime
   if Uberplayer.zoom>1 then Uberplayer.zoom=1
else
   Uberplayer.zoom=Uberplayer.zoom-10*UberCore.elapsedtime
   if Uberplayer.zoom<0 then Uberplayer.zoom=0
endif

if controlkey()
   UberPlayer.duck=UberPlayer.duck+5*UberCore.elapsedtime
   if UberPlayer.duck>1 then UberPlayer.duck=1
else
   UberPlayer.duck=UberPlayer.duck-5*UberCore.elapsedtime
   if UberPlayer.duck<0 then UberPlayer.duck=0
endif

UberPlayer.mmovx=UberPlayer.mmovx*0.5+(mousemovex()*0.25)/UberCore.zoom
UberPlayer.mmovy=UberPlayer.mmovy*0.5+(mousemovey()*0.25)/UberCore.zoom

UberPlayer.pitch=UberPlayer.pitch+UberPlayer.mmovy`curveangle(cx#,UberPlayer.pitch,2)
UberPlayer.direction=UberPlayer.direction+UberPlayer.mmovx`curveangle(cy#,UberPlayer.direction,2)
if UberPlayer.pitch>70 then UberPlayer.pitch=70
if UberPlayer.pitch<-70  then UberPlayer.pitch=-70

if UberPlayer.mode
   cr#=0
   cf#=0
   oldx#=camera position x(cam)
   oldy#=camera position y(cam)
   oldz#=camera position z(cam)
   if KEYSTATE(32)=1 then cr#=-500*(shiftkey()+1)
   if KEYSTATE(30)=1 then cr#=500*(shiftkey()+1)
   if KEYSTATE(17)=1 then cf#=500*(shiftkey()+1)
   if KEYSTATE(31)=1 then cf#=-500*(shiftkey()+1)
   ncr#=curvevalue(cr#,ncr#,(50.0/UberCore.elapsedtime)/200.0)
   ncf#=curvevalue(cf#,ncf#,(50.0/UberCore.elapsedtime)/200.0)

   move camera cam,ncf#*UberCore.elapsedtime-UberPlayer.eyez
   rotate camera cam,0,wrapvalue(UberPlayer.direction-90),0
   move camera cam,ncr#*UberCore.elapsedtime
   rotate camera cam,UberPlayer.pitch,UberPlayer.direction,0
   move camera cam,UberPlayer.eyez

   if sc_spherecast(0,oldx#,oldy#,oldz#,camera position x(cam),camera position y(cam),camera position z(cam),50,0)
      position camera cam,sc_getcollisionslidex(),sc_getcollisionslidey(),sc_getcollisionslidez()
   endif


else

   UberPlayer.onfloor=sc_raycast(0,object position x(UberPlayer.objnum),object position y(UberPlayer.objnum),object position z(UberPlayer.objnum),object position x(UberPlayer.objnum),object position y(UberPlayer.objnum)-10,object position z(UberPlayer.objnum),0)
   move=0
   strafe=0
   speed#=0
   if KEYSTATE(32)=1 then strafe=-1:speed#=350/UberCore.Elapsedtime
   if KEYSTATE(30)=1 then strafe=1:speed#=350/UberCore.Elapsedtime
   if KEYSTATE(17)=1 then move=1:speed#=350/UberCore.Elapsedtime
   if KEYSTATE(31)=1 then move=-1:speed#=350/UberCore.Elapsedtime

   if shiftkey() and UberPlayer.gunstate=1 then speed#=speed#*2

   movedir#=UberPlayer.direction+atanfull(move,strafe)-90
   goalxvel#=sin(movedir#)*speed#*UberCore.elapsedtime
   goalzvel#=cos(movedir#)*speed#*UberCore.elapsedtime

	UberPlayer.running=shiftkey() and move and UberPlayer.gunstate=1
   currxvel#=phy get rigid body linear velocity x(UberPlayer.collobjnum)
   curryvel#=phy get rigid body linear velocity y(UberPlayer.collobjnum)
   currzvel#=phy get rigid body linear velocity z(UberPlayer.collobjnum)

   UberPlayer.xacc=currxvel#-UberPlayer.xvel
   UberPlayer.yacc=curryvel#-UberPlayer.yvel
   UberPlayer.zacc=currzvel#-UberPlayer.zvel

   UberPlayer.xvel=currxvel#
   UberPlayer.yvel=curryvel#
   UberPlayer.zvel=currzvel#

   newxvel#=currxvel#`+(goalxvel#-currxvel#)/3`*UberCore.elapsedtime
   newyvel#=curryvel#
   newzvel#=currzvel#`+(goalzvel#-currzvel#)/3`*UberCore.elapsedtime

   if UberPlayer.onfloor and move=0 and strafe=0 and currxvel#<1 and curryvel#<1 and currzvel#<1
      phy sleep rigid body UberPlayer.collobjnum
   else
      phy set rigid body rotation UberPlayer.collobjnum,0,0,0
      phy set rigid body linear velocity UberPlayer.collobjnum,newxvel#,newyvel#,newzvel#


      AccelX# = 5*(goalxvel#-currxvel#)*uberCore.Elapsedtime
      AccelZ# = 5*(goalzvel#-currzvel#)*uberCore.Elapsedtime
      `if AccelX# > 200.0 then AccelX# = 200.0
      `if AccelX# < -200.0 then AccelX# = -200.0
      `if AccelZ# > 200.0 then AccelZ# = 200.0
      `if AccelZ# < -200.0 then AccelZ# = -200.0

      phy add rigid body force UberPlayer.collobjnum,AccelX#,0,AccelZ#,2
   endif
   position object UberPlayer.objnum,object position x(UberPlayer.collobjnum),object position y(UberPlayer.collobjnum)-UberPlayer.fullheight/2,object position z(UberPlayer.collobjnum)

   rotate object UberPlayer.objnum,0,UberPlayer.direction,0

   position camera cam,object position x(UberPlayer.objnum),object position y(UberPlayer.objnum)+UberPlayer.eyeheight/(UberPlayer.duck+1),object position z(UberPlayer.objnum)
   rotate camera cam,UberPlayer.pitch,UberPlayer.direction,0
   move camera cam,UberPlayer.eyez
   
endif

if UberPlayer.gun

	guntype=UberWeapon_Gun(UberPlayer.gun).tipe
	playerzoom#=UberPlayer.zoom-UberPlayer.runtrans
	if playerzoom#=<0 then playerzoom#=0
	if UberPlayer.gunstate<>1
		offsetright#=UberWeapon_GunType(guntype).hudoffsetx+(UberWeapon_GunType(guntype).aimedhudoffsetx-UberWeapon_GunType(guntype).hudoffsetx)*playerzoom#
		offsetup#=UberWeapon_GunType(guntype).hudoffsety+(UberWeapon_GunType(guntype).aimedhudoffsety-UberWeapon_GunType(guntype).hudoffsety)*playerzoom#
		offsetforward#=UberWeapon_GunType(guntype).hudoffsetz+(UberWeapon_GunType(guntype).aimedhudoffsetz-UberWeapon_GunType(guntype).hudoffsetz)*playerzoom#
		UberWeapon_SetGunPosition(UberPlayer.gun,camera position x(cam),camera position y(cam),camera position z(cam))
		UberWeapon_SetGunRotation(UberPlayer.gun,-camera angle x(cam),camera angle y(cam)+180,camera angle z(cam))
		UberWeapon_OffsetGun(UberPlayer.gun,offsetright#,offsetup#,offsetforward#)
	endif
	
	if UberPlayer.gunstate=0
		if int(UberAnimation_GetObjectFrame(UberWeapon_GunType(guntype).hudobjnumanim))=UberWeapon_GunType(guntype).anim_selectend
			UberPlayer.gunstate=1
			UberAnimation_SetObjectFrame(UberWeapon_GunType(guntype).hudobjnumanim,UberWeapon_GunType(guntype).anim_idle)
		endif
	endif
	if UberPlayer.gunstate=1
	
        reloadneeded=UberWeapon_Gun(UberPlayer.gun).ammo<UberWeapon_GunType(guntype).magsize and UberWeapon_Gun(UberPlayer.gun).spareammo>0
        
		if UberPlayer.runtrans=0 and keystate(19) and reloadneeded and int(UberAnimation_GetObjectFrame(UberWeapon_GunType(guntype).hudobjnumanim))=UberWeapon_GunType(guntype).anim_idle
			UberPlayer.gunstate=2
			`play object UberWeapon_GunType(guntype).hudobjnum,UberWeapon_GunType(guntype).anim_reloadstart,UberWeapon_GunType(guntype).anim_reloadend
			`UberAnimation_PlayObject(UberWeapon_GunType(guntype).hudobjnum,UberWeapon_GunType(guntype).anim_reloadstart,UberWeapon_GunType(guntype).anim_reloadend)
		      UberAnimation_SetObjectAnimation(UberWeapon_GunType(guntype).hudobjnumanim,UberWeapon_GunType(guntype).anim_reloadstart,UberWeapon_GunType(guntype).anim_reloadend,0)
        endif
		
		offsetright#=UberWeapon_GunType(guntype).hudoffsetx+(UberWeapon_GunType(guntype).aimedhudoffsetx-UberWeapon_GunType(guntype).hudoffsetx)*playerzoom#
		offsetup#=UberWeapon_GunType(guntype).hudoffsety+(UberWeapon_GunType(guntype).aimedhudoffsety-UberWeapon_GunType(guntype).hudoffsety)*playerzoom#
		offsetforward#=UberWeapon_GunType(guntype).hudoffsetz+(UberWeapon_GunType(guntype).aimedhudoffsetz-UberWeapon_GunType(guntype).hudoffsetz)*playerzoom#
		if SE_GunType(UberWeapon_GunType(guntype).SE_GunType).muzdir
			recoil#=-UberWeapon_Gun(UberPlayer.gun).recoil
		else
			recoil#=UberWeapon_Gun(UberPlayer.gun).recoil
		endif
		recoilchange#=recoil#-Uberplayer.oldrecoil
		
		`if recoilchange#>0 then recoilchange#=0
		
		UberPlayer.pitch=UberPlayer.pitch+recoilchange#
		Uberplayer.oldrecoil=recoil#

		UberWeapon_SetGunPosition(UberPlayer.gun,camera position x(cam),camera position y(cam),camera position z(cam))
		UberWeapon_SetGunRotation(UberPlayer.gun,-camera angle x(cam),camera angle y(cam)+180,camera angle z(cam))
		if UberPlayer.running
			UberPlayer.runtrans=UberPlayer.runtrans+UberCore.elapsedtime*10
			if UberPlayer.runtrans>1 then UberPlayer.runtrans=1
		else
			UberPlayer.runtrans=UberPlayer.runtrans-UberCore.elapsedtime*10
			if UberPlayer.runtrans<0 then UberPlayer.runtrans=0
		endif
		turn object left SE_Gun(UberWeapon_Gun(UberPlayer.gun).SEGun).objnum,30*UberPlayer.runtrans
		pitch object up SE_Gun(UberWeapon_Gun(UberPlayer.gun).SEGun).objnum,20*UberPlayer.runtrans
		UberWeapon_OffsetGun(UberPlayer.gun,offsetright#,offsetup#,offsetforward#-recoil#)
		pitch object down SE_Gun(UberWeapon_Gun(UberPlayer.gun).SEGun).objnum,-20*UberPlayer.runtrans
		if UberPlayer.runtrans=0
			if mouseclick()=1 or mouseclick()=3 then UberWeapon_FireGun(UberPlayer.gun)
		endif
	endif
	
	if UberPlayer.gunstate=2
		if int(UberAnimation_GetObjectFrame(UberWeapon_GunType(guntype).hudobjnumanim))=UberWeapon_GunType(guntype).anim_reloadend
			UberPlayer.gunstate=3
			UberWeapon_ReloadGun(UberPlayer.gun)
			`play object UberWeapon_GunType(guntype).hudobjnum,UberWeapon_GunType(guntype).anim_cockstart,UberWeapon_GunType(guntype).anim_cockend
			`UberAnimation_PlayObject(UberWeapon_GunType(guntype).hudobjnum,UberWeapon_GunType(guntype).anim_cockstart,UberWeapon_GunType(guntype).anim_cockend)
            UberAnimation_SetObjectAnimation(UberWeapon_GunType(guntype).hudobjnumanim,UberWeapon_GunType(guntype).anim_cockstart,UberWeapon_GunType(guntype).anim_cockend,0)
        endif

	endif
	
	if UberPlayer.gunstate=3
		if int(UberAnimation_GetObjectFrame(UberWeapon_GunType(guntype).hudobjnumanim))=UberWeapon_GunType(guntype).anim_cockend
			UberPlayer.gunstate=1
			UberAnimation_SetObjectFrame(UberWeapon_GunType(guntype).hudobjnumanim,UberWeapon_GunType(guntype).anim_idle)
		endif
	endif
	
	if UberPlayer.gunstate=4
		if int(UberAnimation_GetObjectFrame(UberWeapon_GunType(guntype).hudobjnumanim))=UberWeapon_GunType(guntype).anim_selectend
			exclude object on UberWeapon_GunType(guntype).hudobjnum
			UberWeapon_Gun(UberPlayer.gun).position=0
			UberPlayer.gun=0
			if UberPlayer.gunswitch then UberPlayer_SetGun(UberPlayer.gunswitch)
		endif
	endif
	
	UberCore.zoom=1+playerzoom#*UberWeapon_GunType(guntype).zoom
	mainobj=SE_Gun(UberWeapon_Gun(UberPlayer.gun).SEGun).objnum
	position object UberWeapon_GunType(guntype).hudobjnum,object position x(mainobj),object position y(mainobj),object position z(mainobj)
	rotate object UberWeapon_GunType(guntype).hudobjnum,object angle x(mainobj),object angle y(mainobj),object angle z(mainobj)
	move object UberWeapon_GunType(guntype).hudobjnum,-UberWeapon_GunType(guntype).hudentoffsetz
	move object right UberWeapon_GunType(guntype).hudobjnum,-UberWeapon_GunType(guntype).hudentoffsetx
	move object up UberWeapon_GunType(guntype).hudobjnum,UberWeapon_GunType(guntype).hudentoffsety
else
	UberCore.zoom=1
endif

gosub UberPlayer_UpdateHUD

return

UberPlayer_End:
dxs delete sprite UberPlayer.hudsprite
return

function UberPlayer_SetPlayerMode(mode)
UberPlayer.mode=mode
endfunction

function UberPlayer_SetPlayerCamera(camnum)
UberPlayer.camnum=camnum
endfunction

function UberPlayer_PositionPlayer(x#,y#,z#)
select UberPlayer.mode
   case 0
      phy set rigid body position UberPlayer.collobjnum,x#,y#+UberPlayer.fullheight/2,z#
   endcase
   case 1
      position camera UberPlayer.camnum,x#,y#,z#
   endcase
endselect
endfunction

function UberPlayer_RotatePlayer(direction#)

endfunction

function UberPlayer_GetPlayerX()
select UberPlayer.mode
   case 0
      xpos#=object position x(UberPlayer.collobjnum)
   endcase
   case 1
      xpos#=camera position x(UberPlayer.camnum)
   endcase
endselect
endfunction xpos#

function UberPlayer_GetPlayerY()
select UberPlayer.mode
   case 0
      ypos#=object position y(UberPlayer.collobjnum)-UberPlayer.fullheight/2
   endcase
   case 1
      ypos#=camera position y(UberPlayer.camnum)
   endcase
endselect
endfunction ypos#

function UberPlayer_GetPlayerZ()
select UberPlayer.mode
   case 0
      zpos#=object position z(UberPlayer.collobjnum)
   endcase
   case 1
      zpos#=camera position z(UberPlayer.camnum)
   endcase
endselect
endfunction zpos#

function UberPlayer_GetPlayerDirection()

endfunction direction#

function UberPlayer_SetGun(gun)
if UberPlayer.gun
	guntype=UberWeapon_Gun(UberPlayer.gun).tipe
	UberAnimation_SetObjectAnimation(UberWeapon_GunType(guntype).hudobjnumanim,UberWeapon_GunType(guntype).anim_putawaystart,UberWeapon_GunType(guntype).anim_putawayend,0)
	UberPlayer.gunstate=4
	UberPlayer.gunswitch=gun
	SE_SetGunVisible(UberWeapon_Gun(UberPlayer.gun).SEGun,1)
	UberWeapon_Gun(UberPlayer.gun).position=0
else
	UberPlayer.gun=gun
	guntype=UberWeapon_Gun(UberPlayer.gun).tipe
	exclude object off UberWeapon_GunType(guntype).hudobjnum
	
	UberAnimation_SetObjectAnimation(UberWeapon_GunType(guntype).hudobjnumanim,UberWeapon_GunType(guntype).anim_selectstart,UberWeapon_GunType(guntype).anim_selectend,0)
	UberPlayer.gunstate=0
	UberPlayer.gunswitch=0
	UberWeapon_Gun(UberPlayer.gun).position=2
	SE_SetGunVisible(UberWeapon_Gun(UberPlayer.gun).SEGun,0)
endif
endfunction

function UberPlayer_GetPlayerCamera()
camnum=UberPlayer.camnum
endfunction camnum


UberPlayer_StartHUD:
UberPlayer.hudsprite=dxs create empty sprite(screen width(),screen height())

alpha=128

for x=0 to screen width()-1
for y=0 to screen height()-1
   dxs set sprite pixel UberPlayer.hudsprite,x,y,0,0,0,0
next y
next x

linealength=screen height()/2-screen height()/16
for i=1 to linealength
   dxs set sprite pixel UberPlayer.hudsprite,screen width()/2,i-1,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)
next i

for i=1 to linealength
   dxs set sprite pixel UberPlayer.hudsprite,screen width()/2,screen height()/2+(screen height()-1)/16+i-1,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)
next i

lineblength=screen width()/2-screen width()/16
for i=1 to lineblength
   dxs set sprite pixel UberPlayer.hudsprite,i-1,screen height()/2,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)
next i

for i=1 to lineblength
   dxs set sprite pixel UberPlayer.hudsprite,screen width()/2+(screen width()-1)/16+i-1,screen height()/2,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)
next i


lineclength=(screen width()-1)/16

for i=1 to lineclength
`Top Left
   dxs set sprite pixel UberPlayer.hudsprite,lineclength/4+i,lineclength/4,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)
   dxs set sprite pixel UberPlayer.hudsprite,lineclength/4,lineclength/4+i,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)

`Top Right
   dxs set sprite pixel UberPlayer.hudsprite,screen width()-lineclength/4-i,lineclength/4,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)
   dxs set sprite pixel UberPlayer.hudsprite,screen width()-lineclength/4,lineclength/4+i,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)

`Bottom Left
   dxs set sprite pixel UberPlayer.hudsprite,lineclength/4+i,screen height()-lineclength/4,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)
   dxs set sprite pixel UberPlayer.hudsprite,lineclength/4,screen height()-lineclength/4-i,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)

`Bottom Right
   dxs set sprite pixel UberPlayer.hudsprite,screen width()-lineclength/4-i,screen height()-lineclength/4,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)
   dxs set sprite pixel UberPlayer.hudsprite,screen width()-lineclength/4,screen height()-lineclength/4-i,alpha,rgbr(UberPlayer.hudcolour),rgbg(UberPlayer.hudcolour),rgbb(UberPlayer.hudcolour)

next i

return

UberPlayer_UpdateHUD:
if UberCore.blackedout=0
   dxs begin sprite render UberPlayer.hudsprite
      dxs draw sprite UberPlayer.hudsprite,0,0
   dxs end sprite render UberPlayer.hudsprite

if UberCore.debugline
   UberUI_DrawText(UberUI_GetScreenWidth()/2,UberUI_GetScreenHeight()-20,"FPS: "+str$(screen fps())+"  Rigid Bodies: 0  Particles: "+str$(UberFX.particles)+" Polys: "+str$(statistic(1)),1,set alpha(rgb(255,255,255),128),UberPlayer.hudlayer)
   UberUI_DrawText(UberUI_GetScreenWidth(),UberUI_GetScreenHeight()-20,str$(screen width())+"x"+str$(screen height())+"x"+str$(screen depth()),2,set alpha(rgb(255,255,255),128),UberPlayer.hudlayer)
endif

endif
for i=1 to UberPlayer.maxmessages
	if UberPlayer_Message(i).inuse
		age=timer()-UberPlayer_Message(i).starttime
		if age>5000 then UberPlayer_Message(i).inuse=0
		if age>4000
			alpha=255-int((age-4000)/1000.0*255)
			if alpha<0 then alpha=0
			UberUI_DrawTextNoLayer(10,UberUI_GetScreenHeight()-20*i-UberCore.debugline*20,UberPlayer_Message(i).txt,0,set alpha(UberPlayer_Message(i).colour,alpha))
		else
			UberUI_DrawTextNoLayer(10,UberUI_GetScreenHeight()-20*i-UberCore.debugline*20,UberPlayer_Message(i).txt,0,UberPlayer_Message(i).colour)
		endif
		
	endif
next i

return

function UberPlayer_Gun()
gun=UberPlayer.gun
endfunction gun


function UberPlayer_DisplayMessage(text$,colour)
for i=0 to UberPlayer.maxmessages-1
	msgnum=UberPlayer.maxmessages-i
	if UberPlayer_Message(msgnum-1).inuse
		UberPlayer_Message(msgnum).starttime=UberPlayer_Message(msgnum-1).starttime
		UberPlayer_Message(msgnum).txt=UberPlayer_Message(msgnum-1).txt
		UberPlayer_Message(msgnum).colour=UberPlayer_Message(msgnum-1).colour
		UberPlayer_Message(msgnum).inuse=1
	endif
next i
UberPlayer_Message(1).starttime=timer()
UberPlayer_Message(1).txt=text$
UberPlayer_Message(1).colour=colour
UberPlayer_Message(1).inuse=1
endfunction