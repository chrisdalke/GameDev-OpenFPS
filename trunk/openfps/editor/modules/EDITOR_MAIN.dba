////////////////////////////////////////
//
// EDITOR MAIN PROGRAM
// 
// Author: Chris Dalke
//
//////////////////////////////////////////////////////

`----- Changelog:

`----- To-Do:

`----- Purpose:

`----- USES: none

`----- Function List:

`=========Constants=========`
`===========================`

`==========Globals==========`
global level_new  as boolean
Global t_Heightmap
Global t_Texture
Global t_Detail
global t_Object
global t_ObjectDB

global camera_move
`===========================`

`===========Types===========`

`===========================`
//--Get Desktop parameters
	Getsystemmetrics()
//--Start the editor
	EditorStart()
//--Create the sky
	VS_CreateSky()
	
//--Create the terrain
	InitTerrain(0)	
	
//--Create menu
	createUI()
	createMainMenu()

//--other
	maximize window
	set camera range 1,1000000000
	position camera 160,71,-50:rotate camera 24,0,0:cx#=24.0:ncx#=24.0
	level_new=1
	
	make object plain 501,2,2
	load image "data\select.png",501
	texture object 501,501
	set object light 501,0
	`disable object zdepth 501
	set object transparency 501,1
	set object filter 501,0
	set object cull 501,0
	hide object 501
	
	// load entity media
	global ent_offset as integer
	ent_offset=1000
	load image "data\entities\char.jpg",ent_offset+18


//--main loop begins
do 
	//--Updates the sky
		VS_UpdateSky()
	
	//--Get bluegui events
		getEvent
		updateGui()

		if level_new=1:
		
			if eventSource()=startnew and eventType()=MOUSE_CLICK
				level_new=0
				setGadgetVisible StartWindow,0
				`message "OpenEd","Startup Menu: New Project"
			endif

			if eventSource()=startopen and eventType()=MOUSE_CLICK
				setGadgetVisible StartWindow,0
				setGadgetVisible OpenProject,1
			endif

			if eventSource()=startexit and eventType()=MOUSE_CLICK
				end
			endif
			cls 0
			goto skip1
		endif
	
		if level_new<1 then UpdateTerrain()
	
		mclick=KEYSTATE(18)
		if mclick=1:
			if camera_move=0 and clicking=0 then camera_move=1:clicking=1:goto skip
			if camera_move=1 and clicking=0 then camera_move=0:clicking=1:goto skip
			skip:
		else:
			if clicking=1 then clicking=0
		endif
	
	
		skip1:
	
		Width#=Get Window Client Width()
		Height#=Get Window Client Height()
	
		if camera_move=0 then setgadgettext cameratext,"3d Top View (FPS: "+str$(screen fps())+") - press E to enter camera mode"
		if camera_move=1 then setgadgettext cameratext,"3d Camera Mode (FPS: "+str$(screen fps())+") - WASD or arrow keys to move, mouse to look. E to exit Camera Mode."
		resizegadget cameratext,(Width#),15
	
		if camera_move=0:
			show mouse
			null=mousemovex()
			null=mousemovey()
		endif
		if camera_move=1:
			hide mouse
			position mouse screen width()/2,screen height()/2
			cr#=0:cf#=0
    	    if rightkey()=1 or KEYSTATE(32)=1 then cr#=-0.3
    	    if leftkey()=1 or KEYSTATE(30)=1 then cr#=0.3
    	    if upkey()=1 or KEYSTATE(17)=1 then cf#=0.3
    	    if downkey()=1 or KEYSTATE(31)=1 then cf#=-0.3
    	    ncr#=curvevalue(cr#,ncr#,5)
    	    ncf#=curvevalue(cf#,ncf#,5)
    	    cx#=cx#+mousemovey()*0.2
    	    cy#=cy#+mousemovex()*0.2
    	    if cx#>80 then cx#=80
    	    if cx#<-80  then cx#=-80
    	    ncx#=curveangle(cx#,ncx#,2)
    	    ncy#=curveangle(cy#,ncy#,2)
    	    move camera ncf#
    	    rotate camera 0,wrapvalue(ncy#-90),0
    	    move camera ncr#
    	    rotate camera 0,wrapvalue(ncy#+90),0
    	    rotate camera ncx#,ncy#,0
		endif

		rem get our simple collision vector
		oldx#=camera position x()
		oldy#=camera position y()
		oldz#=camera position z()
		move camera 200
		x#=camera position x()
		y#=camera position y()
		z#=camera position z()
		move camera -200
		collide=SC_rayCast(0,oldx#,oldy#,oldz#,x#,y#,z#,0)
		if collide>0
			rem get the collision point			
			newx#=SC_getStaticCollisionX()
			newy#=SC_getStaticCollisionY()
			newz#=SC_getStaticCollisionZ()
			rem get collision normal
			normx#=SC_getCollisionNormalX()
			normy#=SC_getCollisionNormalY()
			normz#=SC_getCollisionNormalZ()
			rem position and point a marker in the right direction
			position object 501,newx#+normx#/100.0,newy#+normy#/100.0,newz#+normz#/100.0
			point object 501,newx#+normx#,newy#+normy#,newz#+normz#
			show object 501
		endif
	//---syncronize
	sync
loop

`=========Functions=========`
