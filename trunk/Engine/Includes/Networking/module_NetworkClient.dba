//////////////////////////////////////////////////////////////
//  Game Engine Standard Modules - NETWORK MODULE
//  Concept and code by thenerd, Summer 2012!
//////////////////////////////////////////////////////////////
// 
// Module for CLIENT system
//
//////////////////////////////////////////////////////////////
//  CONSTANTS
//////////////////////////////////////////////////////////////

#constant WAITING_TO_JOIN 1
#constant JOINING 2
#constant IDLE 3

//////////////////////////////////////////////////////////////
//  UDTS
//////////////////////////////////////////////////////////////

type t_NetworkClient
    name as string
    ip as string
    state as integer
    mapfile as string
    serverip as string
    serverport as integer
endtype

//////////////////////////////////////////////////////////////
//  MAIN FUNCTIONS
//////////////////////////////////////////////////////////////

function Client_Start(serverip as string,serverport as integer):
    UI_FadeManager.state=UI_FADEIN
    UI_FadeManager.target=M_ENGINE_LOADING
    global Client as t_NetworkClient
    Client.name = "player"
    Client.ip = Game.ip
    Client.state = WAITING_TO_JOIN
    Client.serverip = serverip
    Client.serverport = serverport
    Network.GameClient = 1
    ui_Writelog(UI_Blue,"Client: joining "+serverip)
ENDFUNCTION

function Client_Update():
    select Client.state
        case WAITING_TO_JOIN
            if MenuUI.mode=M_ENGINE_LOADING and UI_FadeManager.state=UI_NORMAL:
                Client.state = JOINING
                ui_Writelog(UI_Blue,"Client: triggered join")
            endif
        endcase
        case JOINING
            //recieve initial data
            Client.mapfile = ""
            if Game_Running = 1:
                //check to see if game is also a server
                if Network.GameServer = 1:
                    //don't load a new level
                    ui_Writelog(UI_Blue,"Client: running server in localhost.")
                    ui_Writelog(UI_Blue,"didn't start a new level.")
                else
                    //delete the old level and load the new one
                    Game_End()
                    Game_Load(Client.mapfile)
                    ui_Writelog(UI_Blue,"Client: reloaded level "+Client.mapfile)
                endif
            else:
                Game_Load(Client.mapfile)
                ui_Writelog(UI_Blue,"Client: loaded" + Client.mapfile)
            endif
            Client.state = IDLE
        endcase
        case IDLE
        endcase
    endselect
ENDFUNCTION

function Client_Terminate():
    ui_Writelog(UI_Blue,"Client: terminated")
    Game_End()
ENDFUNCTION
        
//////////////////////////////////////////////////////////////
//  End of code
//////////////////////////////////////////////////////////////