//////////////////////////////////////////////////////////////
//  Game Engine Standard Modules - MDL MODULE
//  Concept and code by thenerd, Spring 2013!
//////////////////////////////////////////////////////////////
remstart
The model system will consist of two parts. the first part is
the database system, which will be a list of models that has
been loaded. These master copies will be invisible. the second
part will be the visible world models, which will be duplicated
from the database list.
remend
//////////////////////////////////////////////////////////////
// Constants
//////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////
// UDTS
//////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////
// Main Functions
//////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////
// Entity System Model
//////////////////////////////////////////////////////////////

function Entity_Model_Add(x#,y#,z#)
    i = 0
    while ent_Getexists("ent_model_"+str$(i))
        i = i + 1
    endwhile
    entAdd("ent_model_"+str$(i))
    ref = entgetreference("ent_model_"+str$(i))
    entAddAttribute(ref,"name","ent_model_"+str$(i))
    entAddAttribute(ref,"type","ent_model")
    entAddAttribute(ref,"modelname","Media\models\text_error\error2.x")
    entAddAttribute(ref,"x",str$(x#))
    entAddAttribute(ref,"y",str$(y#))
    entAddAttribute(ref,"z",str$(z#))
    entAddAttribute(ref,"rx",str$(0))
    entAddAttribute(ref,"ry",str$(0))
    entAddAttribute(ref,"rz",str$(0))
    entAddAttribute(ref,"sx",str$(100))
    entAddAttribute(ref,"sy",str$(100))
    entAddAttribute(ref,"sz",str$(100))
endfunction

function Entity_Model_Update(i)
    if Ent_GetInt(i,"modelid")=0:
        modelid = reserve free object()
        entAddAttribute(i,"modelid",str$(modelid))
        entAddAttribute(i,"modelloaded","0")
        make object cube modelid,1
        `ui_writelog(UI_Blue,"Set modelid for "+Entities(i).name)
    else
        if Ent_GetInt(i,"modelloaded")=0:
            file$ = EntGetAttribute(i,"modelname")
            if file exist(file$):
                delete object Ent_GetInt(i,"modelid")
                entSetAttribute(i,"modelloaded","1")
                load object file$,Ent_GetInt(i,"modelid")
            `ui_writelog(UI_Blue,"Loaded model for "+Entities(i).name)
            endif
        endif
        position object Ent_GetInt(i,"modelid"),Ent_GetFloat(i,"x"),Ent_GetFloat(i,"y"),Ent_GetFloat(i,"z")
        rotate object Ent_GetInt(i,"modelid"),Ent_GetFloat(i,"rx"),Ent_GetFloat(i,"ry"),Ent_GetFloat(i,"rz")
        scale object Ent_GetInt(i,"modelid"),Ent_GetFloat(i,"sx"),Ent_GetFloat(i,"sy"),Ent_GetFloat(i,"sz")
    endif
endfunction

//reload model:

function Entity_Model_Set(i,file$):
    EntSetAttribute(i,"modelname",file$)
    entSetAttribute(i,"modelloaded","0")
endfunction

function Entity_Model_Delete(i)
    modelid = Ent_GetInt(i,"modelid")
    delete object modelid
ENDFUNCTION

//////////////////////////////////////////////////////////////
// End of code
//////////////////////////////////////////////////////////////
